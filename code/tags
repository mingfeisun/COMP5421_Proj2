!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABS	.\vlfeat\src\test_mathop.c	21;"	d	file:
ABS	.\vlfeat\src\test_mathop.c	25;"	d	file:
ABS	.\vlfeat\src\test_mathop.c	35;"	d	file:
ABS	.\vlfeat\src\test_mathop.c	39;"	d	file:
ABS	.\vlfeat\toolbox\misc\vl_alldist2.c	61;"	d	file:
ABS	.\vlfeat\toolbox\misc\vl_alldist2.c	67;"	d	file:
ABS_DIFF	.\vlfeat\toolbox\misc\vl_alldist2.c	62;"	d	file:
ABS_DIFF	.\vlfeat\toolbox\misc\vl_alldist2.c	68;"	d	file:
ARCH	.\vlfeat\Makefile.mak	/^ARCH = win64$/;"	m
Aat	.\vlfeat\vl\covdet.c	1219;"	d	file:
Aat	.\vlfeat\vl\covdet.c	1316;"	d	file:
Aat	.\vlfeat\vl\covdet.c	1344;"	d	file:
Aat	.\vlfeat\vl\covdet.c	1424;"	d	file:
Aat	.\vlfeat\vl\mathop.c	912;"	d	file:
Aat	.\vlfeat\vl\sift.c	1295;"	d	file:
B	.\vlfeat\docsrc\formatter.py	/^class B (Terminal):$/;"	c
BADARG	.\vlfeat\vl\getopt_long.c	37;"	d	file:
BADCH	.\vlfeat\vl\getopt_long.c	36;"	d	file:
BETA_MAX	.\vlfeat\vl\aib.c	127;"	d	file:
BINDIR	.\vlfeat\make\dll.mak	/^BINDIR = bin\/$(ARCH)$/;"	m
BINDIST	.\vlfeat\make\dist.mak	/^BINDIST := $(DIST)-bin$/;"	m
BIN_CFLAGS	.\vlfeat\make\bin.mak	/^BIN_CFLAGS = $(STD_CFLAGS) -I$(VLDIR)$/;"	m
BIN_LDFLAGS	.\vlfeat\make\bin.mak	/^BIN_LDFLAGS = $(STD_LDFLAGS) -L$(BINDIR) -lvl -lm$/;"	m
BL	.\vlfeat\docsrc\formatter.py	/^class BL (L):$/;"	c
BRANCH	.\vlfeat\Makefile.mak	/^BRANCH = v$(VER)-$(ARCH)$/;"	m
BUILD_MEX	.\vlfeat\Makefile.mak	/^BUILD_MEX=@echo .... CC [MEX] $(@) && \\$/;"	m
CC	.\vlfeat\Makefile.mak	/^CC = "$(MSVCROOT)\\bin\\amd64\\cl.exe"$/;"	m
CC	.\vlfeat\Makefile.mak	/^CC = "$(MSVCROOT)\\bin\\cl.exe"$/;"	m
CFLAGS	.\vlfeat\Makefile.mak	/^CFLAGS = $(CFLAGS) \/D"NDEBUG" \/Ox$/;"	m
CFLAGS	.\vlfeat\Makefile.mak	/^CFLAGS = $(CFLAGS) \/Z7 \/D"DEBUG"$/;"	m
CFLAGS	.\vlfeat\Makefile.mak	/^CFLAGS = \/nologo \/TC \/MD \\$/;"	m
CHECK_NEIGHBORS	.\vlfeat\vl\sift.c	1199;"	d	file:
CHECK_NEIGHBORS_2	.\vlfeat\vl\covdet.c	1159;"	d	file:
CHECK_NEIGHBORS_3	.\vlfeat\vl\covdet.c	1071;"	d	file:
CLASS	.\vlfeat\toolbox\misc\vl_binsum.c	63;"	d	file:
CLASS	.\vlfeat\toolbox\misc\vl_cummax.c	51;"	d	file:
CLASS_1	.\vlfeat\toolbox\misc\vl_binsum.c	52;"	d	file:
CLASS_1	.\vlfeat\toolbox\misc\vl_cummax.c	40;"	d	file:
CLASS_10	.\vlfeat\toolbox\misc\vl_binsum.c	61;"	d	file:
CLASS_10	.\vlfeat\toolbox\misc\vl_cummax.c	49;"	d	file:
CLASS_2	.\vlfeat\toolbox\misc\vl_binsum.c	53;"	d	file:
CLASS_2	.\vlfeat\toolbox\misc\vl_cummax.c	41;"	d	file:
CLASS_3	.\vlfeat\toolbox\misc\vl_binsum.c	54;"	d	file:
CLASS_3	.\vlfeat\toolbox\misc\vl_cummax.c	42;"	d	file:
CLASS_4	.\vlfeat\toolbox\misc\vl_binsum.c	55;"	d	file:
CLASS_4	.\vlfeat\toolbox\misc\vl_cummax.c	43;"	d	file:
CLASS_5	.\vlfeat\toolbox\misc\vl_binsum.c	56;"	d	file:
CLASS_5	.\vlfeat\toolbox\misc\vl_cummax.c	44;"	d	file:
CLASS_6	.\vlfeat\toolbox\misc\vl_binsum.c	57;"	d	file:
CLASS_6	.\vlfeat\toolbox\misc\vl_cummax.c	45;"	d	file:
CLASS_7	.\vlfeat\toolbox\misc\vl_binsum.c	58;"	d	file:
CLASS_7	.\vlfeat\toolbox\misc\vl_cummax.c	46;"	d	file:
CLASS_8	.\vlfeat\toolbox\misc\vl_binsum.c	59;"	d	file:
CLASS_8	.\vlfeat\toolbox\misc\vl_cummax.c	47;"	d	file:
CLASS_9	.\vlfeat\toolbox\misc\vl_binsum.c	60;"	d	file:
CLASS_9	.\vlfeat\toolbox\misc\vl_cummax.c	48;"	d	file:
CLASS_AUX	.\vlfeat\toolbox\misc\vl_binsum.c	62;"	d	file:
CLASS_AUX	.\vlfeat\toolbox\misc\vl_cummax.c	50;"	d	file:
CLUSTER_NULL_NODES	.\vlfeat\toolbox\aib\vl_aib.c	36;"	d	file:
CMP	.\vlfeat\toolbox\misc\vl_alldist2.c	78;"	d	file:
COMPARISONFUNCTION3_TYPE	.\vlfeat\vl\mathop.c	285;"	d	file:
COMPARISONFUNCTION3_TYPE	.\vlfeat\vl\mathop.c	288;"	d	file:
COMPARISONFUNCTION3_TYPE	.\vlfeat\vl\mathop.c	291;"	d	file:
COMPARISONFUNCTION_TYPE	.\vlfeat\vl\mathop.c	284;"	d	file:
COMPARISONFUNCTION_TYPE	.\vlfeat\vl\mathop.c	287;"	d	file:
COMPARISONFUNCTION_TYPE	.\vlfeat\vl\mathop.c	290;"	d	file:
CONVERT	.\vlfeat\make\doc.mak	/^CONVERT    ?= convert$/;"	m
CORE	.\vlfeat\toolbox\misc\vl_alldist2.c	63;"	d	file:
CORE	.\vlfeat\toolbox\misc\vl_alldist2.c	89;"	d	file:
CORE_SPARSE	.\vlfeat\toolbox\misc\vl_alldist2.c	119;"	d	file:
ContentHandler	.\vlfeat\docsrc\webdoc.py	/^from xml.sax.handler import ContentHandler$/;"	i
DEBUG	.\vlfeat\Makefile.mak	/^DEBUG = no$/;"	m
DEFAULT_INTENSITY_THRESHOLD	.\vlfeat\vl\liop.c	208;"	d	file:
DEFAULT_NUM_NEIGHBOURS	.\vlfeat\vl\liop.c	211;"	d	file:
DEFAULT_NUM_SPATIAL_BINS	.\vlfeat\vl\liop.c	210;"	d	file:
DEFAULT_RADIUS	.\vlfeat\vl\liop.c	209;"	d	file:
DEF_CLASS	.\vlfeat\toolbox\misc\vl_alldist2.c	/^DEF_CLASS (LINF,  F_LINF )$/;"	f
DEF_CLASS	.\vlfeat\toolbox\misc\vl_alldist2.c	203;"	d	file:
DESCRIPTION	.\vlfeat\doc\build\man\mser.1.html	/^<a name="DESCRIPTION" id="DESCRIPTION"><\/a>$/;"	a
DESCRIPTION	.\vlfeat\doc\build\man\sift.1.html	/^<a name="DESCRIPTION" id="DESCRIPTION"><\/a>$/;"	a
DESCRIPTION	.\vlfeat\doc\build\man\vlfeat.7.html	/^<a name="DESCRIPTION"><\/a>$/;"	a
DESCRIPTION	.\vlfeat\doc\man\mser.html	/^<a shape="rect" name="DESCRIPTION" id="DESCRIPTION"><\/a>$/;"	a
DESCRIPTION	.\vlfeat\doc\man\sift.html	/^<a shape="rect" name="DESCRIPTION" id="DESCRIPTION"><\/a>$/;"	a
DESCRIPTION	.\vlfeat\doc\man\vlfeat.html	/^<a shape="rect" name="DESCRIPTION"><\/a>$/;"	a
DISPATCH	.\vlfeat\toolbox\misc\vl_binsum.c	117;"	d	file:
DISPATCH	.\vlfeat\toolbox\misc\vl_cummax.c	123;"	d	file:
DISPATCH_CLASS	.\vlfeat\toolbox\misc\vl_alldist2.c	369;"	d	file:
DISPATCH_NORM	.\vlfeat\toolbox\misc\vl_alldist2.c	381;"	d	file:
DISPATCH_VALUE	.\vlfeat\toolbox\misc\vl_binsum.c	121;"	d	file:
DIST	.\vlfeat\make\dist.mak	/^DIST := $(NAME)-$(VER)$/;"	m
DL	.\vlfeat\docsrc\formatter.py	/^class DL (L):$/;"	c
DLL_CFLAGS	.\vlfeat\Makefile.mak	/^DLL_CFLAGS = \/D"VL_BUILD_DLL"$/;"	m
DLL_CFLAGS	.\vlfeat\make\dll.mak	/^DLL_CFLAGS = \\$/;"	m
DLL_LDFLAGS	.\vlfeat\make\dll.mak	/^DLL_LDFLAGS = \\$/;"	m
DLL_NAME	.\vlfeat\make\dll.mak	/^DLL_NAME = vl$/;"	m
DLL_SUFFIX	.\vlfeat\make\dll.mak	/^DLL_SUFFIX := dylib$/;"	m
DLL_SUFFIX	.\vlfeat\make\dll.mak	/^DLL_SUFFIX := so$/;"	m
DO	.\vlfeat\toolbox\imop\vl_imintegral.c	87;"	d	file:
DOCTYPE_XHTML_TRANSITIONAL	.\vlfeat\docsrc\webdoc.py	/^    '"http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-transitional.dtd">'$/;"	v
DOM	.\vlfeat\vl\rodrigues.c	196;"	d	file:
DOM	.\vlfeat\vl\rodrigues.c	326;"	d	file:
DOUBLE_t	.\vlfeat\toolbox\misc\vl_alldist2.c	87;"	d	file:
DOXYGEN	.\vlfeat\make\doc.mak	/^DOXYGEN    ?= doxygen$/;"	m
DR	.\vlfeat\vl\rodrigues.c	163;"	d	file:
DR	.\vlfeat\vl\rodrigues.c	55;"	d	file:
DiagnosticOpts	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^} DiagnosticOpts ;$/;"	t	typeref:struct:DiagnsoticOpts_	file:
DiagnsoticOpts_	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^typedef struct DiagnsoticOpts_$/;"	s	file:
DirectedPolarField	.\vlfeat\toolbox\misc\vl_hog.c	/^enum InputType {Image, DirectedPolarField, UndirectedPolarField} ;$/;"	e	enum:InputType	file:
DllMain	.\vlfeat\vl\generic.c	/^BOOL WINAPI DllMain($/;"	f
DocBareNode	.\vlfeat\docsrc\webdoc.py	/^class DocBareNode:$/;"	c
DocCDATA	.\vlfeat\docsrc\webdoc.py	/^class DocCDATA(DocNode):$/;"	c
DocCDATAText	.\vlfeat\docsrc\webdoc.py	/^class DocCDATAText(DocBareNode):$/;"	c
DocCode	.\vlfeat\docsrc\webdoc.py	/^class DocCode(DocNode):$/;"	c
DocCodeText	.\vlfeat\docsrc\webdoc.py	/^class DocCodeText(DocBareNode):$/;"	c
DocDir	.\vlfeat\docsrc\webdoc.py	/^class DocDir(DocNode):$/;"	c
DocError	.\vlfeat\docsrc\webdoc.py	/^class DocError(BaseException):$/;"	c
DocGroup	.\vlfeat\docsrc\webdoc.py	/^class DocGroup(DocNode):$/;"	c
DocHandler	.\vlfeat\docsrc\webdoc.py	/^class DocHandler(ContentHandler):$/;"	c
DocHtmlElement	.\vlfeat\docsrc\webdoc.py	/^class DocHtmlElement(DocNode):$/;"	c
DocHtmlText	.\vlfeat\docsrc\webdoc.py	/^class DocHtmlText(DocBareNode):$/;"	c
DocInclude	.\vlfeat\docsrc\webdoc.py	/^class DocInclude(DocNode):$/;"	c
DocLocation	.\vlfeat\docsrc\webdoc.py	/^class DocLocation:$/;"	c
DocNode	.\vlfeat\docsrc\webdoc.py	/^class DocNode(DocBareNode):$/;"	c
DocPage	.\vlfeat\docsrc\webdoc.py	/^class DocPage(DocNode):$/;"	c
DocPageScript	.\vlfeat\docsrc\webdoc.py	/^class DocPageScript(DocNode):$/;"	c
DocPageStyle	.\vlfeat\docsrc\webdoc.py	/^class DocPageStyle(DocNode):$/;"	c
DocSite	.\vlfeat\docsrc\webdoc.py	/^class DocSite(DocNode):$/;"	c
DocTemplate	.\vlfeat\docsrc\webdoc.py	/^class DocTemplate(DocNode):$/;"	c
Doxytag	.\vlfeat\docsrc\doxytag.py	/^class Doxytag:$/;"	c
Doxytag	.\vlfeat\docsrc\webdoc.py	/^from doxytag         import Doxytag$/;"	i
E	.\vlfeat\docsrc\formatter.py	/^class E (Terminal):$/;"	c
EEND	.\vlfeat\vl\getopt_long.c	38;"	d	file:
EMSG	.\vlfeat\vl\getopt_long.c	39;"	d	file:
ERR	.\vlfeat\src\mser.c	117;"	d	file:
ERR	.\vlfeat\src\sift.c	207;"	d	file:
ERRF	.\vlfeat\src\mser.c	111;"	d	file:
ERRF	.\vlfeat\src\sift.c	201;"	d	file:
EXAMPLES	.\vlfeat\doc\build\man\mser.1.html	/^<a name="EXAMPLES" id="EXAMPLES"><\/a>$/;"	a
EXAMPLES	.\vlfeat\doc\build\man\sift.1.html	/^<a name="EXAMPLES" id="EXAMPLES"><\/a>$/;"	a
EXAMPLES	.\vlfeat\doc\man\mser.html	/^<a shape="rect" name="EXAMPLES" id="EXAMPLES"><\/a>$/;"	a
EXAMPLES	.\vlfeat\doc\man\sift.html	/^<a shape="rect" name="EXAMPLES" id="EXAMPLES"><\/a>$/;"	a
EXE_LFLAGS	.\vlfeat\Makefile.mak	/^EXE_LFLAGS = $(LFLAGS) \/LIBPATH:"$(bindir)" vl.lib$/;"	m
EXPN_MAX	.\vlfeat\vl\sift.c	672;"	d	file:
EXPN_SZ	.\vlfeat\vl\sift.c	671;"	d	file:
ExtractFeatures	.\vlfeat\toolbox\misc\vl_hog.c	/^enum Mode {ExtractFeatures, Render, GetPermutation} ;$/;"	e	enum:Mode	file:
FIG2DEV	.\vlfeat\make\doc.mak	/^FIG2DEV    ?= fig2dev$/;"	m
FILE SPECIFIERS (FILESPEC)	.\vlfeat\doc\build\man\vlfeat.7.html	/^<a name="FILE SPECIFIERS (FILESPEC)"><\/a>$/;"	a
FILE SPECIFIERS (FILESPEC)	.\vlfeat\doc\man\vlfeat.html	/^<a shape="rect" name="FILE SPECIFIERS (FILESPEC)"><\/a>$/;"	a
FLT	.\vlfeat\toolbox\imop\vl_imsmooth.c	123;"	d	file:
FLT	.\vlfeat\toolbox\imop\vl_imsmooth.c	163;"	d	file:
FLT	.\vlfeat\toolbox\imop\vl_imsmooth.c	167;"	d	file:
FLT	.\vlfeat\vl\fisher.c	494;"	d	file:
FLT	.\vlfeat\vl\fisher.c	500;"	d	file:
FLT	.\vlfeat\vl\fisher.c	585;"	d	file:
FLT	.\vlfeat\vl\gmm.c	1450;"	d	file:
FLT	.\vlfeat\vl\gmm.c	1456;"	d	file:
FLT	.\vlfeat\vl\gmm.c	1708;"	d	file:
FLT	.\vlfeat\vl\homkermap.c	514;"	d	file:
FLT	.\vlfeat\vl\homkermap.c	518;"	d	file:
FLT	.\vlfeat\vl\homkermap.c	577;"	d	file:
FLT	.\vlfeat\vl\imopv.c	1072;"	d	file:
FLT	.\vlfeat\vl\imopv.c	41;"	d	file:
FLT	.\vlfeat\vl\imopv.c	45;"	d	file:
FLT	.\vlfeat\vl\imopv.c	49;"	d	file:
FLT	.\vlfeat\vl\imopv.c	53;"	d	file:
FLT	.\vlfeat\vl\imopv_sse2.c	27;"	d	file:
FLT	.\vlfeat\vl\imopv_sse2.c	284;"	d	file:
FLT	.\vlfeat\vl\imopv_sse2.c	31;"	d	file:
FLT	.\vlfeat\vl\kmeans.c	1778;"	d	file:
FLT	.\vlfeat\vl\kmeans.c	1784;"	d	file:
FLT	.\vlfeat\vl\kmeans.c	2100;"	d	file:
FLT	.\vlfeat\vl\mathop.c	269;"	d	file:
FLT	.\vlfeat\vl\mathop.c	270;"	d	file:
FLT	.\vlfeat\vl\mathop.c	274;"	d	file:
FLT	.\vlfeat\vl\mathop.c	275;"	d	file:
FLT	.\vlfeat\vl\mathop_avx.c	19;"	d	file:
FLT	.\vlfeat\vl\mathop_avx.c	20;"	d	file:
FLT	.\vlfeat\vl\mathop_avx.c	24;"	d	file:
FLT	.\vlfeat\vl\mathop_avx.c	25;"	d	file:
FLT	.\vlfeat\vl\mathop_avx.h	20;"	d
FLT	.\vlfeat\vl\mathop_avx.h	21;"	d
FLT	.\vlfeat\vl\mathop_avx.h	25;"	d
FLT	.\vlfeat\vl\mathop_avx.h	26;"	d
FLT	.\vlfeat\vl\mathop_sse2.c	19;"	d	file:
FLT	.\vlfeat\vl\mathop_sse2.c	20;"	d	file:
FLT	.\vlfeat\vl\mathop_sse2.c	24;"	d	file:
FLT	.\vlfeat\vl\mathop_sse2.c	25;"	d	file:
FLT	.\vlfeat\vl\mathop_sse2.h	20;"	d
FLT	.\vlfeat\vl\mathop_sse2.h	21;"	d
FLT	.\vlfeat\vl\mathop_sse2.h	25;"	d
FLT	.\vlfeat\vl\mathop_sse2.h	26;"	d
FLT	.\vlfeat\vl\svmdataset.c	115;"	d	file:
FLT	.\vlfeat\vl\svmdataset.c	119;"	d	file:
FLT	.\vlfeat\vl\svmdataset.c	403;"	d	file:
FLT	.\vlfeat\vl\vlad.c	248;"	d	file:
FLT	.\vlfeat\vl\vlad.c	254;"	d	file:
FLT	.\vlfeat\vl\vlad.c	322;"	d	file:
F_CHI2	.\vlfeat\toolbox\misc\vl_alldist2.c	217;"	d	file:
F_HELL	.\vlfeat\toolbox\misc\vl_alldist2.c	233;"	d	file:
F_HELL_DOUBLE	.\vlfeat\toolbox\misc\vl_alldist2.c	226;"	d	file:
F_HELL_INT16	.\vlfeat\toolbox\misc\vl_alldist2.c	230;"	d	file:
F_HELL_INT32	.\vlfeat\toolbox\misc\vl_alldist2.c	228;"	d	file:
F_HELL_INT8	.\vlfeat\toolbox\misc\vl_alldist2.c	232;"	d	file:
F_HELL_SINGLE	.\vlfeat\toolbox\misc\vl_alldist2.c	225;"	d	file:
F_HELL_UINT16	.\vlfeat\toolbox\misc\vl_alldist2.c	229;"	d	file:
F_HELL_UINT32	.\vlfeat\toolbox\misc\vl_alldist2.c	227;"	d	file:
F_HELL_UINT8	.\vlfeat\toolbox\misc\vl_alldist2.c	231;"	d	file:
F_KCHI2	.\vlfeat\toolbox\misc\vl_alldist2.c	238;"	d	file:
F_KHELL	.\vlfeat\toolbox\misc\vl_alldist2.c	254;"	d	file:
F_KHELL_DOUBLE	.\vlfeat\toolbox\misc\vl_alldist2.c	247;"	d	file:
F_KHELL_INT16	.\vlfeat\toolbox\misc\vl_alldist2.c	251;"	d	file:
F_KHELL_INT32	.\vlfeat\toolbox\misc\vl_alldist2.c	249;"	d	file:
F_KHELL_INT8	.\vlfeat\toolbox\misc\vl_alldist2.c	253;"	d	file:
F_KHELL_SINGLE	.\vlfeat\toolbox\misc\vl_alldist2.c	246;"	d	file:
F_KHELL_UINT16	.\vlfeat\toolbox\misc\vl_alldist2.c	250;"	d	file:
F_KHELL_UINT32	.\vlfeat\toolbox\misc\vl_alldist2.c	248;"	d	file:
F_KHELL_UINT8	.\vlfeat\toolbox\misc\vl_alldist2.c	252;"	d	file:
F_KL1	.\vlfeat\toolbox\misc\vl_alldist2.c	236;"	d	file:
F_KL2	.\vlfeat\toolbox\misc\vl_alldist2.c	235;"	d	file:
F_L0	.\vlfeat\toolbox\misc\vl_alldist2.c	213;"	d	file:
F_L1	.\vlfeat\toolbox\misc\vl_alldist2.c	214;"	d	file:
F_L2	.\vlfeat\toolbox\misc\vl_alldist2.c	215;"	d	file:
F_LINF	.\vlfeat\toolbox\misc\vl_alldist2.c	216;"	d	file:
F_MIN	.\vlfeat\toolbox\misc\vl_alldist2.c	237;"	d	file:
Formatter	.\vlfeat\docsrc\formatter.py	/^class Formatter:$/;"	c
Formatter	.\vlfeat\docsrc\mdoc.py	/^from formatter import Formatter$/;"	i
GAUSSIAN	.\vlfeat\toolbox\imop\vl_imsmooth.c	/^enum {GAUSSIAN, TRIANGULAR} ;$/;"	e	enum:__anon11	file:
GET_NN_SCALAR	.\vlfeat\toolbox\misc\vl_svmtrain.c	407;"	d	file:
GET_SCALAR	.\vlfeat\toolbox\misc\vl_svmtrain.c	401;"	d	file:
GIT	.\vlfeat\Makefile.mak	/^GIT = git$/;"	m
GIT	.\vlfeat\make\dist.mak	/^GIT ?= git$/;"	m
GROFF	.\vlfeat\make\doc.mak	/^GROFF      ?= groff$/;"	m
Generator	.\vlfeat\docsrc\webdoc.py	/^class Generator:$/;"	c
GetPermutation	.\vlfeat\toolbox\misc\vl_hog.c	/^enum Mode {ExtractFeatures, Render, GetPermutation} ;$/;"	e	enum:Mode	file:
H	.\vlfeat\src\test_heap-def.c	/^} H ;$/;"	t	typeref:struct:_H	file:
HAS_CPUID	.\vlfeat\vl\host.c	401;"	d	file:
HAS_CPUID	.\vlfeat\vl\host.c	403;"	d	file:
HOST	.\vlfeat\make\dist.mak	/^HOST := vlfeat-admin:vlfeat.org\/sandbox$/;"	m
IMCONVCOL	.\vlfeat\toolbox\imop\vl_imsmooth.c	125;"	d	file:
IMCONVCOL	.\vlfeat\toolbox\imop\vl_imsmooth.c	21;"	d	file:
IMCONVCOL	.\vlfeat\toolbox\imop\vl_imsmooth.c	24;"	d	file:
IMCONVCOLTRI	.\vlfeat\toolbox\imop\vl_imsmooth.c	124;"	d	file:
IMCONVCOLTRI	.\vlfeat\toolbox\imop\vl_imsmooth.c	22;"	d	file:
IMCONVCOLTRI	.\vlfeat\toolbox\imop\vl_imsmooth.c	25;"	d	file:
IN	.\vlfeat\toolbox\mexutils.h	38;"	d
IN	.\vlfeat\toolbox\mexutils.h	39;"	d
INIT_PLUSPLUS	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  INIT_PLUSPLUS$/;"	e	enum:__anon17	file:
INIT_RANDSEL	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  INIT_RANDSEL,$/;"	e	enum:__anon17	file:
INT16_t	.\vlfeat\toolbox\misc\vl_alldist2.c	83;"	d	file:
INT32_t	.\vlfeat\toolbox\misc\vl_alldist2.c	85;"	d	file:
INT8_t	.\vlfeat\toolbox\misc\vl_alldist2.c	81;"	d	file:
IN_OM	.\vlfeat\toolbox\geometry\vl_rodr.c	/^  IN_OM = 0$/;"	e	enum:__anon7	file:
IN_R	.\vlfeat\toolbox\geometry\vl_irodr.c	/^  IN_R = 0$/;"	e	enum:__anon5	file:
Image	.\vlfeat\toolbox\misc\vl_hog.c	/^enum InputType {Image, DirectedPolarField, UndirectedPolarField} ;$/;"	e	enum:InputType	file:
InputType	.\vlfeat\toolbox\misc\vl_hog.c	/^enum InputType {Image, DirectedPolarField, UndirectedPolarField} ;$/;"	g	file:
K	.\vlfeat\vl\hikmeans.h	/^  vl_size K ; \/**< IKM: K *\/$/;"	m	struct:_VlHIKMTree
K	.\vlfeat\vl\ikmeans.h	/^  vl_size K ; \/**< number of centers   *\/$/;"	m	struct:_VlIKMFilt
L	.\vlfeat\docsrc\formatter.py	/^class L (Terminal):$/;"	c
LFLAGS	.\vlfeat\Makefile.mak	/^LFLAGS = $(LFLAGS) \/DEBUG$/;"	m
LFLAGS	.\vlfeat\Makefile.mak	/^LFLAGS = $(LFLAGS) \/NOLOGO \\$/;"	m
LFLAGS	.\vlfeat\Makefile.mak	/^LFLAGS = \/MACHINE:X64 \\$/;"	m
LFLAGS	.\vlfeat\Makefile.mak	/^LFLAGS = \/MACHINE:X86 \\$/;"	m
LINK	.\vlfeat\Makefile.mak	/^LINK = "$(MSVCROOT)\\bin\\amd64\\link.exe"$/;"	m
LINK	.\vlfeat\Makefile.mak	/^LINK = "$(MSVCROOT)\\bin\\link.exe"$/;"	m
LINK_DLL_CFLAGS	.\vlfeat\make\dll.mak	/^LINK_DLL_CFLAGS = \\$/;"	m
LINK_DLL_LDFLAGS	.\vlfeat\make\dll.mak	/^LINK_DLL_LDFLAGS =\\$/;"	m
LL	.\vlfeat\vl\gmm.c	/^  double LL ;                         \/**< Current solution loglikelihood *\/$/;"	m	struct:_VlGMM	file:
LOWER_MASK	.\vlfeat\vl\random.c	123;"	d	file:
Lexer	.\vlfeat\docsrc\formatter.py	/^class Lexer(object):$/;"	c
M	.\vlfeat\vl\hikmeans.h	/^  vl_size M ; \/**< IKM: data dimensionality *\/$/;"	m	struct:_VlHIKMTree
M	.\vlfeat\vl\ikmeans.h	/^  vl_size M ; \/**< data dimensionality *\/$/;"	m	struct:_VlIKMFilt
M	.\vlfeat\vl\random.c	120;"	d	file:
MATLABROOT	.\vlfeat\Makefile.mak	/^MATLABROOT = C:\\Program Files (x86)\\MATLAB\\R2010b$/;"	m
MATLABROOT	.\vlfeat\Makefile.mak	/^MATLABROOT = C:\\Program Files\\MATLAB\\R2010b$/;"	m
MATLAB_EXE	.\vlfeat\make\matlab.mak	/^MATLAB_EXE ?= "$(MATLAB_PATH)\/bin\/matlab"$/;"	m
MATLAB_PATH	.\vlfeat\make\matlab.mak	/^MATLAB_PATH := $(MATLAB_PATH)$/;"	m
MATLAB_PATH	.\vlfeat\make\matlab.mak	/^MATLAB_PATH ?= $(subst \/bin\/mex,,$(realpath $(shell which '$(MEX)')))$/;"	m
MATLAB_PATH	.\vlfeat\make\matlab.mak	/^MATLAB_PATH=$/;"	m
MATLAB_VER	.\vlfeat\make\matlab.mak	/^MATLAB_VER ?= 0 # will be determined automatically$/;"	m
MATRIX_A	.\vlfeat\vl\random.c	121;"	d	file:
MAX	.\vlfeat\toolbox\misc\vl_alldist2.c	60;"	d	file:
MAX	.\vlfeat\toolbox\misc\vl_alldist2.c	66;"	d	file:
MAX	.\vlfeat\toolbox\mser\vl_erfill.c	27;"	d	file:
MAXVAL_mxDOUBLE_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	33;"	d	file:
MAXVAL_mxINT8_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	35;"	d	file:
MAXVAL_mxSINGLE_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	34;"	d	file:
MAXVAL_mxUINT8_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	36;"	d	file:
MEX	.\vlfeat\Makefile.mak	/^MEX = "$(MATLABROOT)\\bin\\mex.bat"$/;"	m
MEX	.\vlfeat\make\matlab.mak	/^MEX ?= mex$/;"	m
MEXEXT	.\vlfeat\Makefile.mak	/^MEXEXT = mexw32$/;"	m
MEXEXT	.\vlfeat\Makefile.mak	/^MEXEXT = mexw64$/;"	m
MEXOPT	.\vlfeat\Makefile.mak	/^MEXOPT = "$(MATLABROOT)\\bin\\win32\\mexopts\\msvc$(MSVSVER)opts.bat"$/;"	m
MEXOPT	.\vlfeat\Makefile.mak	/^MEXOPT = "$(MATLABROOT)\\bin\\win64\\mexopts\\msvc$(MSVSVER)opts.bat"$/;"	m
MEXUTILS_H	.\vlfeat\toolbox\mexutils.h	15;"	d
MEXUTILS_RAISE_HELPER	.\vlfeat\toolbox\mexutils.h	240;"	d
MEXUTILS_RAISE_HELPER_A	.\vlfeat\toolbox\mexutils.h	183;"	d
MEXUTILS_RAISE_HELPER_B	.\vlfeat\toolbox\mexutils.h	215;"	d
MEXUTILS_RAISE_HELPER_B	.\vlfeat\toolbox\mexutils.h	226;"	d
MEX_ARCH	.\vlfeat\make\matlab.mak	/^MEX_ARCH = $(ARCH)$/;"	m
MEX_BINDIR	.\vlfeat\make\matlab.mak	/^MEX_BINDIR := toolbox\/mex\/$(MEX_SUFFIX)$/;"	m
MEX_CFLAGS	.\vlfeat\make\matlab.mak	/^MEX_CFLAGS = $(LINK_DLL_CFLAGS) -Itoolbox$/;"	m
MEX_FLAGS	.\vlfeat\Makefile.mak	/^MEX_FLAGS = $(MEX_FLAGS) -f $(MEXOPT) -I. -Itoolbox -L"$(bindir)" -lvl$/;"	m
MEX_FLAGS	.\vlfeat\Makefile.mak	/^MEX_FLAGS = $(MEX_FLAGS) -g$/;"	m
MEX_FLAGS	.\vlfeat\Makefile.mak	/^MEX_FLAGS = -largeArrayDims$/;"	m
MEX_FLAGS	.\vlfeat\Makefile.mak	/^MEX_FLAGS =$/;"	m
MEX_FLAGS	.\vlfeat\make\matlab.mak	/^MEX_FLAGS := $(MEX_FLAGS)$/;"	m
MEX_FLAGS	.\vlfeat\make\matlab.mak	/^MEX_FLAGS = \\$/;"	m
MEX_LDFLAGS	.\vlfeat\make\matlab.mak	/^MEX_LDFLAGS = $(subst bin\/$(ARCH),toolbox\/mex\/$(MEX_SUFFIX),$(LINK_DLL_LDFLAGS)) -lm$/;"	m
MEX_SUFFIX	.\vlfeat\make\matlab.mak	/^MEX_SUFFIX := mexa64$/;"	m
MEX_SUFFIX	.\vlfeat\make\matlab.mak	/^MEX_SUFFIX := mexglx$/;"	m
MEX_SUFFIX	.\vlfeat\make\matlab.mak	/^MEX_SUFFIX := mexmaci$/;"	m
MEX_SUFFIX	.\vlfeat\make\matlab.mak	/^MEX_SUFFIX := mexmaci64$/;"	m
MFile	.\vlfeat\docsrc\mdoc.py	/^class MFile:$/;"	c
MIN	.\vlfeat\toolbox\misc\vl_alldist2.c	59;"	d	file:
MIN	.\vlfeat\toolbox\misc\vl_alldist2.c	65;"	d	file:
MIN	.\vlfeat\toolbox\mser\vl_erfill.c	26;"	d	file:
MKOCTFILE	.\vlfeat\make\octave.mak	/^MKOCTFILE ?=$/;"	m
MSVCR	.\vlfeat\Makefile.mak	/^MSVCR = Microsoft.VC$(MSVSVER).CRT$/;"	m
MSVCROOT	.\vlfeat\Makefile.mak	/^MSVCROOT = $(VCINSTALLDIR)$/;"	m
MSVCROOT	.\vlfeat\Makefile.mak	/^MSVCROOT = C:\\Program Files\\Microsoft Visual Studio 10.0\\VC$/;"	m
MSVCR_PATH	.\vlfeat\Makefile.mak	/^MSVCR_PATH = $(MSVCROOT)\\redist\\amd64\\Microsoft.VC$(MSVSVER).CRT$/;"	m
MSVCR_PATH	.\vlfeat\Makefile.mak	/^MSVCR_PATH = $(MSVCROOT)\\redist\\x64\\Microsoft.VC$(MSVSVER).CRT$/;"	m
MSVCR_PATH	.\vlfeat\Makefile.mak	/^MSVCR_PATH = $(MSVCROOT)\\redist\\x86\\Microsoft.VC$(MSVSVER).CRT$/;"	m
MSVSVER	.\vlfeat\Makefile.mak	/^MSVSVER =$/;"	m
MSVSVER	.\vlfeat\make\nmake_helper.mak	/^MSVSVER=$(VL_MSVS)$/;"	m
MV	.\vlfeat\make\doc.mak	/^MV         ?= mv$/;"	m
Mode	.\vlfeat\toolbox\misc\vl_hog.c	/^enum Mode {ExtractFeatures, Render, GetPermutation} ;$/;"	g	file:
N	.\vlfeat\vl\random.c	119;"	d	file:
NAME	.\vlfeat\doc\build\man\mser.1.html	/^<a name="NAME" id="NAME"><\/a>$/;"	a
NAME	.\vlfeat\doc\build\man\sift.1.html	/^<a name="NAME" id="NAME"><\/a>$/;"	a
NAME	.\vlfeat\doc\build\man\vlfeat.7.html	/^<a name="NAME"><\/a>$/;"	a
NAME	.\vlfeat\doc\man\mser.html	/^<a shape="rect" name="NAME" id="NAME"><\/a>$/;"	a
NAME	.\vlfeat\doc\man\sift.html	/^<a shape="rect" name="NAME" id="NAME"><\/a>$/;"	a
NAME	.\vlfeat\doc\man\vlfeat.html	/^<a shape="rect" name="NAME"><\/a>$/;"	a
NAME	.\vlfeat\make\dist.mak	/^NAME := vlfeat$/;"	m
NBO	.\vlfeat\vl\sift.c	675;"	d	file:
NBP	.\vlfeat\vl\sift.c	676;"	d	file:
NFIELDS	.\vlfeat\toolbox\kmeans\vl_hikmeans.c	26;"	d	file:
NFIELDS	.\vlfeat\toolbox\kmeans\vl_hikmeanspush.c	39;"	d	file:
Node	.\vlfeat\docsrc\mdoc.py	/^class Node:$/;"	c
O	.\vlfeat\vl\sift.h	/^  int O ;               \/**< number of octaves. *\/$/;"	m	struct:_VlSiftFilt
OCTAVE	.\vlfeat\make\octave.mak	/^OCTAVE ?= octave$/;"	m
OCTAVE_ENABLE	.\vlfeat\make\octave.mak	/^OCTAVE_ENABLE ?= $(strip $(shell type -P $(MKOCTFILE) 2>&1 >\/dev\/null && \\$/;"	m
OCTAVE_ENABLE	.\vlfeat\make\octave.mak	/^OCTAVE_ENABLE=$/;"	m
OCTAVE_MEX_BINDIR	.\vlfeat\make\octave.mak	/^OCTAVE_MEX_BINDIR := toolbox\/mex\/octave\/$(MEX_SUFFIX)$/;"	m
OCTAVE_MEX_CFLAGS	.\vlfeat\make\octave.mak	/^OCTAVE_MEX_CFLAGS = $(LINK_DLL_CFLAGS) -Itoolbox$/;"	m
OCTAVE_MEX_LDFLAGS	.\vlfeat\make\octave.mak	/^OCTAVE_MEX_LDFLAGS = $(LINK_DLL_LDFLAGS) -lm$/;"	m
OCTAVE_MEX_SUFFIX	.\vlfeat\make\octave.mak	/^OCTAVE_MEX_SUFFIX := mex$/;"	m
OM	.\vlfeat\vl\rodrigues.c	161;"	d	file:
OM	.\vlfeat\vl\rodrigues.c	195;"	d	file:
OM	.\vlfeat\vl\rodrigues.c	325;"	d	file:
OM	.\vlfeat\vl\rodrigues.c	53;"	d	file:
ONE	.\vlfeat\src\test_mathop.c	22;"	d	file:
ONE	.\vlfeat\src\test_mathop.c	24;"	d	file:
ONE	.\vlfeat\src\test_mathop.c	36;"	d	file:
ONE	.\vlfeat\src\test_mathop.c	38;"	d	file:
OPTIONS	.\vlfeat\doc\build\man\mser.1.html	/^<a name="OPTIONS" id="OPTIONS"><\/a>$/;"	a
OPTIONS	.\vlfeat\doc\build\man\sift.1.html	/^<a name="OPTIONS" id="OPTIONS"><\/a>$/;"	a
OPTIONS	.\vlfeat\doc\man\mser.html	/^<a shape="rect" name="OPTIONS" id="OPTIONS"><\/a>$/;"	a
OPTIONS	.\vlfeat\doc\man\sift.html	/^<a shape="rect" name="OPTIONS" id="OPTIONS"><\/a>$/;"	a
OUT	.\vlfeat\toolbox\mexutils.h	42;"	d
OUT	.\vlfeat\toolbox\mexutils.h	43;"	d
OUT_DOM	.\vlfeat\toolbox\geometry\vl_irodr.c	/^  OUT_DOM$/;"	e	enum:__anon6	file:
OUT_DR	.\vlfeat\toolbox\geometry\vl_rodr.c	/^  OUT_DR$/;"	e	enum:__anon8	file:
OUT_OM	.\vlfeat\toolbox\geometry\vl_irodr.c	/^  OUT_OM=0,$/;"	e	enum:__anon6	file:
OUT_R	.\vlfeat\toolbox\geometry\vl_rodr.c	/^  OUT_R=0,$/;"	e	enum:__anon8	file:
OptionParser	.\vlfeat\docsrc\mdoc.py	/^from optparse import OptionParser$/;"	i
OptionParser	.\vlfeat\docsrc\webdoc.py	/^from optparse        import OptionParser$/;"	i
PDFLATEX	.\vlfeat\make\doc.mak	/^PDFLATEX   ?= pdflatex$/;"	m
PL	.\vlfeat\docsrc\formatter.py	/^class PL (L):$/;"	c
PLOGP	.\vlfeat\vl\aib.c	354;"	d	file:
PRNFO	.\vlfeat\src\sift.c	392;"	d	file:
PROCESS	.\vlfeat\toolbox\misc\vl_inthist.c	177;"	d	file:
PROCESS	.\vlfeat\toolbox\misc\vl_sampleinthist.c	119;"	d	file:
PROMOTE_mxDOUBLE_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	28;"	d	file:
PROMOTE_mxINT8_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	30;"	d	file:
PROMOTE_mxSINGLE_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	29;"	d	file:
PROMOTE_mxUINT8_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	31;"	d	file:
PYTHON	.\vlfeat\make\doc.mak	/^PYTHON     ?= python$/;"	m
Pair	.\vlfeat\toolbox\sift\vl_ubcmatch.c	/^} Pair ;$/;"	t	typeref:struct:__anon34	file:
Pc	.\vlfeat\vl\aib.h	/^  double    *Pc;        \/**< Marginal. *\/$/;"	m	struct:_VlAIB
Pcx	.\vlfeat\vl\aib.h	/^  double    *Pcx;       \/**< Joint probability table *\/$/;"	m	struct:_VlAIB
Px	.\vlfeat\vl\aib.h	/^  double    *Px;        \/**< Marginal. *\/$/;"	m	struct:_VlAIB
QERR	.\vlfeat\src\sift.c	540;"	d	file:
R	.\vlfeat\vl\rodrigues.c	162;"	d	file:
R	.\vlfeat\vl\rodrigues.c	197;"	d	file:
R	.\vlfeat\vl\rodrigues.c	327;"	d	file:
R	.\vlfeat\vl\rodrigues.c	54;"	d	file:
RCH	.\vlfeat\Makefile.mak	/^	nmake \/f Makefile.mak ARCH=$(ARCH)$/;"	m
REMAIN	.\vlfeat\toolbox\mser\vl_mser.c	289;"	d	file:
REPEAT1_1	.\vlfeat\toolbox\misc\vl_binsum.c	17;"	d	file:
REPEAT1_1	.\vlfeat\toolbox\misc\vl_cummax.c	16;"	d	file:
REPEAT1_10	.\vlfeat\toolbox\misc\vl_binsum.c	26;"	d	file:
REPEAT1_10	.\vlfeat\toolbox\misc\vl_cummax.c	25;"	d	file:
REPEAT1_2	.\vlfeat\toolbox\misc\vl_binsum.c	18;"	d	file:
REPEAT1_2	.\vlfeat\toolbox\misc\vl_cummax.c	17;"	d	file:
REPEAT1_3	.\vlfeat\toolbox\misc\vl_binsum.c	19;"	d	file:
REPEAT1_3	.\vlfeat\toolbox\misc\vl_cummax.c	18;"	d	file:
REPEAT1_4	.\vlfeat\toolbox\misc\vl_binsum.c	20;"	d	file:
REPEAT1_4	.\vlfeat\toolbox\misc\vl_cummax.c	19;"	d	file:
REPEAT1_5	.\vlfeat\toolbox\misc\vl_binsum.c	21;"	d	file:
REPEAT1_5	.\vlfeat\toolbox\misc\vl_cummax.c	20;"	d	file:
REPEAT1_6	.\vlfeat\toolbox\misc\vl_binsum.c	22;"	d	file:
REPEAT1_6	.\vlfeat\toolbox\misc\vl_cummax.c	21;"	d	file:
REPEAT1_7	.\vlfeat\toolbox\misc\vl_binsum.c	23;"	d	file:
REPEAT1_7	.\vlfeat\toolbox\misc\vl_cummax.c	22;"	d	file:
REPEAT1_8	.\vlfeat\toolbox\misc\vl_binsum.c	24;"	d	file:
REPEAT1_8	.\vlfeat\toolbox\misc\vl_cummax.c	23;"	d	file:
REPEAT1_9	.\vlfeat\toolbox\misc\vl_binsum.c	25;"	d	file:
REPEAT1_9	.\vlfeat\toolbox\misc\vl_cummax.c	24;"	d	file:
REPEAT2_1	.\vlfeat\toolbox\misc\vl_binsum.c	28;"	d	file:
REPEAT2_10	.\vlfeat\toolbox\misc\vl_binsum.c	37;"	d	file:
REPEAT2_2	.\vlfeat\toolbox\misc\vl_binsum.c	29;"	d	file:
REPEAT2_3	.\vlfeat\toolbox\misc\vl_binsum.c	30;"	d	file:
REPEAT2_4	.\vlfeat\toolbox\misc\vl_binsum.c	31;"	d	file:
REPEAT2_5	.\vlfeat\toolbox\misc\vl_binsum.c	32;"	d	file:
REPEAT2_6	.\vlfeat\toolbox\misc\vl_binsum.c	33;"	d	file:
REPEAT2_7	.\vlfeat\toolbox\misc\vl_binsum.c	34;"	d	file:
REPEAT2_8	.\vlfeat\toolbox\misc\vl_binsum.c	35;"	d	file:
REPEAT2_9	.\vlfeat\toolbox\misc\vl_binsum.c	36;"	d	file:
RSYNC	.\vlfeat\make\dist.mak	/^RSYNC ?= rsync$/;"	m
Render	.\vlfeat\toolbox\misc\vl_hog.c	/^enum Mode {ExtractFeatures, Render, GetPermutation} ;$/;"	e	enum:Mode	file:
S	.\vlfeat\src\test_heap-def.c	/^typedef struct _S { int x ; } S ;$/;"	t	typeref:struct:_S	file:
S	.\vlfeat\vl\sift.h	/^  int S ;               \/**< number of levels per octave. *\/$/;"	m	struct:_VlSiftFilt
SAVE_BACK	.\vlfeat\vl\imopv.c	892;"	d	file:
SAVE_BACK	.\vlfeat\vl\sift.c	1465;"	d	file:
SED	.\vlfeat\make\doc.mak	/^SED        ?= sed$/;"	m
SEE ALSO	.\vlfeat\doc\build\man\mser.1.html	/^<a name="SEE ALSO"><\/a>$/;"	a
SEE ALSO	.\vlfeat\doc\build\man\sift.1.html	/^<a name="SEE ALSO"><\/a>$/;"	a
SEE ALSO	.\vlfeat\doc\build\man\vlfeat.7.html	/^<a name="SEE ALSO"><\/a>$/;"	a
SEE ALSO	.\vlfeat\doc\man\mser.html	/^<a shape="rect" name="SEE ALSO"><\/a>$/;"	a
SEE ALSO	.\vlfeat\doc\man\sift.html	/^<a shape="rect" name="SEE ALSO"><\/a>$/;"	a
SEE ALSO	.\vlfeat\doc\man\vlfeat.html	/^<a shape="rect" name="SEE ALSO"><\/a>$/;"	a
SETLOSS	.\vlfeat\vl\svm.c	1554;"	d	file:
SFX	.\vlfeat\src\test_mathop.c	17;"	d	file:
SFX	.\vlfeat\src\test_mathop.c	29;"	d	file:
SFX	.\vlfeat\src\test_mathop.c	31;"	d	file:
SFX	.\vlfeat\src\test_mathop.c	43;"	d	file:
SFX	.\vlfeat\src\test_mathop.c	53;"	d	file:
SFX	.\vlfeat\src\test_mathop.c	56;"	d	file:
SFX	.\vlfeat\src\test_mathop.c	61;"	d	file:
SFX	.\vlfeat\src\test_mathop.c	64;"	d	file:
SFX	.\vlfeat\src\test_mathop.c	69;"	d	file:
SFX	.\vlfeat\src\test_mathop.c	72;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_inthist.c	34;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_inthist.c	36;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_inthist.c	40;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_inthist.c	42;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_inthist.c	46;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_inthist.c	48;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_inthist.c	52;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_inthist.c	54;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_sampleinthist.c	24;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_sampleinthist.c	26;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_sampleinthist.c	30;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_sampleinthist.c	32;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_sampleinthist.c	36;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_sampleinthist.c	38;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_sampleinthist.c	42;"	d	file:
SFX	.\vlfeat\toolbox\misc\vl_sampleinthist.c	44;"	d	file:
SFX	.\vlfeat\vl\fisher.c	496;"	d	file:
SFX	.\vlfeat\vl\fisher.c	502;"	d	file:
SFX	.\vlfeat\vl\fisher.c	583;"	d	file:
SFX	.\vlfeat\vl\gmm.c	1452;"	d	file:
SFX	.\vlfeat\vl\gmm.c	1458;"	d	file:
SFX	.\vlfeat\vl\gmm.c	1706;"	d	file:
SFX	.\vlfeat\vl\kmeans.c	1780;"	d	file:
SFX	.\vlfeat\vl\kmeans.c	1786;"	d	file:
SFX	.\vlfeat\vl\kmeans.c	2098;"	d	file:
SFX	.\vlfeat\vl\vlad.c	250;"	d	file:
SFX	.\vlfeat\vl\vlad.c	256;"	d	file:
SFX	.\vlfeat\vl\vlad.c	320;"	d	file:
SFX2	.\vlfeat\src\test_mathop.c	18;"	d	file:
SFX2	.\vlfeat\src\test_mathop.c	28;"	d	file:
SFX2	.\vlfeat\src\test_mathop.c	32;"	d	file:
SFX2	.\vlfeat\src\test_mathop.c	42;"	d	file:
SINGLE_t	.\vlfeat\toolbox\misc\vl_alldist2.c	86;"	d	file:
SQRT	.\vlfeat\src\test_mathop.c	20;"	d	file:
SQRT	.\vlfeat\src\test_mathop.c	26;"	d	file:
SQRT	.\vlfeat\src\test_mathop.c	34;"	d	file:
SQRT	.\vlfeat\src\test_mathop.c	40;"	d	file:
STEP	.\vlfeat\src\test_mathop.c	55;"	d	file:
STEP	.\vlfeat\src\test_mathop.c	58;"	d	file:
STEP	.\vlfeat\src\test_mathop.c	63;"	d	file:
STEP	.\vlfeat\src\test_mathop.c	66;"	d	file:
STEP	.\vlfeat\src\test_mathop.c	71;"	d	file:
STEP	.\vlfeat\src\test_mathop.c	74;"	d	file:
SYNOPSIS	.\vlfeat\doc\build\man\mser.1.html	/^<a name="SYNOPSIS" id="SYNOPSIS"><\/a>$/;"	a
SYNOPSIS	.\vlfeat\doc\build\man\sift.1.html	/^<a name="SYNOPSIS" id="SYNOPSIS"><\/a>$/;"	a
SYNOPSIS	.\vlfeat\doc\man\mser.html	/^<a shape="rect" name="SYNOPSIS" id="SYNOPSIS"><\/a>$/;"	a
SYNOPSIS	.\vlfeat\doc\man\sift.html	/^<a shape="rect" name="SYNOPSIS" id="SYNOPSIS"><\/a>$/;"	a
T	.\vlfeat\src\test_mathop.c	19;"	d	file:
T	.\vlfeat\src\test_mathop.c	27;"	d	file:
T	.\vlfeat\src\test_mathop.c	33;"	d	file:
T	.\vlfeat\src\test_mathop.c	41;"	d	file:
T	.\vlfeat\src\test_mathop.c	54;"	d	file:
T	.\vlfeat\src\test_mathop.c	57;"	d	file:
T	.\vlfeat\src\test_mathop.c	62;"	d	file:
T	.\vlfeat\src\test_mathop.c	65;"	d	file:
T	.\vlfeat\src\test_mathop.c	70;"	d	file:
T	.\vlfeat\src\test_mathop.c	73;"	d	file:
T	.\vlfeat\toolbox\misc\vl_inthist.c	33;"	d	file:
T	.\vlfeat\toolbox\misc\vl_inthist.c	35;"	d	file:
T	.\vlfeat\toolbox\misc\vl_inthist.c	39;"	d	file:
T	.\vlfeat\toolbox\misc\vl_inthist.c	41;"	d	file:
T	.\vlfeat\toolbox\misc\vl_inthist.c	45;"	d	file:
T	.\vlfeat\toolbox\misc\vl_inthist.c	47;"	d	file:
T	.\vlfeat\toolbox\misc\vl_inthist.c	51;"	d	file:
T	.\vlfeat\toolbox\misc\vl_inthist.c	53;"	d	file:
T	.\vlfeat\toolbox\misc\vl_sampleinthist.c	23;"	d	file:
T	.\vlfeat\toolbox\misc\vl_sampleinthist.c	25;"	d	file:
T	.\vlfeat\toolbox\misc\vl_sampleinthist.c	29;"	d	file:
T	.\vlfeat\toolbox\misc\vl_sampleinthist.c	31;"	d	file:
T	.\vlfeat\toolbox\misc\vl_sampleinthist.c	35;"	d	file:
T	.\vlfeat\toolbox\misc\vl_sampleinthist.c	37;"	d	file:
T	.\vlfeat\toolbox\misc\vl_sampleinthist.c	41;"	d	file:
T	.\vlfeat\toolbox\misc\vl_sampleinthist.c	43;"	d	file:
TIDY	.\vlfeat\make\doc.mak	/^TIDY       ?= tidy$/;"	m
TMPDIR	.\vlfeat\make\dist.mak	/^TMPDIR ?= \/tmp$/;"	m
TRIANGULAR	.\vlfeat\toolbox\imop\vl_imsmooth.c	/^enum {GAUSSIAN, TRIANGULAR} ;$/;"	e	enum:__anon11	file:
TYPE	.\vlfeat\src\test_gmm.c	17;"	d	file:
TYPE	.\vlfeat\toolbox\misc\vl_binsum.c	50;"	d	file:
TYPE	.\vlfeat\toolbox\misc\vl_cummax.c	38;"	d	file:
TYPE	.\vlfeat\vl\fisher.c	495;"	d	file:
TYPE	.\vlfeat\vl\fisher.c	501;"	d	file:
TYPE	.\vlfeat\vl\fisher.c	584;"	d	file:
TYPE	.\vlfeat\vl\gmm.c	1451;"	d	file:
TYPE	.\vlfeat\vl\gmm.c	1457;"	d	file:
TYPE	.\vlfeat\vl\gmm.c	1707;"	d	file:
TYPE	.\vlfeat\vl\kmeans.c	1779;"	d	file:
TYPE	.\vlfeat\vl\kmeans.c	1785;"	d	file:
TYPE	.\vlfeat\vl\kmeans.c	2099;"	d	file:
TYPE	.\vlfeat\vl\vlad.c	249;"	d	file:
TYPE	.\vlfeat\vl\vlad.c	255;"	d	file:
TYPE	.\vlfeat\vl\vlad.c	321;"	d	file:
TYPEOF_mxDOUBLE_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	23;"	d	file:
TYPEOF_mxINT8_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	25;"	d	file:
TYPEOF_mxSINGLE_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	24;"	d	file:
TYPEOF_mxUINT8_CLASS	.\vlfeat\toolbox\sift\vl_ubcmatch.c	26;"	d	file:
TYPE_1	.\vlfeat\toolbox\misc\vl_binsum.c	39;"	d	file:
TYPE_1	.\vlfeat\toolbox\misc\vl_cummax.c	27;"	d	file:
TYPE_10	.\vlfeat\toolbox\misc\vl_binsum.c	48;"	d	file:
TYPE_10	.\vlfeat\toolbox\misc\vl_cummax.c	36;"	d	file:
TYPE_2	.\vlfeat\toolbox\misc\vl_binsum.c	40;"	d	file:
TYPE_2	.\vlfeat\toolbox\misc\vl_cummax.c	28;"	d	file:
TYPE_3	.\vlfeat\toolbox\misc\vl_binsum.c	41;"	d	file:
TYPE_3	.\vlfeat\toolbox\misc\vl_cummax.c	29;"	d	file:
TYPE_4	.\vlfeat\toolbox\misc\vl_binsum.c	42;"	d	file:
TYPE_4	.\vlfeat\toolbox\misc\vl_cummax.c	30;"	d	file:
TYPE_5	.\vlfeat\toolbox\misc\vl_binsum.c	43;"	d	file:
TYPE_5	.\vlfeat\toolbox\misc\vl_cummax.c	31;"	d	file:
TYPE_6	.\vlfeat\toolbox\misc\vl_binsum.c	44;"	d	file:
TYPE_6	.\vlfeat\toolbox\misc\vl_cummax.c	32;"	d	file:
TYPE_7	.\vlfeat\toolbox\misc\vl_binsum.c	45;"	d	file:
TYPE_7	.\vlfeat\toolbox\misc\vl_cummax.c	33;"	d	file:
TYPE_8	.\vlfeat\toolbox\misc\vl_binsum.c	46;"	d	file:
TYPE_8	.\vlfeat\toolbox\misc\vl_cummax.c	34;"	d	file:
TYPE_9	.\vlfeat\toolbox\misc\vl_binsum.c	47;"	d	file:
TYPE_9	.\vlfeat\toolbox\misc\vl_cummax.c	35;"	d	file:
TYPE_AUX	.\vlfeat\toolbox\misc\vl_binsum.c	49;"	d	file:
TYPE_AUX	.\vlfeat\toolbox\misc\vl_cummax.c	37;"	d	file:
Terminal	.\vlfeat\docsrc\formatter.py	/^class Terminal:$/;"	c
UINT16_t	.\vlfeat\toolbox\misc\vl_alldist2.c	82;"	d	file:
UINT32_t	.\vlfeat\toolbox\misc\vl_alldist2.c	84;"	d	file:
UINT8_t	.\vlfeat\toolbox\misc\vl_alldist2.c	80;"	d	file:
UPPER_MASK	.\vlfeat\vl\random.c	122;"	d	file:
UndirectedPolarField	.\vlfeat\toolbox\misc\vl_hog.c	/^enum InputType {Image, DirectedPolarField, UndirectedPolarField} ;$/;"	e	enum:InputType	file:
VER	.\vlfeat\Makefile.mak	/^VER = 0.9.20$/;"	m
VER	.\vlfeat\make\dist.mak	/^VER ?= $(shell cat vl\/generic.h | sed -n \\$/;"	m
VERSION	.\vlfeat\make\doc.mak	/^	VERSION=$(VER) $(PYTHON) docsrc\/webdoc.py \\$/;"	m
VL_AIB_H	.\vlfeat\vl\aib.h	16;"	d
VL_ARCH_BIG_ENDIAN	.\vlfeat\vl\host.h	308;"	d
VL_ARCH_IA64	.\vlfeat\vl\host.h	267;"	d
VL_ARCH_IX86	.\vlfeat\vl\host.h	242;"	d
VL_ARCH_IX86	.\vlfeat\vl\host.h	244;"	d
VL_ARCH_IX86	.\vlfeat\vl\host.h	246;"	d
VL_ARCH_IX86	.\vlfeat\vl\host.h	248;"	d
VL_ARCH_IX86	.\vlfeat\vl\host.h	250;"	d
VL_ARCH_LITTLE_ENDIAN	.\vlfeat\vl\host.h	303;"	d
VL_ARCH_X64	.\vlfeat\vl\host.h	258;"	d
VL_ARRAY_H	.\vlfeat\vl\array.h	15;"	d
VL_ARRAY_MAX_NUM_DIMENSIONS	.\vlfeat\vl\array.h	20;"	d
VL_BIG_INT	.\vlfeat\vl\host.h	534;"	d
VL_BIG_UINT	.\vlfeat\vl\host.h	540;"	d
VL_CAT	.\vlfeat\vl\host.h	100;"	d
VL_COMPILER_GNUC	.\vlfeat\vl\host.h	217;"	d
VL_COMPILER_GNUC	.\vlfeat\vl\host.h	221;"	d
VL_COMPILER_ILP32	.\vlfeat\vl\host.h	292;"	d
VL_COMPILER_LCC	.\vlfeat\vl\host.h	232;"	d
VL_COMPILER_LLP64	.\vlfeat\vl\host.h	279;"	d
VL_COMPILER_LP64	.\vlfeat\vl\host.h	287;"	d
VL_COMPILER_MSC	.\vlfeat\vl\host.h	227;"	d
VL_COVDET_AA_ACCURATE_SMOOTHING	.\vlfeat\vl\covdet.c	1441;"	d	file:
VL_COVDET_AA_CONVERGENCE_THRESHOLD	.\vlfeat\vl\covdet.c	1440;"	d	file:
VL_COVDET_AA_MAX_ANISOTROPY	.\vlfeat\vl\covdet.c	1439;"	d	file:
VL_COVDET_AA_MAX_NUM_ITERATIONS	.\vlfeat\vl\covdet.c	1435;"	d	file:
VL_COVDET_AA_PATCH_EXTENT	.\vlfeat\vl\covdet.c	1442;"	d	file:
VL_COVDET_AA_PATCH_RESOLUTION	.\vlfeat\vl\covdet.c	1434;"	d	file:
VL_COVDET_AA_RELATIVE_DERIVATIVE_SIGMA	.\vlfeat\vl\covdet.c	1438;"	d	file:
VL_COVDET_AA_RELATIVE_INTEGRATION_SIGMA	.\vlfeat\vl\covdet.c	1437;"	d	file:
VL_COVDET_DESC_LIOP	.\vlfeat\toolbox\sift\vl_covdet.c	/^  VL_COVDET_DESC_LIOP,$/;"	e	enum:_VlCovDetDescritporType	file:
VL_COVDET_DESC_NONE	.\vlfeat\toolbox\sift\vl_covdet.c	/^  VL_COVDET_DESC_NONE = 0,$/;"	e	enum:_VlCovDetDescritporType	file:
VL_COVDET_DESC_NUM	.\vlfeat\toolbox\sift\vl_covdet.c	/^  VL_COVDET_DESC_NUM$/;"	e	enum:_VlCovDetDescritporType	file:
VL_COVDET_DESC_PATCH	.\vlfeat\toolbox\sift\vl_covdet.c	/^  VL_COVDET_DESC_PATCH,$/;"	e	enum:_VlCovDetDescritporType	file:
VL_COVDET_DESC_SIFT	.\vlfeat\toolbox\sift\vl_covdet.c	/^  VL_COVDET_DESC_SIFT,$/;"	e	enum:_VlCovDetDescritporType	file:
VL_COVDET_DOG_DEF_EDGE_THRESHOLD	.\vlfeat\vl\covdet.c	1448;"	d	file:
VL_COVDET_DOG_DEF_PEAK_THRESHOLD	.\vlfeat\vl\covdet.c	1447;"	d	file:
VL_COVDET_H	.\vlfeat\vl\covdet.h	18;"	d
VL_COVDET_HARRIS_DEF_EDGE_THRESHOLD	.\vlfeat\vl\covdet.c	1450;"	d	file:
VL_COVDET_HARRIS_DEF_PEAK_THRESHOLD	.\vlfeat\vl\covdet.c	1449;"	d	file:
VL_COVDET_HESSIAN_DEF_EDGE_THRESHOLD	.\vlfeat\vl\covdet.c	1452;"	d	file:
VL_COVDET_HESSIAN_DEF_PEAK_THRESHOLD	.\vlfeat\vl\covdet.c	1451;"	d	file:
VL_COVDET_LAP_DEF_PEAK_THRESHOLD	.\vlfeat\vl\covdet.c	1446;"	d	file:
VL_COVDET_LAP_NUM_LEVELS	.\vlfeat\vl\covdet.c	1444;"	d	file:
VL_COVDET_LAP_PATCH_RESOLUTION	.\vlfeat\vl\covdet.c	1445;"	d	file:
VL_COVDET_MAX_NUM_LAPLACIAN_SCALES	.\vlfeat\vl\covdet.c	1433;"	d	file:
VL_COVDET_MAX_NUM_ORIENTATIONS	.\vlfeat\vl\covdet.c	1432;"	d	file:
VL_COVDET_METHOD_DOG	.\vlfeat\vl\covdet.h	/^  VL_COVDET_METHOD_DOG = 1,$/;"	e	enum:_VlCovDetMethod
VL_COVDET_METHOD_HARRIS_LAPLACE	.\vlfeat\vl\covdet.h	/^  VL_COVDET_METHOD_HARRIS_LAPLACE,$/;"	e	enum:_VlCovDetMethod
VL_COVDET_METHOD_HESSIAN	.\vlfeat\vl\covdet.h	/^  VL_COVDET_METHOD_HESSIAN,$/;"	e	enum:_VlCovDetMethod
VL_COVDET_METHOD_HESSIAN_LAPLACE	.\vlfeat\vl\covdet.h	/^  VL_COVDET_METHOD_HESSIAN_LAPLACE,$/;"	e	enum:_VlCovDetMethod
VL_COVDET_METHOD_MULTISCALE_HARRIS	.\vlfeat\vl\covdet.h	/^  VL_COVDET_METHOD_MULTISCALE_HARRIS,$/;"	e	enum:_VlCovDetMethod
VL_COVDET_METHOD_MULTISCALE_HESSIAN	.\vlfeat\vl\covdet.h	/^  VL_COVDET_METHOD_MULTISCALE_HESSIAN,$/;"	e	enum:_VlCovDetMethod
VL_COVDET_METHOD_NUM	.\vlfeat\vl\covdet.h	/^  VL_COVDET_METHOD_NUM$/;"	e	enum:_VlCovDetMethod
VL_COVDET_OR_ADDITIONAL_PEAKS_RELATIVE_SIZE	.\vlfeat\vl\covdet.c	1443;"	d	file:
VL_COVDET_OR_NUM_ORIENTATION_HISTOGAM_BINS	.\vlfeat\vl\covdet.c	1436;"	d	file:
VL_DISABLE_OPENMP	.\vlfeat\vl\host.h	25;"	d
VL_DISABLE_SSE2	.\vlfeat\vl\host.h	24;"	d
VL_DISABLE_THREADS	.\vlfeat\vl\host.h	23;"	d
VL_DSIFT_H	.\vlfeat\vl\dsift.h	16;"	d
VL_E	.\vlfeat\vl\mathop.h	22;"	d
VL_EPSILON_D	.\vlfeat\vl\mathop.h	45;"	d
VL_EPSILON_F	.\vlfeat\vl\mathop.h	37;"	d
VL_ERR_ALLOC	.\vlfeat\vl\generic.h	124;"	d
VL_ERR_BAD_ARG	.\vlfeat\vl\generic.h	125;"	d
VL_ERR_EOF	.\vlfeat\vl\generic.h	127;"	d
VL_ERR_IO	.\vlfeat\vl\generic.h	126;"	d
VL_ERR_MSG_LEN	.\vlfeat\vl\generic.h	30;"	d
VL_ERR_NO_MORE	.\vlfeat\vl\generic.h	128;"	d
VL_ERR_OK	.\vlfeat\vl\generic.h	122;"	d
VL_ERR_OVERFLOW	.\vlfeat\vl\generic.h	123;"	d
VL_ERR_PGM_INV_DATA	.\vlfeat\vl\pgm.h	25;"	d
VL_ERR_PGM_INV_HEAD	.\vlfeat\vl\pgm.h	23;"	d
VL_ERR_PGM_INV_META	.\vlfeat\vl\pgm.h	24;"	d
VL_ERR_PGM_IO	.\vlfeat\vl\pgm.h	26;"	d
VL_EXPORT	.\vlfeat\vl\host.h	319;"	d
VL_EXPORT	.\vlfeat\vl\host.h	321;"	d
VL_EXPORT	.\vlfeat\vl\host.h	325;"	d
VL_EXPORT	.\vlfeat\vl\host.h	327;"	d
VL_EXPORT	.\vlfeat\vl\host.h	339;"	d
VL_EXPORT	.\vlfeat\vl\host.h	341;"	d
VL_EXPORT	.\vlfeat\vl\host.h	350;"	d
VL_EXPORT	.\vlfeat\vl\host.h	352;"	d
VL_EXPORT	.\vlfeat\vl\host.h	356;"	d
VL_EXPORT	.\vlfeat\vl\host.h	358;"	d
VL_EXPORT	.\vlfeat\vl\host.h	35;"	d
VL_FALSE	.\vlfeat\vl\host.h	371;"	d
VL_FAST_SQRT_UI	.\vlfeat\vl\mathop.h	579;"	d
VL_FISHER_FLAG_FAST	.\vlfeat\vl\fisher.h	26;"	d
VL_FISHER_FLAG_IMPROVED	.\vlfeat\vl\fisher.h	25;"	d
VL_FISHER_FLAG_NORMALIZED	.\vlfeat\vl\fisher.h	24;"	d
VL_FISHER_FLAG_SQUARE_ROOT	.\vlfeat\vl\fisher.h	23;"	d
VL_FISHER_H	.\vlfeat\vl\fisher.h	17;"	d
VL_FISHER_INSTANTIATING	.\vlfeat\vl\fisher.c	497;"	d	file:
VL_FISHER_INSTANTIATING	.\vlfeat\vl\fisher.c	503;"	d	file:
VL_FISHER_INSTANTIATING	.\vlfeat\vl\fisher.c	586;"	d	file:
VL_FL_INDEX	.\vlfeat\vl\host.h	492;"	d
VL_FL_INDEX	.\vlfeat\vl\host.h	496;"	d
VL_FL_INT16	.\vlfeat\vl\host.h	488;"	d
VL_FL_INT32	.\vlfeat\vl\host.h	487;"	d
VL_FL_INT64	.\vlfeat\vl\host.h	483;"	d
VL_FL_INT64	.\vlfeat\vl\host.h	485;"	d
VL_FL_INT8	.\vlfeat\vl\host.h	489;"	d
VL_FMT_INDEX	.\vlfeat\vl\host.h	521;"	d
VL_FMT_INTPTR	.\vlfeat\vl\host.h	522;"	d
VL_FMT_SIZE	.\vlfeat\vl\host.h	524;"	d
VL_FMT_UINDEX	.\vlfeat\vl\host.h	523;"	d
VL_FMT_UINTPTR	.\vlfeat\vl\host.h	525;"	d
VL_FRAMETYPE_DISC	.\vlfeat\vl\covdet.h	/^  VL_FRAMETYPE_DISC = 1,         \/**< A disc. *\/$/;"	e	enum:_VlFrameType
VL_FRAMETYPE_ELLIPSE	.\vlfeat\vl\covdet.h	/^  VL_FRAMETYPE_ELLIPSE,          \/**< An ellipse. *\/$/;"	e	enum:_VlFrameType
VL_FRAMETYPE_NUM	.\vlfeat\vl\covdet.h	/^  VL_FRAMETYPE_NUM$/;"	e	enum:_VlFrameType
VL_FRAMETYPE_ORIENTED_DISC	.\vlfeat\vl\covdet.h	/^  VL_FRAMETYPE_ORIENTED_DISC,    \/**< An oriented disc. *\/$/;"	e	enum:_VlFrameType
VL_FRAMETYPE_ORIENTED_ELLIPSE	.\vlfeat\vl\covdet.h	/^  VL_FRAMETYPE_ORIENTED_ELLIPSE, \/**< An oriented ellipse. *\/$/;"	e	enum:_VlFrameType
VL_F_TYPE	.\vlfeat\src\test_gmm.c	18;"	d	file:
VL_GENERIC_DRIVER	.\vlfeat\src\generic-driver.h	19;"	d
VL_GENERIC_H	.\vlfeat\vl\generic.h	16;"	d
VL_GETOPT_LONG_H	.\vlfeat\vl\getopt_long.h	15;"	d
VL_GMM_H	.\vlfeat\vl\gmm.h	16;"	d
VL_GMM_INSTANTIATING	.\vlfeat\vl\gmm.c	1453;"	d	file:
VL_GMM_INSTANTIATING	.\vlfeat\vl\gmm.c	1459;"	d	file:
VL_GMM_INSTANTIATING	.\vlfeat\vl\gmm.c	1709;"	d	file:
VL_GMM_MIN_POSTERIOR	.\vlfeat\vl\gmm.c	309;"	d	file:
VL_GMM_MIN_PRIOR	.\vlfeat\vl\gmm.c	310;"	d	file:
VL_GMM_MIN_VARIANCE	.\vlfeat\vl\gmm.c	308;"	d	file:
VL_HEAP_DEF_H	.\vlfeat\vl\heap-def.h	182;"	d
VL_HEAP_array	.\vlfeat\src\test_heap-def.c	57;"	d	file:
VL_HEAP_array	.\vlfeat\vl\heap-def.h	164;"	d
VL_HEAP_array	.\vlfeat\vl\heap-def.h	175;"	d
VL_HEAP_array	.\vlfeat\vl\heap-def.h	176;"	d
VL_HEAP_array	.\vlfeat\vl\heap-def.h	463;"	d
VL_HEAP_array_const	.\vlfeat\src\test_heap-def.c	58;"	d	file:
VL_HEAP_array_const	.\vlfeat\vl\heap-def.h	165;"	d
VL_HEAP_array_const	.\vlfeat\vl\heap-def.h	169;"	d
VL_HEAP_array_const	.\vlfeat\vl\heap-def.h	464;"	d
VL_HEAP_cmp	.\vlfeat\src\test_heap-def.c	35;"	d	file:
VL_HEAP_cmp	.\vlfeat\src\test_heap-def.c	40;"	d	file:
VL_HEAP_cmp	.\vlfeat\src\test_heap-def.c	60;"	d	file:
VL_HEAP_cmp	.\vlfeat\vl\heap-def.h	/^VL_HEAP_cmp$/;"	f
VL_HEAP_cmp	.\vlfeat\vl\heap-def.h	224;"	d
VL_HEAP_cmp	.\vlfeat\vl\heap-def.h	454;"	d
VL_HEAP_cmp	.\vlfeat\vl\kdtree.c	101;"	d	file:
VL_HEAP_cmp	.\vlfeat\vl\kdtree.c	106;"	d	file:
VL_HEAP_cmp	.\vlfeat\vl\kdtree.c	111;"	d	file:
VL_HEAP_down	.\vlfeat\vl\heap-def.h	/^VL_HEAP_down$/;"	f
VL_HEAP_down	.\vlfeat\vl\heap-def.h	329;"	d
VL_HEAP_down	.\vlfeat\vl\heap-def.h	457;"	d
VL_HEAP_pop	.\vlfeat\vl\heap-def.h	/^VL_HEAP_pop$/;"	f
VL_HEAP_pop	.\vlfeat\vl\heap-def.h	382;"	d
VL_HEAP_pop	.\vlfeat\vl\heap-def.h	459;"	d
VL_HEAP_prefix	.\vlfeat\src\test_heap-def.c	14;"	d	file:
VL_HEAP_prefix	.\vlfeat\src\test_heap-def.c	33;"	d	file:
VL_HEAP_prefix	.\vlfeat\src\test_heap-def.c	38;"	d	file:
VL_HEAP_prefix	.\vlfeat\src\test_heap-def.c	56;"	d	file:
VL_HEAP_prefix	.\vlfeat\vl\heap-def.h	173;"	d
VL_HEAP_prefix	.\vlfeat\vl\heap-def.h	461;"	d
VL_HEAP_prefix	.\vlfeat\vl\kdtree.c	104;"	d	file:
VL_HEAP_prefix	.\vlfeat\vl\kdtree.c	109;"	d	file:
VL_HEAP_prefix	.\vlfeat\vl\kdtree.c	99;"	d	file:
VL_HEAP_push	.\vlfeat\vl\heap-def.h	/^VL_HEAP_push$/;"	f
VL_HEAP_push	.\vlfeat\vl\heap-def.h	358;"	d
VL_HEAP_push	.\vlfeat\vl\heap-def.h	458;"	d
VL_HEAP_swap	.\vlfeat\src\test_heap-def.c	41;"	d	file:
VL_HEAP_swap	.\vlfeat\src\test_heap-def.c	59;"	d	file:
VL_HEAP_swap	.\vlfeat\vl\heap-def.h	/^VL_HEAP_swap$/;"	f
VL_HEAP_swap	.\vlfeat\vl\heap-def.h	249;"	d
VL_HEAP_swap	.\vlfeat\vl\heap-def.h	455;"	d
VL_HEAP_type	.\vlfeat\src\test_heap-def.c	15;"	d	file:
VL_HEAP_type	.\vlfeat\src\test_heap-def.c	34;"	d	file:
VL_HEAP_type	.\vlfeat\src\test_heap-def.c	39;"	d	file:
VL_HEAP_type	.\vlfeat\vl\heap-def.h	174;"	d
VL_HEAP_type	.\vlfeat\vl\heap-def.h	462;"	d
VL_HEAP_type	.\vlfeat\vl\kdtree.c	100;"	d	file:
VL_HEAP_type	.\vlfeat\vl\kdtree.c	105;"	d	file:
VL_HEAP_type	.\vlfeat\vl\kdtree.c	110;"	d	file:
VL_HEAP_up	.\vlfeat\vl\heap-def.h	/^VL_HEAP_up$/;"	f
VL_HEAP_up	.\vlfeat\vl\heap-def.h	279;"	d
VL_HEAP_up	.\vlfeat\vl\heap-def.h	456;"	d
VL_HEAP_update	.\vlfeat\vl\heap-def.h	/^VL_HEAP_update$/;"	f
VL_HEAP_update	.\vlfeat\vl\heap-def.h	422;"	d
VL_HEAP_update	.\vlfeat\vl\heap-def.h	460;"	d
VL_HIKMEANS_H	.\vlfeat\vl\hikmeans.h	15;"	d
VL_HOG_H	.\vlfeat\vl\hog.h	15;"	d
VL_HOMKERMAP_H	.\vlfeat\vl\homkermap.h	15;"	d
VL_HOMKERMAP_INSTANTIATING	.\vlfeat\vl\homkermap.c	515;"	d	file:
VL_HOMKERMAP_INSTANTIATING	.\vlfeat\vl\homkermap.c	519;"	d	file:
VL_HOMKERMAP_INSTANTIATING	.\vlfeat\vl\homkermap.c	578;"	d	file:
VL_HOST_H	.\vlfeat\vl\host.h	16;"	d
VL_IKMACC_MAX	.\vlfeat\vl\ikmeans.h	27;"	d
VL_IKMEANS_H	.\vlfeat\vl\ikmeans.h	17;"	d
VL_IKM_ELKAN	.\vlfeat\vl\ikmeans.h	/^  VL_IKM_ELKAN, \/**< Elkan algorithm *\/$/;"	e	enum:VlIKMAlgorithms
VL_IKM_LLOYD	.\vlfeat\vl\ikmeans.h	/^  VL_IKM_LLOYD, \/**< Lloyd algorithm *\/$/;"	e	enum:VlIKMAlgorithms
VL_IMOPV_H	.\vlfeat\vl\imopv.h	15;"	d
VL_IMOPV_INSTANTIATING	.\vlfeat\vl\imopv.c	1073;"	d	file:
VL_IMOPV_INSTANTIATING	.\vlfeat\vl\imopv.c	42;"	d	file:
VL_IMOPV_INSTANTIATING	.\vlfeat\vl\imopv.c	46;"	d	file:
VL_IMOPV_INSTANTIATING	.\vlfeat\vl\imopv.c	50;"	d	file:
VL_IMOPV_INSTANTIATING	.\vlfeat\vl\imopv.c	54;"	d	file:
VL_IMOPV_SSE2_H	.\vlfeat\vl\imopv_sse2.h	15;"	d
VL_IMOPV_SSE2_INSTANTIATING	.\vlfeat\vl\imopv_sse2.c	285;"	d	file:
VL_IMOPV_SSE2_INSTANTIATING	.\vlfeat\vl\imopv_sse2.c	28;"	d	file:
VL_IMOPV_SSE2_INSTANTIATING	.\vlfeat\vl\imopv_sse2.c	32;"	d	file:
VL_IMSMOOTH_INSTANTIATING	.\vlfeat\toolbox\imop\vl_imsmooth.c	126;"	d	file:
VL_IMSMOOTH_INSTANTIATING	.\vlfeat\toolbox\imop\vl_imsmooth.c	162;"	d	file:
VL_IMSMOOTH_INSTANTIATING	.\vlfeat\toolbox\imop\vl_imsmooth.c	166;"	d	file:
VL_INFINITY_D	.\vlfeat\vl\mathop.h	92;"	d
VL_INFINITY_F	.\vlfeat\vl\mathop.h	86;"	d
VL_INLINE	.\vlfeat\vl\host.h	314;"	d
VL_INLINE	.\vlfeat\vl\host.h	334;"	d
VL_INLINE	.\vlfeat\vl\host.h	347;"	d
VL_INLINE	.\vlfeat\vl\host.h	36;"	d
VL_INT16_C	.\vlfeat\vl\host.h	432;"	d
VL_INT16_C	.\vlfeat\vl\host.h	445;"	d
VL_INT32_C	.\vlfeat\vl\host.h	433;"	d
VL_INT32_C	.\vlfeat\vl\host.h	446;"	d
VL_INT64_C	.\vlfeat\vl\host.h	434;"	d
VL_INT64_C	.\vlfeat\vl\host.h	447;"	d
VL_INT8_C	.\vlfeat\vl\host.h	431;"	d
VL_INT8_C	.\vlfeat\vl\host.h	444;"	d
VL_KDTREE_H	.\vlfeat\vl\kdtree.h	15;"	d
VL_KDTREE_MEAN	.\vlfeat\vl\kdtree.h	/^  VL_KDTREE_MEAN$/;"	e	enum:_VlKDTreeThresholdingMethod
VL_KDTREE_MEDIAN	.\vlfeat\vl\kdtree.h	/^  VL_KDTREE_MEDIAN,$/;"	e	enum:_VlKDTreeThresholdingMethod
VL_KDTREE_SPLIT_HEAP_SIZE	.\vlfeat\vl\kdtree.h	20;"	d
VL_KDTREE_VARIANCE_EST_NUM_SAMPLES	.\vlfeat\vl\kdtree.h	21;"	d
VL_KMEANS_H	.\vlfeat\vl\kmeans.h	17;"	d
VL_KMEANS_INSTANTIATING	.\vlfeat\vl\kmeans.c	1781;"	d	file:
VL_KMEANS_INSTANTIATING	.\vlfeat\vl\kmeans.c	1787;"	d	file:
VL_KMEANS_INSTANTIATING	.\vlfeat\vl\kmeans.c	2101;"	d	file:
VL_LBP_H	.\vlfeat\vl\lbp.h	15;"	d
VL_LIOP_H	.\vlfeat\vl\liop.h	17;"	d
VL_LOG_OF_2	.\vlfeat\vl\mathop.h	25;"	d
VL_MATHOP_AVX_H	.\vlfeat\vl\mathop_avx.h	18;"	d
VL_MATHOP_AVX_H_INSTANTIATING	.\vlfeat\vl\mathop_avx.h	22;"	d
VL_MATHOP_AVX_H_INSTANTIATING	.\vlfeat\vl\mathop_avx.h	27;"	d
VL_MATHOP_AVX_H_INSTANTIATING	.\vlfeat\vl\mathop_avx.h	60;"	d
VL_MATHOP_AVX_INSTANTIATING	.\vlfeat\vl\mathop_avx.c	21;"	d	file:
VL_MATHOP_AVX_INSTANTIATING	.\vlfeat\vl\mathop_avx.c	26;"	d	file:
VL_MATHOP_AVX_INSTANTIATING	.\vlfeat\vl\mathop_avx.c	274;"	d	file:
VL_MATHOP_H	.\vlfeat\vl\mathop.h	15;"	d
VL_MATHOP_INSTANTIATING	.\vlfeat\vl\mathop.c	1032;"	d	file:
VL_MATHOP_INSTANTIATING	.\vlfeat\vl\mathop.c	271;"	d	file:
VL_MATHOP_INSTANTIATING	.\vlfeat\vl\mathop.c	276;"	d	file:
VL_MATHOP_SSE2_H	.\vlfeat\vl\mathop_sse2.h	18;"	d
VL_MATHOP_SSE2_H_INSTANTIATING	.\vlfeat\vl\mathop_sse2.h	22;"	d
VL_MATHOP_SSE2_H_INSTANTIATING	.\vlfeat\vl\mathop_sse2.h	27;"	d
VL_MATHOP_SSE2_INSTANTIATING	.\vlfeat\vl\mathop_sse2.c	21;"	d	file:
VL_MATHOP_SSE2_INSTANTIATING	.\vlfeat\vl\mathop_sse2.c	26;"	d	file:
VL_MATHOP_SSE2_INSTANTIATING	.\vlfeat\vl\mathop_sse2.c	563;"	d	file:
VL_MATHOP_SSE2_INSTANTIATING	.\vlfeat\vl\mathop_sse2.h	84;"	d
VL_MAX	.\vlfeat\vl\generic.h	188;"	d
VL_MIN	.\vlfeat\vl\generic.h	181;"	d
VL_MSC	.\vlfeat\make\nmake_helper.mak	/^VL_MSC = 1200$/;"	m
VL_MSC	.\vlfeat\make\nmake_helper.mak	/^VL_MSC = 1300$/;"	m
VL_MSC	.\vlfeat\make\nmake_helper.mak	/^VL_MSC = 1310$/;"	m
VL_MSC	.\vlfeat\make\nmake_helper.mak	/^VL_MSC = 1400$/;"	m
VL_MSC	.\vlfeat\make\nmake_helper.mak	/^VL_MSC = 1500$/;"	m
VL_MSC	.\vlfeat\make\nmake_helper.mak	/^VL_MSC = 1600$/;"	m
VL_MSC	.\vlfeat\make\nmake_helper.mak	/^VL_MSC = 1700$/;"	m
VL_MSC	.\vlfeat\make\nmake_helper.mak	/^VL_MSC =$/;"	m
VL_MSER	.\vlfeat\vl\mser.h	15;"	d
VL_MSER_DRIVER_VERSION	.\vlfeat\src\mser.c	15;"	d	file:
VL_MSER_PIX_MAXVAL	.\vlfeat\vl\mser.h	30;"	d
VL_MSER_VOID_NODE	.\vlfeat\vl\mser.h	117;"	d
VL_MSER_VOID_NODE	.\vlfeat\vl\mser.h	119;"	d
VL_MSVC	.\vlfeat\make\nmake_helper.mak	/^VL_MSVC = 10.0$/;"	m
VL_MSVC	.\vlfeat\make\nmake_helper.mak	/^VL_MSVC = 11.0$/;"	m
VL_MSVC	.\vlfeat\make\nmake_helper.mak	/^VL_MSVC = 4.0$/;"	m
VL_MSVC	.\vlfeat\make\nmake_helper.mak	/^VL_MSVC = 5.0$/;"	m
VL_MSVC	.\vlfeat\make\nmake_helper.mak	/^VL_MSVC = 6.0$/;"	m
VL_MSVC	.\vlfeat\make\nmake_helper.mak	/^VL_MSVC = 7.0$/;"	m
VL_MSVC	.\vlfeat\make\nmake_helper.mak	/^VL_MSVC = 7.1$/;"	m
VL_MSVC	.\vlfeat\make\nmake_helper.mak	/^VL_MSVC = 8.0$/;"	m
VL_MSVC	.\vlfeat\make\nmake_helper.mak	/^VL_MSVC = 9.0$/;"	m
VL_MSVC	.\vlfeat\make\nmake_helper.mak	/^VL_MSVC =$/;"	m
VL_MSVS	.\vlfeat\make\nmake_helper.mak	/^VL_MSVS = 100$/;"	m
VL_MSVS	.\vlfeat\make\nmake_helper.mak	/^VL_MSVS = 110$/;"	m
VL_MSVS	.\vlfeat\make\nmake_helper.mak	/^VL_MSVS = 40$/;"	m
VL_MSVS	.\vlfeat\make\nmake_helper.mak	/^VL_MSVS = 50$/;"	m
VL_MSVS	.\vlfeat\make\nmake_helper.mak	/^VL_MSVS = 60$/;"	m
VL_MSVS	.\vlfeat\make\nmake_helper.mak	/^VL_MSVS = 70$/;"	m
VL_MSVS	.\vlfeat\make\nmake_helper.mak	/^VL_MSVS = 71$/;"	m
VL_MSVS	.\vlfeat\make\nmake_helper.mak	/^VL_MSVS = 80$/;"	m
VL_MSVS	.\vlfeat\make\nmake_helper.mak	/^VL_MSVS = 90$/;"	m
VL_MSVS	.\vlfeat\make\nmake_helper.mak	/^VL_MSVS =$/;"	m
VL_NAN_D	.\vlfeat\vl\mathop.h	89;"	d
VL_NAN_F	.\vlfeat\vl\mathop.h	83;"	d
VL_OS_LINUX	.\vlfeat\vl\host.h	180;"	d
VL_OS_MACOSX	.\vlfeat\vl\host.h	185;"	d
VL_OS_WIN	.\vlfeat\vl\host.h	191;"	d
VL_OS_WIN64	.\vlfeat\vl\host.h	196;"	d
VL_PAD_BY_CONTINUITY	.\vlfeat\vl\imopv.h	22;"	d
VL_PAD_BY_ZERO	.\vlfeat\vl\imopv.h	21;"	d
VL_PAD_MASK	.\vlfeat\vl\imopv.h	23;"	d
VL_PGM_H	.\vlfeat\vl\pgm.h	15;"	d
VL_PI	.\vlfeat\vl\mathop.h	28;"	d
VL_PLOTSS	.\vlfeat\doc\build\index.html	/^   function VL_PLOTSS(). This is the second point update supported by$/;"	f
VL_PLOTSS	.\vlfeat\doc\index.html	/^   function VL_PLOTSS(). This is the second point update supported by$/;"	f
VL_PLOTSS	.\vlfeat\docsrc\index.html	/^   function VL_PLOTSS(). This is the second point update supported by$/;"	f
VL_PRINT	.\vlfeat\vl\generic.h	169;"	d
VL_PRINTF	.\vlfeat\vl\generic.h	168;"	d
VL_PROT_ASCII	.\vlfeat\vl\stringop.h	/^  VL_PROT_ASCII,        \/**< ASCII protocol   *\/$/;"	e	enum:__anon44
VL_PROT_BINARY	.\vlfeat\vl\stringop.h	/^  VL_PROT_BINARY        \/**< Binary protocol  *\/$/;"	e	enum:__anon44
VL_PROT_NONE	.\vlfeat\vl\stringop.h	/^  VL_PROT_NONE    =  0, \/**< no protocol      *\/$/;"	e	enum:__anon44
VL_PROT_UNKNOWN	.\vlfeat\vl\stringop.h	/^  VL_PROT_UNKNOWN = -1, \/**< unknown protocol *\/$/;"	e	enum:__anon44
VL_QSORT_array	.\vlfeat\vl\kmeans.c	801;"	d	file:
VL_QSORT_array	.\vlfeat\vl\liop.c	280;"	d	file:
VL_QSORT_array	.\vlfeat\vl\liop.c	300;"	d	file:
VL_QSORT_array	.\vlfeat\vl\qsort-def.h	198;"	d
VL_QSORT_array	.\vlfeat\vl\qsort-def.h	49;"	d
VL_QSORT_array	.\vlfeat\vl\qsort-def.h	56;"	d
VL_QSORT_array_const	.\vlfeat\vl\qsort-def.h	50;"	d
VL_QSORT_cmp	.\vlfeat\vl\kmeans.c	802;"	d	file:
VL_QSORT_cmp	.\vlfeat\vl\liop.c	281;"	d	file:
VL_QSORT_cmp	.\vlfeat\vl\liop.c	301;"	d	file:
VL_QSORT_cmp	.\vlfeat\vl\qsort-def.h	/^VL_QSORT_cmp$/;"	f
VL_QSORT_cmp	.\vlfeat\vl\qsort-def.h	199;"	d
VL_QSORT_cmp	.\vlfeat\vl\qsort-def.h	62;"	d
VL_QSORT_prefix	.\vlfeat\src\test_qsort-def.c	14;"	d	file:
VL_QSORT_prefix	.\vlfeat\vl\kmeans.c	800;"	d	file:
VL_QSORT_prefix	.\vlfeat\vl\liop.c	279;"	d	file:
VL_QSORT_prefix	.\vlfeat\vl\liop.c	299;"	d	file:
VL_QSORT_prefix	.\vlfeat\vl\qsort-def.h	193;"	d
VL_QSORT_prefix	.\vlfeat\vl\qsort-def.h	54;"	d
VL_QSORT_sort	.\vlfeat\vl\qsort-def.h	/^VL_QSORT_sort$/;"	f
VL_QSORT_sort	.\vlfeat\vl\qsort-def.h	173;"	d
VL_QSORT_sort	.\vlfeat\vl\qsort-def.h	195;"	d
VL_QSORT_sort_recursive	.\vlfeat\vl\qsort-def.h	/^VL_QSORT_sort_recursive$/;"	f
VL_QSORT_sort_recursive	.\vlfeat\vl\qsort-def.h	115;"	d
VL_QSORT_sort_recursive	.\vlfeat\vl\qsort-def.h	196;"	d
VL_QSORT_swap	.\vlfeat\vl\kmeans.c	803;"	d	file:
VL_QSORT_swap	.\vlfeat\vl\liop.c	282;"	d	file:
VL_QSORT_swap	.\vlfeat\vl\liop.c	302;"	d	file:
VL_QSORT_swap	.\vlfeat\vl\qsort-def.h	/^VL_QSORT_swap$/;"	f
VL_QSORT_swap	.\vlfeat\vl\qsort-def.h	194;"	d
VL_QSORT_swap	.\vlfeat\vl\qsort-def.h	87;"	d
VL_QSORT_type	.\vlfeat\src\test_qsort-def.c	15;"	d	file:
VL_QSORT_type	.\vlfeat\vl\qsort-def.h	197;"	d
VL_QSORT_type	.\vlfeat\vl\qsort-def.h	55;"	d
VL_QS_INF	.\vlfeat\vl\quickshift.h	25;"	d
VL_QUICKSHIFT_H	.\vlfeat\vl\quickshift.h	16;"	d
VL_RANDOM_H	.\vlfeat\vl\random.h	16;"	d
VL_RODRIGUES	.\vlfeat\vl\rodrigues.h	25;"	d
VL_SCALESPACE_H	.\vlfeat\vl\scalespace.h	17;"	d
VL_SHIFT_LEFT	.\vlfeat\vl\generic.h	197;"	d
VL_SHUFFLE_array	.\vlfeat\vl\shuffle-def.h	101;"	d
VL_SHUFFLE_array	.\vlfeat\vl\shuffle-def.h	31;"	d
VL_SHUFFLE_array	.\vlfeat\vl\shuffle-def.h	37;"	d
VL_SHUFFLE_prefix	.\vlfeat\vl\gmm.c	681;"	d	file:
VL_SHUFFLE_prefix	.\vlfeat\vl\kmeans.c	496;"	d	file:
VL_SHUFFLE_prefix	.\vlfeat\vl\shuffle-def.h	35;"	d
VL_SHUFFLE_prefix	.\vlfeat\vl\shuffle-def.h	97;"	d
VL_SHUFFLE_shuffle	.\vlfeat\vl\shuffle-def.h	/^VL_SHUFFLE_shuffle$/;"	f
VL_SHUFFLE_shuffle	.\vlfeat\vl\shuffle-def.h	72;"	d
VL_SHUFFLE_shuffle	.\vlfeat\vl\shuffle-def.h	99;"	d
VL_SHUFFLE_swap	.\vlfeat\vl\shuffle-def.h	/^VL_SHUFFLE_swap$/;"	f
VL_SHUFFLE_swap	.\vlfeat\vl\shuffle-def.h	43;"	d
VL_SHUFFLE_swap	.\vlfeat\vl\shuffle-def.h	98;"	d
VL_SHUFFLE_type	.\vlfeat\vl\gmm.c	680;"	d	file:
VL_SHUFFLE_type	.\vlfeat\vl\kmeans.c	495;"	d	file:
VL_SHUFFLE_type	.\vlfeat\vl\shuffle-def.h	100;"	d
VL_SHUFFLE_type	.\vlfeat\vl\shuffle-def.h	36;"	d
VL_SIFT_BILINEAR_ORIENTATIONS	.\vlfeat\vl\sift.c	669;"	d	file:
VL_SIFT_DRIVER_VERSION	.\vlfeat\src\sift.c	15;"	d	file:
VL_SIFT_H	.\vlfeat\vl\sift.h	15;"	d
VL_SLIC_H	.\vlfeat\vl\slic.h	15;"	d
VL_SMALL_INT	.\vlfeat\vl\host.h	537;"	d
VL_STRINGIFY	.\vlfeat\vl\host.h	66;"	d
VL_STRINGOP_H	.\vlfeat\vl\stringop.h	15;"	d
VL_SVMDATASET_H	.\vlfeat\vl\svmdataset.h	17;"	d
VL_SVMDATASET_INSTANTIATING	.\vlfeat\vl\svmdataset.c	116;"	d	file:
VL_SVMDATASET_INSTANTIATING	.\vlfeat\vl\svmdataset.c	120;"	d	file:
VL_SVMDATASET_INSTANTIATING	.\vlfeat\vl\svmdataset.c	404;"	d	file:
VL_SVM_H	.\vlfeat\vl\svm.h	20;"	d
VL_THREADS_POSIX	.\vlfeat\vl\host.h	204;"	d
VL_THREADS_WIN	.\vlfeat\vl\host.h	209;"	d
VL_TRANSPOSE	.\vlfeat\vl\imopv.h	24;"	d
VL_TRUE	.\vlfeat\vl\host.h	370;"	d
VL_TYPE_DOUBLE	.\vlfeat\vl\generic.h	36;"	d
VL_TYPE_FLOAT	.\vlfeat\vl\generic.h	35;"	d
VL_TYPE_INT16	.\vlfeat\vl\generic.h	39;"	d
VL_TYPE_INT32	.\vlfeat\vl\generic.h	41;"	d
VL_TYPE_INT64	.\vlfeat\vl\generic.h	43;"	d
VL_TYPE_INT8	.\vlfeat\vl\generic.h	37;"	d
VL_TYPE_UINT16	.\vlfeat\vl\generic.h	40;"	d
VL_TYPE_UINT32	.\vlfeat\vl\generic.h	42;"	d
VL_TYPE_UINT64	.\vlfeat\vl\generic.h	44;"	d
VL_TYPE_UINT8	.\vlfeat\vl\generic.h	38;"	d
VL_UINT16_C	.\vlfeat\vl\host.h	437;"	d
VL_UINT16_C	.\vlfeat\vl\host.h	450;"	d
VL_UINT32_C	.\vlfeat\vl\host.h	438;"	d
VL_UINT32_C	.\vlfeat\vl\host.h	451;"	d
VL_UINT64_C	.\vlfeat\vl\host.h	439;"	d
VL_UINT64_C	.\vlfeat\vl\host.h	452;"	d
VL_UINT8_C	.\vlfeat\vl\host.h	436;"	d
VL_UINT8_C	.\vlfeat\vl\host.h	449;"	d
VL_UNUSED	.\vlfeat\vl\host.h	313;"	d
VL_UNUSED	.\vlfeat\vl\host.h	333;"	d
VL_UNUSED	.\vlfeat\vl\host.h	346;"	d
VL_USE_MATLAB_ENV	.\vlfeat\toolbox\mexutils.h	76;"	d
VL_VERSION_STRING	.\vlfeat\vl\generic.h	27;"	d
VL_VLAD_FLAG_NORMALIZE_COMPONENTS	.\vlfeat\vl\vlad.h	23;"	d
VL_VLAD_FLAG_NORMALIZE_MASS	.\vlfeat\vl\vlad.h	26;"	d
VL_VLAD_FLAG_SQUARE_ROOT	.\vlfeat\vl\vlad.h	24;"	d
VL_VLAD_FLAG_UNNORMALIZED	.\vlfeat\vl\vlad.h	25;"	d
VL_VLAD_H	.\vlfeat\vl\vlad.h	17;"	d
VL_VLAD_INSTANTIATING	.\vlfeat\vl\vlad.c	251;"	d	file:
VL_VLAD_INSTANTIATING	.\vlfeat\vl\vlad.c	257;"	d	file:
VL_VLAD_INSTANTIATING	.\vlfeat\vl\vlad.c	323;"	d	file:
VL_XCAT	.\vlfeat\toolbox\imop\vl_imsmooth.c	/^VL_XCAT(_vl_imsmooth_smooth_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\fisher.c	/^VL_XCAT(_vl_fisher_encode_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\gmm.c	/^VL_XCAT(_vl_gmm_apply_bounds_, SFX)(VlGMM * self)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\gmm.c	/^VL_XCAT(_vl_gmm_compute_init_sigma_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\gmm.c	/^VL_XCAT(_vl_gmm_em_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\gmm.c	/^VL_XCAT(_vl_gmm_init_with_kmeans_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\gmm.c	/^VL_XCAT(_vl_gmm_init_with_rand_data_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\gmm.c	/^VL_XCAT(_vl_gmm_maximization_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\gmm.c	/^VL_XCAT(_vl_gmm_restart_empty_modes_, SFX) (VlGMM * self, TYPE const * data)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\gmm.c	/^VL_XCAT(vl_get_gmm_data_posteriors_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\homkermap.c	/^VL_XCAT(vl_homogeneouskernelmap_evaluate_,SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\host.h	112;"	d
VL_XCAT	.\vlfeat\vl\imopv.c	/^VL_XCAT(_vl_new_gaussian_fitler_,SFX)(vl_size *size, double sigma)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\imopv.c	/^VL_XCAT(vl_image_distance_transform_,SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\imopv.c	/^VL_XCAT(vl_imconvcol_v, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\imopv.c	/^VL_XCAT(vl_imconvcoltri_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\imopv.c	/^VL_XCAT(vl_imgradient_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\imopv.c	/^VL_XCAT(vl_imgradient_polar_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\imopv.c	/^VL_XCAT(vl_imintegral_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\imopv.c	/^VL_XCAT(vl_imsmooth_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_init_centers_plus_plus_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_init_centers_with_rand_data_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_quantize_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_quantize_ann_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_refine_centers_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_refine_centers_ann_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_refine_centers_elkan_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_refine_centers_lloyd_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_set_centers_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_sort_data_helper_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\kmeans.c	/^VL_XCAT(_vl_kmeans_update_center_distances_, SFX)$/;"	f	file:
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_distance_chi2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_distance_hellinger_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_distance_js_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_distance_l1_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_distance_l2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_distance_mahalanobis_sq_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_kernel_chi2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_kernel_hellinger_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_kernel_js_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_kernel_l1_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(_vl_kernel_l2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(vl_eval_vector_comparison_on_all_pairs_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(vl_get_vector_3_comparison_function_, SFX)(VlVectorComparisonType type)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop.c	/^VL_XCAT(vl_get_vector_comparison_function_, SFX)(VlVectorComparisonType type)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_avx.c	/^VL_XCAT(_vl_distance_l2_avx_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_avx.c	/^VL_XCAT(_vl_distance_mahalanobis_sq_avx_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_avx.c	/^VL_XCAT(_vl_vhsum_avx_, SFX)(VTYPEavx x)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_avx.c	/^VL_XCAT(_vl_weighted_mean_avx_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_avx.c	/^VL_XCAT(_vl_weighted_sigma_avx_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_distance_chi2_sse2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_distance_l1_sse2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_distance_l2_sse2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_distance_mahalanobis_sq_sse2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_dot_sse2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_kernel_chi2_sse2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_kernel_l1_sse2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_kernel_l2_sse2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_vhsum_sse2_, SFX)(VTYPE x)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_weighted_mean_sse2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\mathop_sse2.c	/^VL_XCAT(_vl_weighted_sigma_sse2_, SFX)$/;"	f
VL_XCAT	.\vlfeat\vl\svmdataset.c	/^VL_XCAT(_vl_svmdataset_inner_product_,SFX) (VlSvmDataset const *self,$/;"	f
VL_XCAT	.\vlfeat\vl\svmdataset.c	/^VL_XCAT(_vl_svmdataset_inner_product_hom_,SFX) (VlSvmDataset const *self,$/;"	f
VL_XCAT	.\vlfeat\vl\svmdataset.c	/^VL_XCAT(vl_svmdataset_accumulate_,SFX)(VlSvmDataset const *self,$/;"	f
VL_XCAT	.\vlfeat\vl\svmdataset.c	/^VL_XCAT(vl_svmdataset_accumulate_hom_,SFX)(VlSvmDataset const *self,$/;"	f
VL_XCAT	.\vlfeat\vl\vlad.c	/^VL_XCAT(_vl_vlad_encode_, SFX)$/;"	f	file:
VL_XCAT3	.\vlfeat\vl\host.h	124;"	d
VL_XCAT3	.\vlfeat\vl\imopv_sse2.c	/^VL_XCAT3(_vl_imconvcol_v, SFX, _sse2)$/;"	f
VL_XCAT3	.\vlfeat\vl\kmeans.c	/^VL_XCAT3(_vl_kmeans_, SFX, _qsort_cmp)$/;"	f
VL_XCAT3	.\vlfeat\vl\kmeans.c	/^VL_XCAT3(_vl_kmeans_, SFX, _qsort_swap)$/;"	f
VL_XCAT4	.\vlfeat\vl\host.h	137;"	d
VL_XCAT5	.\vlfeat\vl\host.h	151;"	d
VL_XSTRINGIFY	.\vlfeat\vl\host.h	85;"	d
VL_YESNO	.\vlfeat\vl\host.h	165;"	d
VOCap	.\VOCap.m	/^function ap = VOCap(rec,prec)$/;"	f
VlAIB	.\vlfeat\vl\aib.h	/^} VlAIB;$/;"	t	typeref:struct:_VlAIB
VlArray	.\vlfeat\vl\array.h	/^} VlArray ;$/;"	t	typeref:struct:_VlArray
VlCovDet	.\vlfeat\vl\covdet.h	/^typedef struct _VlCovDet VlCovDet ;$/;"	t	typeref:struct:_VlCovDet
VlCovDetDescriptorType	.\vlfeat\toolbox\sift\vl_covdet.c	/^} VlCovDetDescriptorType ;$/;"	t	typeref:enum:_VlCovDetDescritporType	file:
VlCovDetExtremum2	.\vlfeat\vl\covdet.c	/^} VlCovDetExtremum2 ;$/;"	t	typeref:struct:_VlCovDetExtremum2	file:
VlCovDetExtremum3	.\vlfeat\vl\covdet.c	/^} VlCovDetExtremum3 ;$/;"	t	typeref:struct:_VlCovDetExtremum3	file:
VlCovDetFeature	.\vlfeat\vl\covdet.h	/^} VlCovDetFeature ;$/;"	t	typeref:struct:_VlCovDetFeature
VlCovDetFeatureLaplacianScale	.\vlfeat\vl\covdet.h	/^} VlCovDetFeatureLaplacianScale ;$/;"	t	typeref:struct:_VlCovDetFeatureLaplacianScale
VlCovDetFeatureOrientation	.\vlfeat\vl\covdet.h	/^} VlCovDetFeatureOrientation ;$/;"	t	typeref:struct:_VlCovDetFeatureOrientation
VlCovDetMethod	.\vlfeat\vl\covdet.h	/^} VlCovDetMethod;$/;"	t	typeref:enum:_VlCovDetMethod
VlDistanceChi2	.\vlfeat\vl\mathop.h	/^  VlDistanceChi2,      \/**< squared Chi2 distance *\/$/;"	e	enum:_VlVectorComparisonType
VlDistanceHellinger	.\vlfeat\vl\mathop.h	/^  VlDistanceHellinger, \/**< squared Hellinger's distance *\/$/;"	e	enum:_VlVectorComparisonType
VlDistanceJS	.\vlfeat\vl\mathop.h	/^  VlDistanceJS,        \/**< squared Jensen-Shannon distance *\/$/;"	e	enum:_VlVectorComparisonType
VlDistanceL1	.\vlfeat\vl\mathop.h	/^  VlDistanceL1,        \/**< l1 distance (squared intersection metric) *\/$/;"	e	enum:_VlVectorComparisonType
VlDistanceL2	.\vlfeat\vl\mathop.h	/^  VlDistanceL2,        \/**< squared l2 distance *\/$/;"	e	enum:_VlVectorComparisonType
VlDistanceMahalanobis	.\vlfeat\vl\mathop.h	/^  VlDistanceMahalanobis,     \/**< squared mahalanobis distance *\/$/;"	e	enum:_VlVectorComparisonType
VlDoubleVector3ComparisonFunction	.\vlfeat\vl\mathop.h	/^typedef double (*VlDoubleVector3ComparisonFunction)(vl_size dimension, double const * X, double const * Y, double const * Z) ;$/;"	t
VlDoubleVectorComparisonFunction	.\vlfeat\vl\mathop.h	/^typedef double (*VlDoubleVectorComparisonFunction)(vl_size dimension, double const * X, double const * Y) ;$/;"	t
VlDsiftDescriptorGeometry	.\vlfeat\vl\dsift.h	/^} VlDsiftDescriptorGeometry ;$/;"	t	typeref:struct:VlDsiftDescriptorGeometry_
VlDsiftDescriptorGeometry_	.\vlfeat\vl\dsift.h	/^typedef struct VlDsiftDescriptorGeometry_$/;"	s
VlDsiftFilter	.\vlfeat\vl\dsift.h	/^}  VlDsiftFilter ;$/;"	t	typeref:struct:VlDsiftFilter_
VlDsiftFilter_	.\vlfeat\vl\dsift.h	/^typedef struct VlDsiftFilter_$/;"	s
VlDsiftKeypoint	.\vlfeat\vl\dsift.h	/^} VlDsiftKeypoint ;$/;"	t	typeref:struct:VlDsiftKeypoint_
VlDsiftKeypoint_	.\vlfeat\vl\dsift.h	/^typedef struct VlDsiftKeypoint_$/;"	s
VlEnumerator	.\vlfeat\vl\stringop.h	/^} VlEnumerator ;$/;"	t	typeref:struct:_VlEnumerator
VlFileMeta	.\vlfeat\src\generic-driver.h	/^typedef struct _VlFileMeta VlFileMeta ;$/;"	t	typeref:struct:_VlFileMeta
VlFloatVector3ComparisonFunction	.\vlfeat\vl\mathop.h	/^typedef float (*VlFloatVector3ComparisonFunction)(vl_size dimension, float const * X, float const * Y, float const * Z) ;$/;"	t
VlFloatVectorComparisonFunction	.\vlfeat\vl\mathop.h	/^typedef float (*VlFloatVectorComparisonFunction)(vl_size dimension, float const * X, float const * Y) ;$/;"	t
VlFrameDisc	.\vlfeat\vl\covdet.h	/^} VlFrameDisc ;$/;"	t	typeref:struct:_VlFrameDisc
VlFrameEllipse	.\vlfeat\vl\covdet.h	/^} VlFrameEllipse ;$/;"	t	typeref:struct:_VlFrameEllipse
VlFrameOrientedDisc	.\vlfeat\vl\covdet.h	/^} VlFrameOrientedDisc ;$/;"	t	typeref:struct:_VlFrameOrientedDisc
VlFrameOrientedEllipse	.\vlfeat\vl\covdet.h	/^} VlFrameOrientedEllipse;$/;"	t	typeref:struct:_VlFrameOrientedEllipse
VlFrameType	.\vlfeat\vl\covdet.h	/^} VlFrameType ;$/;"	t	typeref:enum:_VlFrameType
VlGMM	.\vlfeat\vl\gmm.h	/^typedef OPAQUE VlGMM ;$/;"	t
VlGMM	.\vlfeat\vl\gmm.h	/^typedef struct _VlGMM VlGMM ;$/;"	t	typeref:struct:_VlGMM
VlGMMCustom	.\vlfeat\vl\gmm.h	/^  VlGMMCustom  \/**< User specifies the initial GMM parameters. *\/$/;"	e	enum:_VlGMMInitialization
VlGMMInitialization	.\vlfeat\vl\gmm.h	/^} VlGMMInitialization ;$/;"	t	typeref:enum:_VlGMMInitialization
VlGMMKMeans	.\vlfeat\vl\gmm.h	/^  VlGMMKMeans, \/**< Initialize GMM from KMeans clustering. *\/$/;"	e	enum:_VlGMMInitialization
VlGMMRand	.\vlfeat\vl\gmm.h	/^  VlGMMRand,   \/**< Initialize GMM parameters by selecting points at random. *\/$/;"	e	enum:_VlGMMInitialization
VlHIKMNode	.\vlfeat\vl\hikmeans.h	/^} VlHIKMNode ;$/;"	t	typeref:struct:_VlHIKMNode
VlHIKMTree	.\vlfeat\vl\hikmeans.h	/^} VlHIKMTree ;$/;"	t	typeref:struct:_VlHIKMTree
VlHog	.\vlfeat\vl\hog.h	/^typedef struct VlHog_ VlHog ;$/;"	t	typeref:struct:VlHog_
VlHogVariant	.\vlfeat\vl\hog.h	/^typedef enum VlHogVariant_ VlHogVariant ;$/;"	t	typeref:enum:VlHogVariant_
VlHogVariantDalalTriggs	.\vlfeat\vl\hog.h	/^enum VlHogVariant_ { VlHogVariantDalalTriggs, VlHogVariantUoctti } ;$/;"	e	enum:VlHogVariant_
VlHogVariantUoctti	.\vlfeat\vl\hog.h	/^enum VlHogVariant_ { VlHogVariantDalalTriggs, VlHogVariantUoctti } ;$/;"	e	enum:VlHogVariant_
VlHogVariant_	.\vlfeat\vl\hog.h	/^enum VlHogVariant_ { VlHogVariantDalalTriggs, VlHogVariantUoctti } ;$/;"	g
VlHog_	.\vlfeat\vl\hog.h	/^struct VlHog_$/;"	s
VlHomogeneousKernelChi2	.\vlfeat\vl\homkermap.h	/^  VlHomogeneousKernelChi2, \/**< Chi2 kernel *\/$/;"	e	enum:__anon37
VlHomogeneousKernelIntersection	.\vlfeat\vl\homkermap.h	/^  VlHomogeneousKernelIntersection = 0, \/**< intersection kernel *\/$/;"	e	enum:__anon37
VlHomogeneousKernelJS	.\vlfeat\vl\homkermap.h	/^  VlHomogeneousKernelJS \/**< Jensen-Shannon kernel *\/$/;"	e	enum:__anon37
VlHomogeneousKernelMap	.\vlfeat\vl\homkermap.h	/^typedef OPAQUE VlHomogeneousKernelMap ;$/;"	t
VlHomogeneousKernelMap	.\vlfeat\vl\homkermap.h	/^typedef struct _VlHomogeneousKernelMap VlHomogeneousKernelMap ;$/;"	t	typeref:struct:_VlHomogeneousKernelMap
VlHomogeneousKernelMapWindowRectangular	.\vlfeat\vl\homkermap.h	/^  VlHomogeneousKernelMapWindowRectangular = 1, \/**< rectangular window *\/$/;"	e	enum:__anon38
VlHomogeneousKernelMapWindowType	.\vlfeat\vl\homkermap.h	/^} VlHomogeneousKernelMapWindowType ;$/;"	t	typeref:enum:__anon38
VlHomogeneousKernelMapWindowUniform	.\vlfeat\vl\homkermap.h	/^  VlHomogeneousKernelMapWindowUniform = 0, \/**< uniform window *\/$/;"	e	enum:__anon38
VlHomogeneousKernelType	.\vlfeat\vl\homkermap.h	/^} VlHomogeneousKernelType ;$/;"	t	typeref:enum:__anon37
VlIKMAlgorithms	.\vlfeat\vl\ikmeans.h	/^enum VlIKMAlgorithms {$/;"	g
VlIKMFilt	.\vlfeat\vl\ikmeans.h	/^} VlIKMFilt ;$/;"	t	typeref:struct:_VlIKMFilt
VlKDForest	.\vlfeat\vl\kdtree.h	/^} VlKDForest ;$/;"	t	typeref:struct:_VlKDForest
VlKDForestNeighbor	.\vlfeat\vl\kdtree.h	/^} VlKDForestNeighbor ;$/;"	t	typeref:struct:_VlKDForestNeighbor
VlKDForestSearchState	.\vlfeat\vl\kdtree.h	/^typedef struct _VlKDForestSearchState VlKDForestSearchState ;$/;"	t	typeref:struct:_VlKDForestSearchState
VlKDForestSearcher	.\vlfeat\vl\kdtree.h	/^} VlKDForestSearcher ;$/;"	t	typeref:struct:_VlKDForestSearcher
VlKDTree	.\vlfeat\vl\kdtree.h	/^} VlKDTree ;$/;"	t	typeref:struct:_VlKDTree
VlKDTreeDataIndexEntry	.\vlfeat\vl\kdtree.h	/^typedef struct _VlKDTreeDataIndexEntry VlKDTreeDataIndexEntry ;$/;"	t	typeref:struct:_VlKDTreeDataIndexEntry
VlKDTreeNode	.\vlfeat\vl\kdtree.h	/^typedef struct _VlKDTreeNode VlKDTreeNode ;$/;"	t	typeref:struct:_VlKDTreeNode
VlKDTreeSplitDimension	.\vlfeat\vl\kdtree.h	/^typedef struct _VlKDTreeSplitDimension VlKDTreeSplitDimension ;$/;"	t	typeref:struct:_VlKDTreeSplitDimension
VlKDTreeThresholdingMethod	.\vlfeat\vl\kdtree.h	/^} VlKDTreeThresholdingMethod ;$/;"	t	typeref:enum:_VlKDTreeThresholdingMethod
VlKMeans	.\vlfeat\vl\kmeans.h	/^} VlKMeans ;$/;"	t	typeref:struct:_VlKMeans
VlKMeansANN	.\vlfeat\vl\kmeans.h	/^  VlKMeansANN          \/**< Approximate nearest neighbors *\/$/;"	e	enum:_VlKMeansAlgorithm
VlKMeansAlgorithm	.\vlfeat\vl\kmeans.h	/^} VlKMeansAlgorithm ;$/;"	t	typeref:enum:_VlKMeansAlgorithm
VlKMeansElkan	.\vlfeat\vl\kmeans.h	/^  VlKMeansElkan,       \/**< Elkan algorithm *\/$/;"	e	enum:_VlKMeansAlgorithm
VlKMeansInitialization	.\vlfeat\vl\kmeans.h	/^} VlKMeansInitialization ;$/;"	t	typeref:enum:_VlKMeansInitialization
VlKMeansLloyd	.\vlfeat\vl\kmeans.h	/^  VlKMeansLloyd,       \/**< Lloyd algorithm *\/$/;"	e	enum:_VlKMeansAlgorithm
VlKMeansPlusPlus	.\vlfeat\vl\kmeans.h	/^  VlKMeansPlusPlus          \/**< Plus plus raondomized selection *\/$/;"	e	enum:_VlKMeansInitialization
VlKMeansRandomSelection	.\vlfeat\vl\kmeans.h	/^  VlKMeansRandomSelection,  \/**< Randomized selection *\/$/;"	e	enum:_VlKMeansInitialization
VlKMeansSortWrapper	.\vlfeat\vl\kmeans.c	/^} VlKMeansSortWrapper ;$/;"	t	typeref:struct:_VlKMeansSortWrapper	file:
VlKernelChi2	.\vlfeat\vl\mathop.h	/^  VlKernelChi2,        \/**< Chi2 kernel *\/$/;"	e	enum:_VlVectorComparisonType
VlKernelHellinger	.\vlfeat\vl\mathop.h	/^  VlKernelHellinger,   \/**< Hellinger's kernel *\/$/;"	e	enum:_VlVectorComparisonType
VlKernelJS	.\vlfeat\vl\mathop.h	/^  VlKernelJS           \/**< Jensen-Shannon kernel *\/$/;"	e	enum:_VlVectorComparisonType
VlKernelL1	.\vlfeat\vl\mathop.h	/^  VlKernelL1,          \/**< intersection kernel *\/$/;"	e	enum:_VlVectorComparisonType
VlKernelL2	.\vlfeat\vl\mathop.h	/^  VlKernelL2,          \/**< l2 kernel *\/$/;"	e	enum:_VlVectorComparisonType
VlLbp	.\vlfeat\vl\lbp.h	/^} VlLbp ;$/;"	t	typeref:struct:VlLbp_
VlLbpMappingType	.\vlfeat\vl\lbp.h	/^} VlLbpMappingType ;$/;"	t	typeref:enum:_VlLbpMappingType
VlLbpUniform	.\vlfeat\vl\lbp.h	/^  VlLbpUniform     \/**< Uniform local binary patterns. *\/$/;"	e	enum:_VlLbpMappingType
VlLbp_	.\vlfeat\vl\lbp.h	/^typedef struct VlLbp_$/;"	s
VlLiopDesc	.\vlfeat\vl\liop.h	/^} VlLiopDesc ;$/;"	t	typeref:struct:_VlLiopDesc
VlMserExtrReg	.\vlfeat\vl\mser.h	/^typedef struct _VlMserExtrReg VlMserExtrReg ;$/;"	t	typeref:struct:_VlMserExtrReg
VlMserFilt	.\vlfeat\vl\mser.h	/^typedef struct _VlMserFilt VlMserFilt ;$/;"	t	typeref:struct:_VlMserFilt
VlMserReg	.\vlfeat\vl\mser.h	/^typedef struct _VlMserReg VlMserReg ;$/;"	t	typeref:struct:_VlMserReg
VlMserStats	.\vlfeat\vl\mser.h	/^typedef struct _VlMserStats VlMserStats ;$/;"	t	typeref:struct:_VlMserStats
VlPgmImage	.\vlfeat\vl\pgm.h	/^} VlPgmImage ;$/;"	t	typeref:struct:_VlPgmImage
VlQS	.\vlfeat\vl\quickshift.h	/^} VlQS ;$/;"	t	typeref:struct:_VlQS
VlRand	.\vlfeat\vl\random.h	/^} VlRand ;$/;"	t	typeref:struct:_VlRand
VlScaleSpace	.\vlfeat\vl\scalespace.h	/^typedef struct _VlScaleSpace VlScaleSpace ;$/;"	t	typeref:struct:_VlScaleSpace
VlScaleSpaceGeometry	.\vlfeat\vl\scalespace.h	/^} VlScaleSpaceGeometry ;$/;"	t	typeref:struct:_VlScaleSpaceGeometry
VlScaleSpaceOctaveGeometry	.\vlfeat\vl\scalespace.h	/^} VlScaleSpaceOctaveGeometry ;$/;"	t	typeref:struct:_VlScaleSpaceOctaveGeometry
VlSiftFilt	.\vlfeat\vl\sift.h	/^} VlSiftFilt ;$/;"	t	typeref:struct:_VlSiftFilt
VlSiftKeypoint	.\vlfeat\vl\sift.h	/^} VlSiftKeypoint ;$/;"	t	typeref:struct:_VlSiftKeypoint
VlState	.\vlfeat\vl\generic.c	/^} VlState ;$/;"	t	typeref:struct:_VlState	file:
VlSvm	.\vlfeat\vl\svm.h	/^typedef OPAQUE VlSvm ;$/;"	t
VlSvm	.\vlfeat\vl\svm.h	/^typedef struct VlSvm_ VlSvm ;$/;"	t	typeref:struct:VlSvm_
VlSvmAccumulateFunction	.\vlfeat\vl\svmdataset.h	/^typedef void (*VlSvmAccumulateFunction) (const void *data, vl_uindex element, double *model, double multiplier) ;$/;"	t
VlSvmDataset	.\vlfeat\vl\svmdataset.h	/^typedef OPAQUE VlSvmDataset ;$/;"	t
VlSvmDataset	.\vlfeat\vl\svmdataset.h	/^typedef struct VlSvmDataset_ VlSvmDataset ;$/;"	t	typeref:struct:VlSvmDataset_
VlSvmDataset_	.\vlfeat\vl\svmdataset.c	/^struct VlSvmDataset_ {$/;"	s	file:
VlSvmDcaUpdateFunction	.\vlfeat\vl\svmdataset.h	/^typedef double (*VlSvmDcaUpdateFunction) (double alpha, double inner, double norm2, double label) ;$/;"	t
VlSvmDiagnosticFunction	.\vlfeat\vl\svmdataset.h	/^typedef void (*VlSvmDiagnosticFunction) (struct VlSvm_ *svm, void *data) ;$/;"	t
VlSvmInnerProductFunction	.\vlfeat\vl\svmdataset.h	/^typedef double (*VlSvmInnerProductFunction)(const void *data, vl_uindex element, double *model) ;$/;"	t
VlSvmLossFunction	.\vlfeat\vl\svmdataset.h	/^typedef double (*VlSvmLossFunction) (double inner, double label) ;$/;"	t
VlSvmLossHinge	.\vlfeat\vl\svm.h	/^  VlSvmLossHinge = 0,   \/**< Standard hinge loss. *\/$/;"	e	enum:__anon46
VlSvmLossHinge2	.\vlfeat\vl\svm.h	/^  VlSvmLossHinge2 = 1,  \/**< Hinge loss squared. *\/$/;"	e	enum:__anon46
VlSvmLossL1	.\vlfeat\vl\svm.h	/^  VlSvmLossL1,          \/**< L1 loss. *\/$/;"	e	enum:__anon46
VlSvmLossL2	.\vlfeat\vl\svm.h	/^  VlSvmLossL2,          \/**< L2 loss. *\/$/;"	e	enum:__anon46
VlSvmLossLogistic	.\vlfeat\vl\svm.h	/^  VlSvmLossLogistic     \/**< Logistic loss. *\/$/;"	e	enum:__anon46
VlSvmLossType	.\vlfeat\vl\svm.h	/^} VlSvmLossType ;$/;"	t	typeref:enum:__anon46
VlSvmSolverNone	.\vlfeat\vl\svm.h	/^  VlSvmSolverNone = 0, \/**< No solver (used to evaluate an SVM). *\/$/;"	e	enum:__anon45
VlSvmSolverSdca	.\vlfeat\vl\svm.h	/^  VlSvmSolverSdca      \/**< SDCA algorithm (@ref svm-sdca). *\/$/;"	e	enum:__anon45
VlSvmSolverSgd	.\vlfeat\vl\svm.h	/^  VlSvmSolverSgd = 1,  \/**< SGD algorithm (@ref svm-sgd). *\/$/;"	e	enum:__anon45
VlSvmSolverStatus	.\vlfeat\vl\svm.h	/^} VlSvmSolverStatus ;$/;"	t	typeref:enum:__anon47
VlSvmSolverType	.\vlfeat\vl\svm.h	/^} VlSvmSolverType ;$/;"	t	typeref:enum:__anon45
VlSvmStatistics	.\vlfeat\vl\svm.h	/^} VlSvmStatistics ;$/;"	t	typeref:struct:VlSvmStatistics_
VlSvmStatistics_	.\vlfeat\vl\svm.h	/^typedef struct VlSvmStatistics_ {$/;"	s
VlSvmStatusConverged	.\vlfeat\vl\svm.h	/^  VlSvmStatusConverged, \/**< Optimization finished because the convergence criterion was met. *\/$/;"	e	enum:__anon47
VlSvmStatusMaxNumIterationsReached	.\vlfeat\vl\svm.h	/^  VlSvmStatusMaxNumIterationsReached \/**< Optimization finished without convergence. *\/$/;"	e	enum:__anon47
VlSvmStatusTraining	.\vlfeat\vl\svm.h	/^  VlSvmStatusTraining = 1, \/**< Optimization in progress. *\/$/;"	e	enum:__anon47
VlSvm_	.\vlfeat\vl\svm.c	/^struct VlSvm_ {$/;"	s	file:
VlThreadState	.\vlfeat\vl\generic.c	/^} VlThreadState ;$/;"	t	typeref:struct:_VlThreadState	file:
VlVectorComparisonType	.\vlfeat\vl\mathop.h	/^typedef enum _VlVectorComparisonType VlVectorComparisonType ;$/;"	t	typeref:enum:_VlVectorComparisonType
VlX86CpuInfo	.\vlfeat\vl\host.h	/^} VlX86CpuInfo ;$/;"	t	typeref:struct:_VlX86CpuInfo
VlmxErrorId	.\vlfeat\toolbox\mexutils.h	/^} VlmxErrorId ;$/;"	t	typeref:enum:_VlmxErrorId
W	.\vlfeat\vl\rodrigues.c	198;"	d	file:
W	.\vlfeat\vl\rodrigues.c	328;"	d	file:
WERR	.\vlfeat\src\mser.c	314;"	d	file:
WERR	.\vlfeat\src\sift.c	523;"	d	file:
WINSDKROOT	.\vlfeat\Makefile.mak	/^WINSDKROOT = $(WINDOWSSDKDIR)$/;"	m
WINSDKROOT	.\vlfeat\Makefile.mak	/^WINSDKROOT = C:\\Program Files\\Microsoft SDKs\\Windows\\v7.0A$/;"	m
_COMPARE_TEMPLATE	.\vlfeat\toolbox\sift\vl_ubcmatch.c	/^_COMPARE_TEMPLATE( mxDOUBLE_CLASS )$/;"	f
_COMPARE_TEMPLATE	.\vlfeat\toolbox\sift\vl_ubcmatch.c	50;"	d	file:
_DISPATCH_COMPARE	.\vlfeat\toolbox\sift\vl_ubcmatch.c	170;"	d	file:
_H	.\vlfeat\src\test_heap-def.c	/^typedef struct _H {$/;"	s	file:
_S	.\vlfeat\src\test_heap-def.c	/^typedef struct _S { int x ; } S ;$/;"	s	file:
_VlAIB	.\vlfeat\vl\aib.h	/^typedef struct _VlAIB$/;"	s
_VlArray	.\vlfeat\vl\array.h	/^typedef struct _VlArray$/;"	s
_VlCovDet	.\vlfeat\vl\covdet.c	/^struct _VlCovDet$/;"	s	file:
_VlCovDet	.\vlfeat\vl\covdet.h	/^struct _VlCovDet { }$/;"	s
_VlCovDetDescritporType	.\vlfeat\toolbox\sift\vl_covdet.c	/^typedef enum _VlCovDetDescritporType {$/;"	g	file:
_VlCovDetExtremum2	.\vlfeat\vl\covdet.c	/^typedef struct _VlCovDetExtremum2$/;"	s	file:
_VlCovDetExtremum3	.\vlfeat\vl\covdet.c	/^typedef struct _VlCovDetExtremum3$/;"	s	file:
_VlCovDetFeature	.\vlfeat\vl\covdet.h	/^typedef struct _VlCovDetFeature$/;"	s
_VlCovDetFeatureLaplacianScale	.\vlfeat\vl\covdet.h	/^typedef struct _VlCovDetFeatureLaplacianScale$/;"	s
_VlCovDetFeatureOrientation	.\vlfeat\vl\covdet.h	/^typedef struct _VlCovDetFeatureOrientation$/;"	s
_VlCovDetMethod	.\vlfeat\vl\covdet.h	/^typedef enum _VlCovDetMethod$/;"	g
_VlEnumerator	.\vlfeat\vl\stringop.h	/^typedef struct _VlEnumerator$/;"	s
_VlFileMeta	.\vlfeat\src\generic-driver.h	/^struct _VlFileMeta$/;"	s
_VlFrameDisc	.\vlfeat\vl\covdet.h	/^typedef struct _VlFrameDisc$/;"	s
_VlFrameEllipse	.\vlfeat\vl\covdet.h	/^typedef struct _VlFrameEllipse {$/;"	s
_VlFrameOrientedDisc	.\vlfeat\vl\covdet.h	/^typedef struct _VlFrameOrientedDisc {$/;"	s
_VlFrameOrientedEllipse	.\vlfeat\vl\covdet.h	/^typedef struct _VlFrameOrientedEllipse {$/;"	s
_VlFrameType	.\vlfeat\vl\covdet.h	/^typedef enum _VlFrameType {$/;"	g
_VlGMM	.\vlfeat\vl\gmm.c	/^struct _VlGMM$/;"	s	file:
_VlGMMInitialization	.\vlfeat\vl\gmm.h	/^typedef enum _VlGMMInitialization$/;"	g
_VlHIKMNode	.\vlfeat\vl\hikmeans.h	/^typedef struct _VlHIKMNode$/;"	s
_VlHIKMTree	.\vlfeat\vl\hikmeans.h	/^typedef struct _VlHIKMTree {$/;"	s
_VlHomogeneousKernelMap	.\vlfeat\vl\homkermap.c	/^struct _VlHomogeneousKernelMap$/;"	s	file:
_VlIKMFilt	.\vlfeat\vl\ikmeans.h	/^typedef struct _VlIKMFilt$/;"	s
_VlKDForest	.\vlfeat\vl\kdtree.h	/^typedef struct _VlKDForest$/;"	s
_VlKDForestNeighbor	.\vlfeat\vl\kdtree.h	/^typedef struct _VlKDForestNeighbor {$/;"	s
_VlKDForestSearchState	.\vlfeat\vl\kdtree.h	/^struct _VlKDForestSearchState$/;"	s
_VlKDForestSearcher	.\vlfeat\vl\kdtree.h	/^typedef struct _VlKDForestSearcher$/;"	s
_VlKDTree	.\vlfeat\vl\kdtree.h	/^typedef struct _VlKDTree$/;"	s
_VlKDTreeDataIndexEntry	.\vlfeat\vl\kdtree.h	/^struct _VlKDTreeDataIndexEntry$/;"	s
_VlKDTreeNode	.\vlfeat\vl\kdtree.h	/^struct _VlKDTreeNode$/;"	s
_VlKDTreeSplitDimension	.\vlfeat\vl\kdtree.h	/^struct _VlKDTreeSplitDimension$/;"	s
_VlKDTreeThresholdingMethod	.\vlfeat\vl\kdtree.h	/^typedef enum _VlKDTreeThresholdingMethod$/;"	g
_VlKMeans	.\vlfeat\vl\kmeans.h	/^typedef struct _VlKMeans$/;"	s
_VlKMeansAlgorithm	.\vlfeat\vl\kmeans.h	/^typedef enum _VlKMeansAlgorithm {$/;"	g
_VlKMeansInitialization	.\vlfeat\vl\kmeans.h	/^typedef enum _VlKMeansInitialization {$/;"	g
_VlKMeansSortWrapper	.\vlfeat\vl\kmeans.c	/^typedef struct _VlKMeansSortWrapper {$/;"	s	file:
_VlLbpMappingType	.\vlfeat\vl\lbp.h	/^typedef enum _VlLbpMappingType$/;"	g
_VlLiopDesc	.\vlfeat\vl\liop.h	/^typedef struct _VlLiopDesc$/;"	s
_VlMserExtrReg	.\vlfeat\vl\mser.h	/^struct _VlMserExtrReg$/;"	s
_VlMserFilt	.\vlfeat\vl\mser.h	/^struct _VlMserFilt$/;"	s
_VlMserReg	.\vlfeat\vl\mser.h	/^struct _VlMserReg$/;"	s
_VlMserStats	.\vlfeat\vl\mser.h	/^struct _VlMserStats$/;"	s
_VlPgmImage	.\vlfeat\vl\pgm.h	/^typedef struct _VlPgmImage$/;"	s
_VlQS	.\vlfeat\vl\quickshift.h	/^typedef struct _VlQS$/;"	s
_VlRand	.\vlfeat\vl\random.h	/^typedef struct _VlRand {$/;"	s
_VlScaleSpace	.\vlfeat\vl\scalespace.c	/^struct _VlScaleSpace$/;"	s	file:
_VlScaleSpaceGeometry	.\vlfeat\vl\scalespace.h	/^typedef struct _VlScaleSpaceGeometry$/;"	s
_VlScaleSpaceOctaveGeometry	.\vlfeat\vl\scalespace.h	/^typedef struct _VlScaleSpaceOctaveGeometry$/;"	s
_VlSiftFilt	.\vlfeat\vl\sift.h	/^typedef struct _VlSiftFilt$/;"	s
_VlSiftKeypoint	.\vlfeat\vl\sift.h	/^typedef struct _VlSiftKeypoint$/;"	s
_VlState	.\vlfeat\vl\generic.c	/^typedef struct _VlState$/;"	s	file:
_VlThreadState	.\vlfeat\vl\generic.c	/^typedef struct _VlThreadState$/;"	s	file:
_VlVectorComparisonType	.\vlfeat\vl\mathop.h	/^enum _VlVectorComparisonType {$/;"	g
_VlX86CpuInfo	.\vlfeat\vl\host.h	/^typedef struct _VlX86CpuInfo$/;"	s
_VlmxErrorId	.\vlfeat\toolbox\mexutils.h	/^typedef enum _VlmxErrorId {$/;"	g
__CHECK_H__	.\vlfeat\src\check.h	7;"	d
__author__	.\vlfeat\docsrc\doxytag.py	/^__author__           = 'Andrea Vedaldi'$/;"	v
__author__	.\vlfeat\docsrc\formatter.py	/^__author__           = 'Andrea Vedaldi'$/;"	v
__call__	.\vlfeat\docsrc\webdoc.py	/^    def __call__(self, obj, *args, **keys):$/;"	m	class:makeGuard	file:
__cmp__	.\vlfeat\docsrc\mdoc.py	/^    def __cmp__(self, other):$/;"	m	class:MFile	file:
__date__	.\vlfeat\docsrc\doxytag.py	/^__date__             = '2013-07-09'$/;"	v
__date__	.\vlfeat\docsrc\formatter.py	/^__date__             = '2008-01-01'$/;"	v
__description__	.\vlfeat\docsrc\doxytag.py	/^__description__      = 'Doxygen tags parser'$/;"	v
__description__	.\vlfeat\docsrc\formatter.py	/^__description__      = 'MDoc formatting module'$/;"	v
__get__	.\vlfeat\docsrc\webdoc.py	/^    def __get__(self, obj, type=None):$/;"	m	class:makeGuard	file:
__init__	.\vlfeat\docsrc\doxytag.py	/^    def __init__ (self, filename):$/;"	m	class:Doxytag
__init__	.\vlfeat\docsrc\formatter.py	/^    def __init__ (self, lines, funcs={}, linktype='a'):$/;"	m	class:Formatter
__init__	.\vlfeat\docsrc\formatter.py	/^    def __init__(self, lines):$/;"	m	class:Lexer
__init__	.\vlfeat\docsrc\mdoc.py	/^    def __init__(self, basedir, dirname, name):$/;"	m	class:MFile
__init__	.\vlfeat\docsrc\mdoc.py	/^    def __init__(self, dirname):$/;"	m	class:Node
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self): pass$/;"	m	class:DocBareNode
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self):$/;"	m	class:DocCDATA
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self):$/;"	m	class:DocHandler
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, URL, row, column):$/;"	m	class:DocLocation
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, attrs, URL = None, locator = None):$/;"	m	class:DocCode
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, attrs, URL, locator):$/;"	m	class:DocDir
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, attrs, URL, locator):$/;"	m	class:DocGroup
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, attrs, URL, locator):$/;"	m	class:DocInclude
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, attrs, URL, locator):$/;"	m	class:DocNode
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, attrs, URL, locator):$/;"	m	class:DocPage
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, attrs, URL, locator):$/;"	m	class:DocPageScript
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, attrs, URL, locator):$/;"	m	class:DocPageStyle
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, attrs, URL, locator):$/;"	m	class:DocSite
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, attrs, URL, locator):$/;"	m	class:DocTemplate
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, func):$/;"	m	class:makeGuard
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, message):$/;"	m	class:DocError
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, rootDir):$/;"	m	class:Generator
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, tag, attrs, URL = None, locator = None):$/;"	m	class:DocHtmlElement
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, text):$/;"	m	class:DocCDATAText
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, text):$/;"	m	class:DocCodeText
__init__	.\vlfeat\docsrc\webdoc.py	/^    def __init__(self, text):$/;"	m	class:DocHtmlText
__license__	.\vlfeat\docsrc\doxytag.py	/^__license__          = 'BSD'$/;"	v
__license__	.\vlfeat\docsrc\formatter.py	/^__license__          = 'BSD'$/;"	v
__long_description__	.\vlfeat\docsrc\doxytag.py	/^__long_description__ = __doc__$/;"	v
__long_description__	.\vlfeat\docsrc\formatter.py	/^__long_description__ = __doc__$/;"	v
__mpname__	.\vlfeat\docsrc\doxytag.py	/^__mpname__           = 'Doxytag'$/;"	v
__mpname__	.\vlfeat\docsrc\formatter.py	/^__mpname__           = 'MDocFormatter'$/;"	v
__str__	.\vlfeat\docsrc\formatter.py	/^    def __str__(self):$/;"	m	class:Lexer	file:
__str__	.\vlfeat\docsrc\mdoc.py	/^    def __str__(self):$/;"	m	class:MFile	file:
__str__	.\vlfeat\docsrc\mdoc.py	/^    def __str__(self):$/;"	m	class:Node	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocCDATA	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocCDATAText	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocCode	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocCodeText	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocDir	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocError	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocGroup	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocHtmlElement	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocHtmlText	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocInclude	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocLocation	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocNode	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocPage	file:
__str__	.\vlfeat\docsrc\webdoc.py	/^    def __str__(self):$/;"	m	class:DocSite	file:
__version__	.\vlfeat\docsrc\doxytag.py	/^__version__          = '0.1'$/;"	v
__version__	.\vlfeat\docsrc\formatter.py	/^__version__          = '0.1'$/;"	v
_createArrayFromScaleSpace	.\vlfeat\toolbox\sift\vl_covdet.c	/^_createArrayFromScaleSpace(VlScaleSpace const *ss)$/;"	f	file:
_vl_covdet_check_frame_inside	.\vlfeat\vl\covdet.c	/^_vl_covdet_check_frame_inside (VlCovDet * self, VlFrameOrientedEllipse frame, double margin)$/;"	f
_vl_covdet_compare_orientations_descending	.\vlfeat\vl\covdet.c	/^_vl_covdet_compare_orientations_descending (void const * a_,$/;"	f	file:
_vl_cpuid	.\vlfeat\vl\host.c	/^_vl_cpuid (vl_int32* info, int function)$/;"	f
_vl_det_hessian_response	.\vlfeat\vl\covdet.c	/^_vl_det_hessian_response (float * hessian,$/;"	f	file:
_vl_dog_response	.\vlfeat\vl\covdet.c	/^_vl_dog_response (float * dog,$/;"	f	file:
_vl_dsift_alloc_buffers	.\vlfeat\vl\dsift.c	/^_vl_dsift_alloc_buffers (VlDsiftFilter* self)$/;"	f	file:
_vl_dsift_free_buffers	.\vlfeat\vl\dsift.c	/^_vl_dsift_free_buffers (VlDsiftFilter* self)$/;"	f	file:
_vl_dsift_get_bin_window_mean	.\vlfeat\vl\dsift.c	/^_vl_dsift_get_bin_window_mean$/;"	f	file:
_vl_dsift_new_kernel	.\vlfeat\vl\dsift.c	/^_vl_dsift_new_kernel (int binSize, int numBins, int binIndex, double windowSize)$/;"	f
_vl_dsift_normalize_histogram	.\vlfeat\vl\dsift.c	/^_vl_dsift_normalize_histogram (float * begin, float * end)$/;"	f
_vl_dsift_update_buffers	.\vlfeat\vl\dsift.c	/^_vl_dsift_update_buffers (VlDsiftFilter * self)$/;"	f
_vl_dsift_with_flat_window	.\vlfeat\vl\dsift.c	/^_vl_dsift_with_flat_window (VlDsiftFilter* self)$/;"	f
_vl_dsift_with_gaussian_window	.\vlfeat\vl\dsift.c	/^_vl_dsift_with_gaussian_window (VlDsiftFilter * self)$/;"	f
_vl_enlarge_buffer	.\vlfeat\vl\covdet.c	/^_vl_enlarge_buffer (void ** buffer, vl_size * bufferSize, vl_size targetSize) {$/;"	f	file:
_vl_gmm_prepare_for_data	.\vlfeat\vl\gmm.c	/^_vl_gmm_prepare_for_data (VlGMM* self, vl_size numData)$/;"	f	file:
_vl_harris_response	.\vlfeat\vl\covdet.c	/^_vl_harris_response (float * harris,$/;"	f	file:
_vl_lbp_init_uniform	.\vlfeat\vl\lbp.c	/^_vl_lbp_init_uniform(VlLbp * self)$/;"	f	file:
_vl_resize_buffer	.\vlfeat\vl\covdet.c	/^_vl_resize_buffer (void ** buffer, vl_size * bufferSize, vl_size targetSize) {$/;"	f	file:
_vl_scalespace_fill_octave	.\vlfeat\vl\scalespace.c	/^_vl_scalespace_fill_octave (VlScaleSpace *self, vl_index o)$/;"	f
_vl_scalespace_start_octave_from_image	.\vlfeat\vl\scalespace.c	/^_vl_scalespace_start_octave_from_image (VlScaleSpace *self,$/;"	f	file:
_vl_scalespace_start_octave_from_previous_octave	.\vlfeat\vl\scalespace.c	/^_vl_scalespace_start_octave_from_previous_octave (VlScaleSpace *self, vl_index o)$/;"	f	file:
_vl_sift_smooth	.\vlfeat\vl\sift.c	/^_vl_sift_smooth (VlSiftFilt * self,$/;"	f	file:
_vl_state	.\vlfeat\vl\generic.c	/^VlState _vl_state ;$/;"	v
_vl_svm_evaluate	.\vlfeat\vl\svm.c	/^void _vl_svm_evaluate (VlSvm *self)$/;"	f
_vl_svm_sdca_train	.\vlfeat\vl\svm.c	/^void _vl_svm_sdca_train (VlSvm *self)$/;"	f
_vl_svm_sgd_train	.\vlfeat\vl\svm.c	/^void _vl_svm_sgd_train (VlSvm *self)$/;"	f
_vl_svm_update_statistics	.\vlfeat\vl\svm.c	/^void _vl_svm_update_statistics (VlSvm *self)$/;"	f
_vl_x86cpu_info_init	.\vlfeat\vl\host.c	/^_vl_x86cpu_info_init (VlX86CpuInfo *self)$/;"	f
_vl_x86cpu_info_to_string_copy	.\vlfeat\vl\host.c	/^_vl_x86cpu_info_to_string_copy (VlX86CpuInfo const *self)$/;"	f
_vlmxOption	.\vlfeat\toolbox\mexutils.h	/^struct _vlmxOption$/;"	s
a11	.\vlfeat\vl\covdet.h	/^  float a11 ;   \/**< *\/$/;"	m	struct:_VlFrameOrientedEllipse
a12	.\vlfeat\vl\covdet.h	/^  float a12 ;$/;"	m	struct:_VlFrameOrientedEllipse
a21	.\vlfeat\vl\covdet.h	/^  float a21 ;$/;"	m	struct:_VlFrameOrientedEllipse
a22	.\vlfeat\vl\covdet.h	/^  float a22 ;$/;"	m	struct:_VlFrameOrientedEllipse
aaAccurateSmoothing	.\vlfeat\vl\covdet.c	/^  vl_bool aaAccurateSmoothing ;$/;"	m	struct:_VlCovDet	file:
aaMask	.\vlfeat\vl\covdet.c	/^  float aaMask [(2*VL_COVDET_AA_PATCH_RESOLUTION+1)*(2*VL_COVDET_AA_PATCH_RESOLUTION+1)] ;$/;"	m	struct:_VlCovDet	file:
aaPatch	.\vlfeat\vl\covdet.c	/^  float aaPatch [(2*VL_COVDET_AA_PATCH_RESOLUTION+1)*(2*VL_COVDET_AA_PATCH_RESOLUTION+1)] ;$/;"	m	struct:_VlCovDet	file:
aaPatchX	.\vlfeat\vl\covdet.c	/^  float aaPatchX [(2*VL_COVDET_AA_PATCH_RESOLUTION+1)*(2*VL_COVDET_AA_PATCH_RESOLUTION+1)] ;$/;"	m	struct:_VlCovDet	file:
aaPatchY	.\vlfeat\vl\covdet.c	/^  float aaPatchY [(2*VL_COVDET_AA_PATCH_RESOLUTION+1)*(2*VL_COVDET_AA_PATCH_RESOLUTION+1)] ;$/;"	m	struct:_VlCovDet	file:
acc	.\vlfeat\vl\mser.h	/^  float             *acc ;     \/**< moment accumulator.                    *\/$/;"	m	struct:_VlMserFilt
acc_t	.\vlfeat\toolbox\mser\vl_erfill.c	/^typedef vl_uint64 acc_t ;$/;"	t	file:
accumulateFn	.\vlfeat\vl\svm.c	/^  VlSvmAccumulateFunction accumulateFn ;$/;"	m	struct:VlSvm_	file:
accurate_solver	.\vlfeat\toolbox\xtest\vl_test_svmtrain.m	/^function [w,b] = accurate_solver(X, y, lambda, biasMultiplier)$/;"	f
action	.\vlfeat\docsrc\mdoc.py	/^    action  = "append",$/;"	v
action	.\vlfeat\docsrc\mdoc.py	/^    action  = "store",$/;"	v
action	.\vlfeat\docsrc\mdoc.py	/^    action  = "store_true",$/;"	v
action	.\vlfeat\docsrc\webdoc.py	/^        action  = "count",$/;"	v
action	.\vlfeat\docsrc\webdoc.py	/^        action  = "store",$/;"	v
action	.\vlfeat\docsrc\webdoc.py	/^        action  = "store_true",$/;"	v
action	.\vlfeat\docsrc\webdoc.py	/^        action = "store",$/;"	v
active	.\vlfeat\src\generic-driver.h	/^  vl_bool active ;          \/**< Is the file active? *\/$/;"	m	struct:_VlFileMeta
addAttr	.\vlfeat\docsrc\formatter.py	/^    def addAttr(self, tag, attr, val):$/;"	m	class:Formatter
addChildNode	.\vlfeat\docsrc\mdoc.py	/^    def addChildNode(self, node):$/;"	m	class:Node
addFancyText	.\vlfeat\docsrc\formatter.py	/^    def addFancyText(self, tag, s):$/;"	m	class:Formatter
addMFile	.\vlfeat\docsrc\mdoc.py	/^    def addMFile(self, mfile):$/;"	m	class:Node
addText	.\vlfeat\docsrc\formatter.py	/^    def addText(self, tag, s):$/;"	m	class:Formatter
adopt	.\vlfeat\docsrc\webdoc.py	/^    def adopt(self, orfan):$/;"	m	class:DocNode
adv	.\vlfeat\toolbox\mser\vl_erfill.c	/^adv(mwSize const* dims, int ndims, int* subs_pt)$/;"	f
adv	.\vlfeat\vl\mser.c	/^adv(int ndims, int const *dims, int *subs)$/;"	f
aib	.\vlfeat\toolbox\noprefix\aib.m	/^function varargout = aib(varargin)$/;"	f
aibcut	.\vlfeat\toolbox\noprefix\aibcut.m	/^function varargout = aibcut(varargin)$/;"	f
aibcuthist	.\vlfeat\toolbox\noprefix\aibcuthist.m	/^function varargout = aibcuthist(varargin)$/;"	f
aibcutpush	.\vlfeat\toolbox\noprefix\aibcutpush.m	/^function varargout = aibcutpush(varargin)$/;"	f
aibhist	.\vlfeat\toolbox\noprefix\aibhist.m	/^function varargout = aibhist(varargin)$/;"	f
algorithm	.\vlfeat\vl\kmeans.h	/^  VlKMeansAlgorithm algorithm ;           \/**< Clustring algorithm. *\/$/;"	m	struct:_VlKMeans
alldist2	.\vlfeat\toolbox\noprefix\alldist2.m	/^function varargout = alldist2(varargin)$/;"	f
alpha	.\vlfeat\vl\svm.c	/^  double * alpha ;              \/**< Dual variables. *\/$/;"	m	struct:VlSvm_	file:
alphanum	.\vlfeat\toolbox\noprefix\alphanum.m	/^function varargout = alphanum(varargin)$/;"	f
angle	.\vlfeat\vl\covdet.h	/^  double angle ;$/;"	m	struct:_VlCovDetFeatureOrientation
angle	.\vlfeat\vl\covdet.h	/^  float angle ; \/**< rotation angle (rad) *\/$/;"	m	struct:_VlFrameOrientedDisc
appendLocation	.\vlfeat\docsrc\webdoc.py	/^    def appendLocation(self, location):$/;"	m	class:DocError
area	.\vlfeat\vl\mser.h	/^  vl_uint      area ;       \/**< area of the region                           *\/$/;"	m	struct:_VlMserExtrReg
area	.\vlfeat\vl\mser.h	/^  vl_uint area ;     \/**< area of the region.                     *\/$/;"	m	struct:_VlMserReg
argparse	.\vlfeat\toolbox\noprefix\argparse.m	/^function varargout = argparse(varargin)$/;"	f
array	.\vlfeat\src\test_heap-def.c	/^  int* array ;$/;"	m	struct:_H	file:
assert_almost_equal	.\vlfeat\toolbox\noprefix\assert_almost_equal.m	/^function varargout = assert_almost_equal(varargin)$/;"	f
assert_equal	.\vlfeat\toolbox\noprefix\assert_equal.m	/^function varargout = assert_equal(varargin)$/;"	f
assert_exception	.\vlfeat\toolbox\noprefix\assert_exception.m	/^function varargout = assert_exception(varargin)$/;"	f
at	.\vlfeat\vl\covdet.c	1218;"	d	file:
at	.\vlfeat\vl\covdet.c	1317;"	d	file:
at	.\vlfeat\vl\covdet.c	1343;"	d	file:
at	.\vlfeat\vl\covdet.c	1425;"	d	file:
at	.\vlfeat\vl\covdet.c	1577;"	d	file:
at	.\vlfeat\vl\covdet.c	1583;"	d	file:
at	.\vlfeat\vl\dsift.c	676;"	d	file:
at	.\vlfeat\vl\dsift.c	677;"	d	file:
at	.\vlfeat\vl\hog.c	613;"	d	file:
at	.\vlfeat\vl\hog.c	762;"	d	file:
at	.\vlfeat\vl\hog.c	862;"	d	file:
at	.\vlfeat\vl\lbp.c	281;"	d	file:
at	.\vlfeat\vl\sift.c	1292;"	d	file:
at	.\vlfeat\vl\sift.c	1613;"	d	file:
at	.\vlfeat\vl\sift.c	1614;"	d	file:
atEdgeMap	.\vlfeat\vl\slic.c	201;"	d	file:
atNorm	.\vlfeat\vl\hog.c	763;"	d	file:
atNorm	.\vlfeat\vl\hog.c	863;"	d	file:
atd	.\vlfeat\vl\sift.c	1802;"	d	file:
atd	.\vlfeat\vl\sift.c	1803;"	d	file:
atd	.\vlfeat\vl\sift.c	1999;"	d	file:
atd	.\vlfeat\vl\sift.c	2000;"	d	file:
atglyph	.\vlfeat\vl\hog.c	277;"	d	file:
atimage	.\vlfeat\vl\slic.c	200;"	d	file:
back	.\vlfeat\docsrc\formatter.py	/^    def back(self):$/;"	m	class:Lexer
baseScale	.\vlfeat\vl\scalespace.h	/^  double baseScale ; \/**< Base smoothing (smoothing of octave 0, level 0) *\/$/;"	m	struct:_VlScaleSpaceGeometry
beta	.\vlfeat\vl\aib.h	/^  double    *beta ;     \/**< Minimum distance to an entry  *\/$/;"	m	struct:_VlAIB
bias	.\vlfeat\vl\svm.c	/^  double bias ;                 \/**< Bias. *\/$/;"	m	struct:VlSvm_	file:
biasLearningRate	.\vlfeat\vl\svm.c	/^  double  biasLearningRate ;    \/**< Bias learning rate. *\/$/;"	m	struct:VlSvm_	file:
biasMultiplier	.\vlfeat\vl\svm.c	/^  double biasMultiplier ;       \/**< Bias feature multiplier. *\/$/;"	m	struct:VlSvm_	file:
bidx	.\vlfeat\vl\aib.h	/^  vl_uint   *bidx ;     \/**< Closest entry *\/$/;"	m	struct:_VlAIB
binSizeX	.\vlfeat\vl\dsift.h	/^  int binSizeX ; \/**< size of bins along X *\/$/;"	m	struct:VlDsiftDescriptorGeometry_
binSizeY	.\vlfeat\vl\dsift.h	/^  int binSizeY ; \/**< size of bins along Y *\/$/;"	m	struct:VlDsiftDescriptorGeometry_
bin_dep	.\vlfeat\make\bin.mak	/^bin_dep := $(addsuffix .d, $(bin_tgt))$/;"	m
bin_src	.\vlfeat\make\bin.mak	/^bin_src := $(wildcard $(VLDIR)\/src\/*.c)$/;"	m
bin_tgt	.\vlfeat\make\bin.mak	/^bin_tgt := $(addprefix $(BINDIR)\/, $(patsubst %.c,%,$(notdir $(bin_src))))$/;"	m
bincrt	.\vlfeat\Makefile.mak	/^bincrt = $(bindir)\\msvcr$(MSVSVER).dll $(bindir)\\$(MSVCR).manifest$/;"	m
bincrt	.\vlfeat\Makefile.mak	/^bincrt = $(bindir)\\msvcr$(MSVSVER).dll$/;"	m
bindir	.\vlfeat\Makefile.mak	/^bindir = bin\\$(ARCH)$/;"	m
binsearch	.\vlfeat\toolbox\noprefix\binsearch.m	/^function varargout = binsearch(varargin)$/;"	f
binsum	.\vlfeat\toolbox\noprefix\binsum.m	/^function varargout = binsum(varargin)$/;"	f
blob	.\vlfeat\toolbox\imop\vl_impattern.m	/^function im = blob(args)$/;"	f
blobs	.\vlfeat\toolbox\imop\vl_impattern.m	/^function im = blobs(args)$/;"	f
blobs1	.\vlfeat\toolbox\imop\vl_impattern.m	/^function im = blobs1(args)$/;"	f
boundMaxX	.\vlfeat\vl\dsift.h	/^  int boundMaxX ;          \/**< frame bounding box max X *\/$/;"	m	struct:VlDsiftFilter_
boundMaxY	.\vlfeat\vl\dsift.h	/^  int boundMaxY ;          \/**< frame bounding box max Y *\/$/;"	m	struct:VlDsiftFilter_
boundMinX	.\vlfeat\vl\dsift.h	/^  int boundMinX ;          \/**< frame bounding box min X *\/$/;"	m	struct:VlDsiftFilter_
boundMinY	.\vlfeat\vl\dsift.h	/^  int boundMinY ;          \/**< frame bounding box min Y *\/$/;"	m	struct:VlDsiftFilter_
branch	.\vlfeat\make\dist.mak	/^dist-bin-commit-common: branch=v$(VER)-common$/;"	m
branch	.\vlfeat\make\dist.mak	/^dist-bin-commit: branch=v$(VER)-$(ARCH)$/;"	m
branch	.\vlfeat\make\dist.mak	/^dist-bin-merge: branch=v$(VER)-bin$/;"	m
branch	.\vlfeat\make\dist.mak	/^dist-bin: branch=v$(VER)-bin$/;"	m
breadCrumb	.\vlfeat\docsrc\mdoc.py	/^def breadCrumb(m):$/;"	f
bullet	.\vlfeat\docsrc\formatter.py	/^    bullet = None$/;"	v	class:BL
c	.\vlfeat\docsrc\webdoc.py	/^    c = unichr(v)$/;"	v
cProfile	.\vlfeat\docsrc\webdoc.py	/^import cProfile$/;"	i
calcRelURL	.\vlfeat\docsrc\webdoc.py	/^def calcRelURL(toURL, fromURL):$/;"	f
calloc_func	.\vlfeat\vl\generic.c	/^  void *(*calloc_func)  (size_t, size_t) ;$/;"	m	struct:_VlState	file:
centerDistances	.\vlfeat\vl\kmeans.h	/^  void * centerDistances ;                \/**< Centers inter-distances. *\/$/;"	m	struct:_VlKMeans
centers	.\vlfeat\vl\ikmeans.h	/^  vl_ikmacc_t *centers ; \/**< centers *\/$/;"	m	struct:_VlIKMFilt
centers	.\vlfeat\vl\kmeans.h	/^  void * centers ;                        \/**< Centers *\/$/;"	m	struct:_VlKMeans
cf	.\vlfeat\toolbox\noprefix\cf.m	/^function varargout = cf(varargin)$/;"	f
changeDir	.\vlfeat\docsrc\webdoc.py	/^    def changeDir(self, dirName):$/;"	m	class:Generator
channels	.\vlfeat\vl\quickshift.h	/^  int channels;         \/**< number of channels in the image *\/$/;"	m	struct:_VlQS
characters	.\vlfeat\docsrc\webdoc.py	/^    def characters(self, content):$/;"	m	class:DocHandler
check	.\vlfeat\src\check.h	30;"	d
check_impl	.\vlfeat\src\check.h	/^check_impl (int condition,$/;"	f
check_ker	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function check_ker(ker, n, window, period)$/;"	f
check_signoff	.\vlfeat\src\check.h	33;"	d
check_sorted	.\vlfeat\toolbox\sift\vl_sift.c	/^check_sorted (double const * keys, vl_size nkeys)$/;"	f
check_svd	.\vlfeat\src\test_svd2.c	/^check_svd (double *M , double * U, double * S, double *V)$/;"	f
checkx	.\vlfeat\toolbox\demo\vl_demo_kdtree_sift.m	/^function checkx(kdtree, X, t, n, mib, mab)$/;"	f
children	.\vlfeat\vl\hikmeans.h	/^  struct _VlHIKMNode **children ; \/**< Node children (if any) *\/$/;"	m	struct:_VlHIKMNode	typeref:struct:_VlHIKMNode::_VlHIKMNode
classifier_training	.\classifier_training.m	/^function [w, b] = classifier_training(features_pos, features_neg, feature_params)$/;"	f
classify	.\vlfeat\apps\phow_caltech101.m	/^function [className, score] = classify(model, im)$/;"	f
click	.\vlfeat\toolbox\noprefix\click.m	/^function varargout = click(varargin)$/;"	f
click_handler	.\vlfeat\toolbox\plotop\vl_click.m	/^function click_handler(obj,event)$/;"	f
clickpoint	.\vlfeat\toolbox\noprefix\clickpoint.m	/^function varargout = clickpoint(varargin)$/;"	f
clicksegment	.\vlfeat\toolbox\noprefix\clicksegment.m	/^function varargout = clicksegment(varargin)$/;"	f
climb	.\vlfeat\vl\mser.c	/^climb (VlMserReg* r, vl_uint idx)$/;"	f
close	.\vlfeat\docsrc\webdoc.py	/^    def close(self):$/;"	m	class:Generator
cluster_null_nodes	.\vlfeat\toolbox\aib\vl_aib.c	/^cluster_null_nodes (vl_uint32* parents, vl_uint32 nvalues, double *cost, int verbosity)$/;"	f	file:
cmdexe	.\vlfeat\Makefile.mak	/^cmdexe = $(cmdexe:.c=.exe)$/;"	m
cmdexe	.\vlfeat\Makefile.mak	/^cmdexe = $(cmdsrc:src\\=bin\\win32\\)$/;"	m
cmdexe	.\vlfeat\Makefile.mak	/^cmdexe = $(cmdsrc:src\\=bin\\win64\\)$/;"	m
cmdpdb	.\vlfeat\Makefile.mak	/^cmdpdb = $(cmdexe:.exe=.pdb)$/;"	m
cmdsrc	.\vlfeat\Makefile.mak	/^cmdsrc = \\$/;"	m
colsubset	.\vlfeat\toolbox\noprefix\colsubset.m	/^function varargout = colsubset(varargin)$/;"	f
columnPointers	.\vlfeat\vl\array.h	/^  void * columnPointers ;$/;"	m	struct:_VlArray
comment	.\vlfeat\docsrc\webdoc.py	/^    def comment(self, body):$/;"	m	class:DocHandler
commonOpts	.\vlfeat\toolbox\imop\vl_impattern.m	/^function [u,v,opts,args] = commonOpts(args)$/;"	f
cone	.\vlfeat\toolbox\imop\vl_impattern.m	/^function im = cone(args)$/;"	f
conjugateLossFn	.\vlfeat\vl\svm.c	/^  VlSvmLossFunction conjugateLossFn ;$/;"	m	struct:VlSvm_	file:
content	.\vlfeat\docsrc\formatter.py	/^    content = ""$/;"	v	class:B
convTmp1	.\vlfeat\vl\dsift.h	/^  float *convTmp1 ;        \/**< temporary buffer *\/$/;"	m	struct:VlDsiftFilter_
convTmp2	.\vlfeat\vl\dsift.h	/^  float *convTmp2 ;        \/**< temporary buffer *\/$/;"	m	struct:VlDsiftFilter_
convolve	.\vlfeat\toolbox\xtest\vl_test_imsmooth.m	/^function I = convolve(I, g, step)$/;"	f
copy	.\vlfeat\docsrc\webdoc.py	/^import copy$/;"	i
copy_and_downsample	.\vlfeat\vl\scalespace.c	/^copy_and_downsample$/;"	f	file:
copy_and_downsample	.\vlfeat\vl\sift.c	/^copy_and_downsample$/;"	f	file:
copy_and_upsample	.\vlfeat\vl\scalespace.c	/^copy_and_upsample$/;"	f	file:
copy_and_upsample_rows	.\vlfeat\vl\sift.c	/^copy_and_upsample_rows$/;"	f	file:
costs	.\vlfeat\vl\aib.h	/^  double    *costs;     \/**< Cost of each merge *\/$/;"	m	struct:_VlAIB
counter	.\vlfeat\docsrc\webdoc.py	/^    counter = 0$/;"	v	class:DocPage
covariances	.\vlfeat\vl\gmm.c	/^  void *  covariances;                \/**< Diagonals of covariance matrices of Gaussian modes. *\/$/;"	m	struct:_VlGMM	file:
covdet	.\vlfeat\toolbox\noprefix\covdet.m	/^function varargout = covdet(varargin)$/;"	f
cp	.\vlfeat\toolbox\vl_compile.m	/^function cp(src,dst)$/;"	f
cpuInfo	.\vlfeat\vl\generic.c	/^  VlX86CpuInfo cpuInfo ;$/;"	m	struct:_VlState	file:
cpy	.\vlfeat\toolbox\misc\vl_ihashfind.c	/^cpy (vl_uint8 * x, vl_uint8 const * y, int n)$/;"	f
cpy	.\vlfeat\toolbox\misc\vl_ihashsum.c	/^cpy (vl_uint8 * x, vl_uint8 const * y, int n)$/;"	f
createInfoStruct	.\vlfeat\toolbox\misc\svms_common.h	/^mxArray * createInfoStruct(VlSvm* svm)$/;"	f
createScalarStructArray	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^mxArray * createScalarStructArray(void const **fields)$/;"	f
css	.\vlfeat\vl\covdet.c	/^  VlScaleSpace *css ;        \/**< Cornerness scale space. *\/$/;"	m	struct:_VlCovDet	file:
cummax	.\vlfeat\toolbox\noprefix\cummax.m	/^function varargout = cummax(varargin)$/;"	f
d	.\vlfeat\docsrc\doxytag.py	/^    d = Doxytag("doc\/doxygen.tag")$/;"	v
daggerset	.\vlfeat\src\test_getopt_long.c	/^int daggerset;$/;"	v
data	.\vlfeat\vl\array.h	/^  void * data ;$/;"	m	struct:_VlArray
data	.\vlfeat\vl\kdtree.h	/^  void const * data ;$/;"	m	struct:_VlKDForest
data	.\vlfeat\vl\kmeans.c	/^  void const * data ;$/;"	m	struct:_VlKMeansSortWrapper	file:
data	.\vlfeat\vl\svm.c	/^  void const * data ;$/;"	m	struct:VlSvm_	file:
data	.\vlfeat\vl\svmdataset.c	/^  void * data ;                     \/**< Pointer to data. *\/$/;"	m	struct:VlSvmDataset_	file:
dataIndex	.\vlfeat\vl\kdtree.h	/^  VlKDTreeDataIndexEntry * dataIndex ;$/;"	m	struct:_VlKDTree
dataType	.\vlfeat\vl\gmm.c	/^  vl_type dataType ;                  \/**< Data type. *\/$/;"	m	struct:_VlGMM	file:
dataType	.\vlfeat\vl\kdtree.h	/^  vl_type dataType ;$/;"	m	struct:_VlKDForest
dataType	.\vlfeat\vl\kmeans.h	/^  vl_type dataType ;                      \/**< Data type. *\/$/;"	m	struct:_VlKMeans
dataType	.\vlfeat\vl\svmdataset.c	/^  vl_type dataType ;                \/**< Data type. *\/$/;"	m	struct:VlSvmDataset_	file:
dcaUpdateFn	.\vlfeat\vl\svm.c	/^  VlSvmDcaUpdateFunction dcaUpdateFn ;$/;"	m	struct:VlSvm_	file:
ddgaussian	.\vlfeat\toolbox\noprefix\ddgaussian.m	/^function varargout = ddgaussian(varargin)$/;"	f
default	.\vlfeat\docsrc\mdoc.py	/^    default = "Example",$/;"	v
default	.\vlfeat\docsrc\mdoc.py	/^    default = "html",$/;"	v
default	.\vlfeat\docsrc\mdoc.py	/^    default = False,$/;"	v
default	.\vlfeat\docsrc\webdoc.py	/^        default = "",$/;"	v
default	.\vlfeat\docsrc\webdoc.py	/^        default = ".",$/;"	v
default	.\vlfeat\docsrc\webdoc.py	/^        default = "html",$/;"	v
default	.\vlfeat\docsrc\webdoc.py	/^        default = 0,$/;"	v
default	.\vlfeat\docsrc\webdoc.py	/^        default = False,$/;"	v
default	.\vlfeat\docsrc\webdoc.py	/^        default = None,$/;"	v
define-members	.\vlfeat\doc\api\array_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\fisher_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\generic_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\getopt__long_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\heap-def_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\host_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\host_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\imopv_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\mathop_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\mexutils_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\mser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\pgm_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\qsort-def_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\quickshift_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\shuffle-def_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\sift_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\vlfeat\doc\api\vlad_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
delta	.\vlfeat\vl\mser.h	/^  int       delta ;            \/**< delta filter parameter                 *\/$/;"	m	struct:_VlMserFilt
density	.\vlfeat\vl\quickshift.h	/^  vl_qs_type *density ;$/;"	m	struct:_VlQS
depth	.\vlfeat\vl\hikmeans.h	/^  vl_size depth ; \/**< Depth of the tree *\/$/;"	m	struct:_VlHIKMTree
depth	.\vlfeat\vl\kdtree.h	/^  unsigned int depth ;$/;"	m	struct:_VlKDTree
depth_first	.\vlfeat\docsrc\mdoc.py	/^def depth_first(node):$/;"	f
descrSize	.\vlfeat\vl\dsift.h	/^  int descrSize ;          \/**< size of a descriptor *\/$/;"	m	struct:VlDsiftFilter_
descrs	.\vlfeat\vl\dsift.h	/^  float *descrs ;          \/**< descriptor buffer *\/$/;"	m	struct:VlDsiftFilter_
dest	.\vlfeat\docsrc\mdoc.py	/^    dest    = "excludeList",$/;"	v
dest	.\vlfeat\docsrc\mdoc.py	/^    dest    = "format",$/;"	v
dest	.\vlfeat\docsrc\mdoc.py	/^    dest    = "helptoc",$/;"	v
dest	.\vlfeat\docsrc\mdoc.py	/^    dest    = "verb",$/;"	v
dest	.\vlfeat\docsrc\mdoc.py	/^    dest  = "helptoc_toolbox_name",$/;"	v
dest	.\vlfeat\docsrc\webdoc.py	/^        dest    = "doxydir",$/;"	v
dest	.\vlfeat\docsrc\webdoc.py	/^        dest    = "doxytag",$/;"	v
dest	.\vlfeat\docsrc\webdoc.py	/^        dest    = "outdir",$/;"	v
dest	.\vlfeat\docsrc\webdoc.py	/^        dest    = "profile",$/;"	v
dest	.\vlfeat\docsrc\webdoc.py	/^        dest    = "verb",$/;"	v
dest	.\vlfeat\docsrc\webdoc.py	/^        dest = "indexfile",$/;"	v
dest	.\vlfeat\docsrc\webdoc.py	/^        dest = "siteurl",$/;"	v
det	.\vlfeat\toolbox\noprefix\det.m	/^function varargout = det(varargin)$/;"	f
det2	.\vlfeat\src\test_svd2.c	/^det2 (double A [4])$/;"	f
details	.\vlfeat\doc\api\aib_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\aib_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\array_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\covdet_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\covdet_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\dsift_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\dsift_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\fisher_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\fisher_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\generic_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\generic_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\getopt__long_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\getopt__long_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\gmm_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\gmm_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\heap-def_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\hikmeans_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\hikmeans_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\hog_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\hog_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\homkermap_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\homkermap_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\host_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\host_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\ikmeans_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\ikmeans_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\ikmeans__elkan_8tc.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\ikmeans__init_8tc.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\ikmeans__lloyd_8tc.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\imopv_8c.html	/^<\/div><a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\imopv_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\imopv__sse2_8c.html	/^<\/div><a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\imopv__sse2_8h.html	/^<\/div><a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\kdtree_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\kdtree_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\kmeans_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\kmeans_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\lbp_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\lbp_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\liop_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\liop_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\mathop_8c.html	/^<\/div><a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\mathop_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\mathop__avx_8c.html	/^<\/div><a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\mathop__avx_8h.html	/^<\/div><a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\mathop__sse2_8c.html	/^<\/div><a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\mathop__sse2_8h.html	/^<\/div><a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\mexutils_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\mser_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\mser_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\pgm_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\pgm_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\qsort-def_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\quickshift_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\quickshift_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\random_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\random_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\rodrigues_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\rodrigues_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\scalespace_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\scalespace_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\shuffle-def_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\sift_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\sift_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\slic_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\slic_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\stringop_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\stringop_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\structVlAIB.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\structVlHIKMNode.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\structVlPgmImage.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\structVlQS.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\structVlScaleSpace.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\structVlScaleSpaceGeometry.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\structVlSiftFilt.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\structVlSiftKeypoint.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\structVlSvmStatistics.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\struct__VlCovDet.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\struct__VlFileMeta.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\struct__VlMserExtrReg.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\struct__VlMserFilt.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\struct__VlMserReg.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\struct__VlMserStats.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\struct__vlmxOption.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\svm_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\svm_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\svmdataset_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\svmdataset_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\vlad_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\vlfeat\doc\api\vlad_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
dgaussian	.\vlfeat\toolbox\noprefix\dgaussian.m	/^function varargout = dgaussian(varargin)$/;"	f
diagnostic	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^void diagnostic (VlSvm * svm, DiagnosticOpts * opts)$/;"	f
diagnosticDispatcher	.\vlfeat\toolbox\misc\svms_common.h	/^void diagnosticDispatcher(VlSvm* svm)$/;"	f
diagnosticFn	.\vlfeat\vl\svm.c	/^  VlSvmDiagnosticFunction diagnosticFn ;$/;"	m	struct:VlSvm_	file:
diagnosticFnData	.\vlfeat\vl\svm.c	/^  void * diagnosticFnData ;$/;"	m	struct:VlSvm_	file:
diagnosticFrequency	.\vlfeat\vl\svm.c	/^  vl_size diagnosticFrequency ; \/**< Frequency of diagnostic. *\/$/;"	m	struct:VlSvm_	file:
diagnostics	.\vlfeat\docsrc\tutorials\svm.html	/^function diagnostics(svm)$/;"	f
diagnostics	.\vlfeat\toolbox\demo\vl_demo_svm.m	/^function diagnostics(svm)$/;"	f
die	.\vlfeat\make\matlab.mak	/^die:=$(error $(err_no_mex_suffix))$/;"	m
dimension	.\vlfeat\vl\gmm.c	/^  vl_size dimension ;                 \/**< Data dimensionality. *\/$/;"	m	struct:_VlGMM	file:
dimension	.\vlfeat\vl\hog.h	/^  vl_size dimension ;$/;"	m	struct:VlHog_
dimension	.\vlfeat\vl\kdtree.h	/^  unsigned int dimension ;$/;"	m	struct:_VlKDTreeSplitDimension
dimension	.\vlfeat\vl\kdtree.h	/^  vl_size dimension ;$/;"	m	struct:_VlKDForest
dimension	.\vlfeat\vl\kmeans.h	/^  vl_size dimension ;                     \/**< Data dimensionality. *\/$/;"	m	struct:_VlKMeans
dimension	.\vlfeat\vl\lbp.h	/^  vl_size dimension ;$/;"	m	struct:VlLbp_
dimension	.\vlfeat\vl\liop.h	/^  vl_size dimension; \/**< LIOP descriptor size. *\/$/;"	m	struct:_VlLiopDesc
dimension	.\vlfeat\vl\svm.c	/^  vl_size dimension ;           \/**< Model dimension. *\/$/;"	m	struct:VlSvm_	file:
dimension	.\vlfeat\vl\svmdataset.c	/^  vl_size dimension ;               \/**< Data point dimension. *\/$/;"	m	struct:VlSvmDataset_	file:
dimensions	.\vlfeat\vl\array.h	/^  vl_size dimensions [VL_ARRAY_MAX_NUM_DIMENSIONS] ;$/;"	m	struct:_VlArray
dims	.\vlfeat\vl\mser.h	/^  int               *dims ;    \/**< dimensions                              *\/$/;"	m	struct:_VlMserFilt
distance	.\vlfeat\vl\kdtree.h	/^  VlVectorComparisonType distance;$/;"	m	struct:_VlKDForest
distance	.\vlfeat\vl\kdtree.h	/^  double distance ;   \/**< distance to the query point *\/$/;"	m	struct:_VlKDForestNeighbor
distance	.\vlfeat\vl\kmeans.h	/^  VlVectorComparisonType distance ;       \/**< Distance. *\/$/;"	m	struct:_VlKMeans
distanceFunction	.\vlfeat\vl\kdtree.h	/^  void (*distanceFunction)(void) ;$/;"	m	struct:_VlKDForest
distanceLowerBound	.\vlfeat\vl\kdtree.h	/^  double distanceLowerBound ;$/;"	m	struct:_VlKDForestSearchState
dists	.\vlfeat\vl\quickshift.h	/^  vl_qs_type *dists ;$/;"	m	struct:_VlQS
dll_dep	.\vlfeat\make\dll.mak	/^dll_dep := $(dll_obj:.o=.d)$/;"	m
dll_hdr	.\vlfeat\make\dll.mak	/^dll_hdr := $(wildcard $(VLDIR)\/vl\/*.h)$/;"	m
dll_obj	.\vlfeat\make\dll.mak	/^dll_obj := $(addprefix $(BINDIR)\/objs\/, $(notdir $(dll_src:.c=.o)))$/;"	m
dll_src	.\vlfeat\make\dll.mak	/^dll_src := $(wildcard $(VLDIR)\/vl\/*.c)$/;"	m
dll_tgt	.\vlfeat\make\dll.mak	/^dll_tgt := $(BINDIR)\/lib$(DLL_NAME).$(DLL_SUFFIX)$/;"	m
do_nothing_printf	.\vlfeat\vl\generic.c	/^do_nothing_printf (char const* format VL_UNUSED, ...)$/;"	f	file:
doc_fig_src	.\vlfeat\make\doc.mak	/^doc_fig_src := $(wildcard docsrc\/figures\/*.fig)$/;"	m
doc_svg_src	.\vlfeat\make\doc.mak	/^doc_svg_src := $(wildcard docsrc\/figures\/*.svg)$/;"	m
dof	.\vlfeat\vl\mser.h	/^  int                dof ;     \/**< number of dof of ellipsoids.           *\/$/;"	m	struct:_VlMserFilt
dog	.\vlfeat\vl\sift.h	/^  vl_sift_pix *dog ;    \/**< current DoG data. *\/$/;"	m	struct:_VlSiftFilt
dom	.\vlfeat\docsrc\doxytag.py	/^import xml.dom.minidom$/;"	i
dom	.\vlfeat\docsrc\formatter.py	/^import xml.dom.minidom$/;"	i
doubleVectorComparisonFn	.\vlfeat\vl\kmeans.h	/^  VlDoubleVectorComparisonFunction doubleVectorComparisonFn ;$/;"	m	struct:_VlKMeans
doxygenDir	.\vlfeat\docsrc\webdoc.py	/^doxygenDir = ''$/;"	v
doxygenIndex	.\vlfeat\docsrc\webdoc.py	/^doxygenIndex = None$/;"	v
drb	.\vlfeat\toolbox\imop\vl_tpsu.m	/^function y = drb(r)$/;"	f
dsift	.\vlfeat\toolbox\noprefix\dsift.m	/^function varargout = dsift(varargin)$/;"	f
dsigma0	.\vlfeat\vl\sift.h	/^  double dsigma0 ;      \/**< delta-smoothing. *\/$/;"	m	struct:_VlSiftFilt
dsigmoid	.\vlfeat\toolbox\noprefix\dsigmoid.m	/^function varargout = dsigmoid(varargin)$/;"	f
dsubs	.\vlfeat\vl\mser.h	/^  int               *dsubs ;   \/**< another subscript                       *\/$/;"	m	struct:_VlMserFilt
dualLoss	.\vlfeat\vl\svm.h	/^  double dualLoss ;             \/**< Dual loss value. *\/$/;"	m	struct:VlSvmStatistics_
dualObjective	.\vlfeat\vl\svm.h	/^  double dualObjective ;        \/**< Dual objective value. *\/$/;"	m	struct:VlSvmStatistics_
dualityGap	.\vlfeat\vl\svm.h	/^  double dualityGap ;           \/**< Duality gap = objective - dualObjective. *\/$/;"	m	struct:VlSvmStatistics_
dump	.\vlfeat\docsrc\doxytag.py	/^    def dump(self):$/;"	m	class:Doxytag
dump	.\vlfeat\docsrc\webdoc.py	/^    def dump(self):$/;"	m	class:DocNode
dumpIndex	.\vlfeat\docsrc\webdoc.py	/^def dumpIndex():$/;"	f
dwaffine	.\vlfeat\toolbox\noprefix\dwaffine.m	/^function varargout = dwaffine(varargin)$/;"	f
e11	.\vlfeat\vl\covdet.h	/^  float e11 ;   \/**< *\/$/;"	m	struct:_VlFrameEllipse
e12	.\vlfeat\vl\covdet.h	/^  float e12 ;$/;"	m	struct:_VlFrameEllipse
e22	.\vlfeat\vl\covdet.h	/^  float e22 ;$/;"	m	struct:_VlFrameEllipse
edgeScore	.\vlfeat\vl\covdet.c	/^  float edgeScore ;$/;"	m	struct:_VlCovDetExtremum2	file:
edgeScore	.\vlfeat\vl\covdet.c	/^  float edgeScore ;$/;"	m	struct:_VlCovDetExtremum3	file:
edgeScore	.\vlfeat\vl\covdet.h	/^  float edgeScore ; \/**< edge score. *\/$/;"	m	struct:_VlCovDetFeature
edgeThreshold	.\vlfeat\vl\covdet.c	/^  double edgeThreshold ;     \/**< edge threshold. *\/$/;"	m	struct:_VlCovDet	file:
edge_thresh	.\vlfeat\vl\sift.h	/^  double edge_thresh ;  \/**< edge threshold. *\/$/;"	m	struct:_VlSiftFilt
elapsedTime	.\vlfeat\vl\svm.h	/^  double elapsedTime ;          \/**< Time elapsed from the start of training. *\/$/;"	m	struct:VlSvmStatistics_
ell	.\vlfeat\vl\mser.h	/^  float             *ell ;     \/**< ellipsoids list.                       *\/$/;"	m	struct:_VlMserFilt
encodeImage	.\vlfeat\apps\recognition\encodeImage.m	/^function descrs = encodeImage(encoder, im, varargin)$/;"	f
encodeOne	.\vlfeat\apps\recognition\encodeImage.m	/^function psi = encodeOne(encoder, im)$/;"	f
endCDATA	.\vlfeat\docsrc\webdoc.py	/^    def endCDATA(self):$/;"	m	class:DocHandler
endDTD	.\vlfeat\docsrc\webdoc.py	/^    def endDTD(self):$/;"	m	class:DocHandler
endDocument	.\vlfeat\docsrc\webdoc.py	/^    def endDocument(self):$/;"	m	class:DocHandler
endElement	.\vlfeat\docsrc\webdoc.py	/^    def endElement(self, name):$/;"	m	class:DocHandler
endEntity	.\vlfeat\docsrc\webdoc.py	/^    def endEntity(self, name): pass$/;"	m	class:DocHandler
energy	.\vlfeat\vl\kmeans.h	/^  double energy ;                         \/**< Current solution energy. *\/$/;"	m	struct:_VlKMeans
ensureDir	.\vlfeat\docsrc\webdoc.py	/^def ensureDir(dirName):$/;"	f
enum-members	.\vlfeat\doc\api\gmm_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	.\vlfeat\doc\api\homkermap_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	.\vlfeat\doc\api\ikmeans_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	.\vlfeat\doc\api\kdtree_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	.\vlfeat\doc\api\kmeans_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	.\vlfeat\doc\api\lbp_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	.\vlfeat\doc\api\mathop_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	.\vlfeat\doc\api\stringop_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	.\vlfeat\doc\api\svm_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
epoch	.\vlfeat\vl\svm.h	/^  vl_size epoch ;               \/**< Solver epoch (iteration \/ num samples). *\/$/;"	m	struct:VlSvmStatistics_
epsilon	.\vlfeat\vl\svm.c	/^  double epsilon ;              \/**< Stopping threshold. *\/$/;"	m	struct:VlSvm_	file:
equivalent_kernel	.\vlfeat\toolbox\xtest\vl_test_imsmooth.m	/^function g = equivalent_kernel(ker, sigma)$/;"	f
er	.\vlfeat\vl\mser.h	/^  VlMserExtrReg     *er ;      \/**< extremal tree                           *\/$/;"	m	struct:_VlMserFilt
erfill	.\vlfeat\toolbox\noprefix\erfill.m	/^function varargout = erfill(varargin)$/;"	f
err_no_mex_suffix	.\vlfeat\make\matlab.mak	/^err_no_mex_suffix = $(shell echo "** Could not set MEX_SUFFIX for ARCH = $(ARCH)"  1>&2)$/;"	m
ertr	.\vlfeat\toolbox\noprefix\ertr.m	/^function varargout = ertr(varargin)$/;"	f
escape	.\vlfeat\make\matlab.mak	/^escape =$(1)$/;"	m
escape	.\vlfeat\make\matlab.mak	/^escape =$(subst $$,\\\\$$,$(1))$/;"	m
excludeRegexList	.\vlfeat\docsrc\mdoc.py	/^excludeRegexList = []$/;"	v
expand	.\vlfeat\docsrc\webdoc.py	/^    def expand(self, gen, pageNode = None):$/;"	m	class:DocPageScript
expand	.\vlfeat\docsrc\webdoc.py	/^    def expand(self, gen, pageNode = None):$/;"	m	class:DocPageStyle
expand	.\vlfeat\docsrc\webdoc.py	/^    expand = makeGuard(expand)$/;"	v	class:DocPageScript
expand	.\vlfeat\docsrc\webdoc.py	/^    expand = makeGuard(expand)$/;"	v	class:DocPageStyle
expandAttr	.\vlfeat\docsrc\webdoc.py	/^    def expandAttr(self, value, pageNode):$/;"	m	class:DocNode
experiments	.\vlfeat\apps\recognition\experiments.m	/^function experiments()$/;"	f
expn_tab	.\vlfeat\vl\sift.c	/^double expn_tab [EXPN_SZ+1] ; \/**< ::fast_expn table      @internal *\/$/;"	v
extendDescriptorsWithGeometry	.\vlfeat\apps\recognition\extendDescriptorsWithGeometry.m	/^function descrs = extendDescriptorsWithGeometry(type, frames, descrs)$/;"	f
extract	.\vlfeat\docsrc\mdoc.py	/^def extract(path):$/;"	f
f	.\vlfeat\docsrc\mdoc.py	/^        f = open(os.path.join(docdir, "helptoc.xml"), 'w')$/;"	v
f	.\vlfeat\toolbox\imop\vl_xyz2lab.m	/^function b=f(a)$/;"	f
fabsf	.\vlfeat\vl\host.h	/^VL_INLINE float fabsf(float x) { return (float) fabs((double) x) ; }$/;"	f
factorial	.\vlfeat\vl\liop.c	/^vl_int factorial(vl_int num)$/;"	f	file:
fast_expn	.\vlfeat\vl\sift.c	/^fast_expn (double x)$/;"	f
fast_expn_init	.\vlfeat\vl\sift.c	/^fast_expn_init ()$/;"	f
features	.\vlfeat\vl\covdet.c	/^  VlCovDetFeature *features ;$/;"	m	struct:_VlCovDet	file:
figaspect	.\vlfeat\toolbox\noprefix\figaspect.m	/^function varargout = figaspect(varargin)$/;"	f
file	.\vlfeat\src\generic-driver.h	/^  FILE *  file ;            \/**< Current file stream *\/$/;"	m	struct:_VlFileMeta
files	.\vlfeat\doc\api\dir_68267d1309a1af8e8297ef4c3efbcdba.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	.\vlfeat\doc\api\dir_8dd540b382164c224dfa1eb6e8a3add6.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	.\vlfeat\doc\api\dir_cb851817d6f77244316f2683559617a2.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
filter	.\vlfeat\vl\hikmeans.h	/^  VlIKMFilt *filter ; \/**< IKM filter for this node*\/$/;"	m	struct:_VlHIKMNode
findAncestors	.\vlfeat\docsrc\webdoc.py	/^    def findAncestors(self, nodeType = None):$/;"	m	class:DocNode
findChildren	.\vlfeat\docsrc\webdoc.py	/^    def findChildren(self, nodeType = None):$/;"	m	class:DocNode
findField	.\vlfeat\toolbox\misc\vl_override.m	/^function field = findField(S, matchField)$/;"	f
findFieldI	.\vlfeat\toolbox\misc\vl_override.m	/^function field = findFieldI(S, matchField)$/;"	f
findNeighbor	.\vlfeat\toolbox\imop\vl_imwbackwardmx.c	/^findNeighbor(double x, const double* X, int K) {$/;"	f
firstOctave	.\vlfeat\vl\covdet.c	/^  vl_index firstOctave ;     \/**< index of the first octave. *\/$/;"	m	struct:_VlCovDet	file:
firstOctave	.\vlfeat\vl\scalespace.h	/^  vl_index firstOctave ; \/**< Index of the fisrt octave *\/$/;"	m	struct:_VlScaleSpaceGeometry
fisher	.\vlfeat\toolbox\noprefix\fisher.m	/^function varargout = fisher(varargin)$/;"	f
flag	.\vlfeat\vl\getopt_long.h	/^  int	     *flag ;    \/**< pointer to a variable to set (if @c NULL, the value is returned instead) *\/$/;"	m	struct:option
flatmap	.\vlfeat\toolbox\noprefix\flatmap.m	/^function varargout = flatmap(varargin)$/;"	f
flip_descriptor	.\vlfeat\toolbox\sift\vl_covdet.c	/^flip_descriptor (float *dst, float const *src)$/;"	f	file:
floatVectorComparisonFn	.\vlfeat\vl\kmeans.h	/^  VlFloatVectorComparisonFunction floatVectorComparisonFn ;$/;"	m	struct:_VlKMeans
fnv_hash	.\vlfeat\toolbox\misc\vl_ihashfind.c	/^unsigned int fnv_hash (void const *key, int len)$/;"	f
fnv_hash	.\vlfeat\toolbox\misc\vl_ihashsum.c	/^unsigned int fnv_hash (void const *key, int len)$/;"	f
forest	.\vlfeat\vl\kdtree.h	/^  VlKDForest * forest;$/;"	m	struct:_VlKDForestSearcher
format	.\vlfeat\docsrc\mdoc.py	/^format           = 'html'$/;"	v
formatter	.\vlfeat\docsrc\formatter.py	/^    formatter = Formatter(lines, {'BL':'http:\/\/www.google.com'}, 'a')$/;"	v	class:Formatter
formatters	.\vlfeat\docsrc\webdoc.py	/^    import pygments.formatters$/;"	i
frame	.\vlfeat\vl\covdet.h	/^  VlFrameOrientedEllipse frame ; \/**< feature frame. *\/$/;"	m	struct:_VlCovDetFeature
frame2oell	.\vlfeat\toolbox\noprefix\frame2oell.m	/^function varargout = frame2oell(varargin)$/;"	f
frames	.\vlfeat\vl\dsift.h	/^  VlDsiftKeypoint *frames ; \/**< frame buffer *\/$/;"	m	struct:VlDsiftFilter_
free_func	.\vlfeat\vl\generic.c	/^  void  (*free_func)    (void*) ;$/;"	m	struct:_VlState	file:
func-members	.\vlfeat\doc\api\aib_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\aib_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\array_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\covdet_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\covdet_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\dsift_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\dsift_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\fisher_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\fisher_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\generic_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\generic_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\getopt__long_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\getopt__long_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\gmm_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\gmm_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\heap-def_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\hikmeans_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\hikmeans_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\hog_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\hog_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\homkermap_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\homkermap_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\host_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\host_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\ikmeans_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\ikmeans_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\ikmeans__elkan_8tc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\ikmeans__init_8tc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\ikmeans__lloyd_8tc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\imopv_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\kdtree_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\kdtree_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\kmeans_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\kmeans_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\lbp_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\lbp_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\liop_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\liop_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\mathop_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\mexutils_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\mser_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\mser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\pgm_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\pgm_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\qsort-def_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\quickshift_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\quickshift_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\random_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\random_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\rodrigues_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\rodrigues_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\scalespace_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\scalespace_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\shuffle-def_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\sift_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\sift_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\slic_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\slic_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\stringop_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\stringop_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\svm_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\svm_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\svmdataset_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\svmdataset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\vlad_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\vlfeat\doc\api\vlad_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
gamma	.\vlfeat\vl\homkermap.c	/^  double gamma ;$/;"	m	struct:_VlHomogeneousKernelMap	file:
gaussFilter	.\vlfeat\vl\sift.h	/^  vl_sift_pix *gaussFilter ;  \/**< current Gaussian filter *\/$/;"	m	struct:_VlSiftFilt
gaussFilterSigma	.\vlfeat\vl\sift.h	/^  double gaussFilterSigma ;   \/**< current Gaussian filter std *\/$/;"	m	struct:_VlSiftFilt
gaussFilterWidth	.\vlfeat\vl\sift.h	/^  vl_size gaussFilterWidth ;  \/**< current Gaussian filter width *\/$/;"	m	struct:_VlSiftFilt
gaussian	.\vlfeat\toolbox\noprefix\gaussian.m	/^function varargout = gaussian(varargin)$/;"	f
ge	.\vlfeat\apps\recognition\experiments.m	/^function str = ge(name, format)$/;"	f
geom	.\vlfeat\vl\dsift.h	/^  VlDsiftDescriptorGeometry geom ;$/;"	m	struct:VlDsiftFilter_
geom	.\vlfeat\vl\scalespace.c	/^  VlScaleSpaceGeometry geom ; \/**< Geometry of the scale space *\/$/;"	m	struct:_VlScaleSpace	file:
getAttributes	.\vlfeat\docsrc\webdoc.py	/^    def getAttributes(self):$/;"	m	class:DocNode
getChildren	.\vlfeat\docsrc\webdoc.py	/^    def getChildren(self):$/;"	m	class:DocBareNode
getChildren	.\vlfeat\docsrc\webdoc.py	/^    def getChildren(self):$/;"	m	class:DocNode
getCurrentFileName	.\vlfeat\docsrc\webdoc.py	/^    def getCurrentFileName(self):$/;"	m	class:DocHandler
getCurrentLocator	.\vlfeat\docsrc\webdoc.py	/^    def getCurrentLocator(self):$/;"	m	class:DocHandler
getDenseSIFT	.\vlfeat\apps\recognition\getDenseSIFT.m	/^function features = getDenseSIFT(im, varargin)$/;"	f
getDepth	.\vlfeat\docsrc\webdoc.py	/^    def getDepth(self):$/;"	m	class:DocNode
getDoxygenURL	.\vlfeat\docsrc\webdoc.py	/^def getDoxygenURL(tag):$/;"	f
getFromCache	.\vlfeat\apps\recognition\encodeImage.m	/^function psi = getFromCache(name, cache)$/;"	f
getID	.\vlfeat\docsrc\webdoc.py	/^    def getID(self):$/;"	m	class:DocNode
getId	.\vlfeat\docsrc\mdoc.py	/^    def getId (self, format='html'):$/;"	m	class:MFile
getImageDescriptor	.\vlfeat\apps\phow_caltech101.m	/^function hist = getImageDescriptor(model, im)$/;"	f
getLocation	.\vlfeat\docsrc\webdoc.py	/^    def getLocation(self):$/;"	m	class:DocNode
getM	.\vlfeat\toolbox\imop\vl_imwbackwardmx.c	29;"	d	file:
getM	.\vlfeat\toolbox\imop\vl_tpsumx.c	21;"	d	file:
getN	.\vlfeat\toolbox\imop\vl_imwbackwardmx.c	30;"	d	file:
getN	.\vlfeat\toolbox\imop\vl_tpsumx.c	22;"	d	file:
getOutDir	.\vlfeat\docsrc\webdoc.py	/^    def getOutDir(self):$/;"	m	class:DocSite
getParent	.\vlfeat\docsrc\webdoc.py	/^    def getParent(self):$/;"	m	class:DocNode
getPr	.\vlfeat\toolbox\imop\vl_imwbackwardmx.c	31;"	d	file:
getPr	.\vlfeat\toolbox\imop\vl_tpsumx.c	23;"	d	file:
getPublishDirName	.\vlfeat\docsrc\webdoc.py	/^    def getPublishDirName(self): pass$/;"	m	class:DocBareNode
getPublishDirName	.\vlfeat\docsrc\webdoc.py	/^    def getPublishDirName(self):$/;"	m	class:DocDir
getPublishDirName	.\vlfeat\docsrc\webdoc.py	/^    def getPublishDirName(self):$/;"	m	class:DocNode
getPublishDirName	.\vlfeat\docsrc\webdoc.py	/^    def getPublishDirName(self):$/;"	m	class:DocSite
getPublishFileName	.\vlfeat\docsrc\webdoc.py	/^    def getPublishFileName(self): pass$/;"	m	class:DocBareNode
getPublishFileName	.\vlfeat\docsrc\webdoc.py	/^    def getPublishFileName(self):$/;"	m	class:DocNode
getPublishFileName	.\vlfeat\docsrc\webdoc.py	/^    def getPublishFileName(self):$/;"	m	class:DocPage
getPublishURL	.\vlfeat\docsrc\webdoc.py	/^    def getPublishURL(self): pass$/;"	m	class:DocBareNode
getPublishURL	.\vlfeat\docsrc\webdoc.py	/^    def getPublishURL(self):$/;"	m	class:DocHtmlElement
getPublishURL	.\vlfeat\docsrc\webdoc.py	/^    def getPublishURL(self):$/;"	m	class:DocNode
getPublishURL	.\vlfeat\docsrc\webdoc.py	/^    def getPublishURL(self):$/;"	m	class:DocPage
getPublishURL	.\vlfeat\docsrc\webdoc.py	/^    def getPublishURL(self):$/;"	m	class:DocSite
getRef	.\vlfeat\docsrc\mdoc.py	/^    def getRef (self, format='html'):$/;"	m	class:MFile
getText	.\vlfeat\docsrc\doxytag.py	/^    def getText(self, nodelist):$/;"	m	class:Doxytag
getTrainingData	.\vlfeat\toolbox\misc\svms_common.h	/^void  getTrainingData(const mxArray* trainingData, void** data, vl_size* dataDimension, vl_type* dataType, vl_size* numSamples, vl_int8** labels)$/;"	f
getUniqueNodeID	.\vlfeat\docsrc\webdoc.py	/^def getUniqueNodeID(id = None):$/;"	f
get_permutation_index	.\vlfeat\vl\liop.c	/^VL_INLINE vl_index get_permutation_index(vl_uindex *permutation, vl_size size){$/;"	f
get_positive_features	.\get_positive_features.m	/^function features_pos = get_positive_features(train_path_pos, feature_params)$/;"	f
get_random_negative_features	.\get_random_negative_features.m	/^function features_neg = get_random_negative_features(non_face_scn_path, feature_params, num_samples)$/;"	f
getborders	.\vlfeat\toolbox\quickshift\vl_quickvis.m	/^function borders = getborders(map)$/;"	f
getopt_long	.\vlfeat\vl\getopt_long.c	/^getopt_long(int argc, char *const argv[],$/;"	f
getpid	.\vlfeat\toolbox\noprefix\getpid.m	/^function varargout = getpid(varargin)$/;"	f
getpos	.\vlfeat\docsrc\formatter.py	/^    def getpos(self):$/;"	m	class:Lexer
glyphSize	.\vlfeat\vl\hog.h	/^  vl_size glyphSize ;$/;"	m	struct:VlHog_
glyphs	.\vlfeat\vl\hog.h	/^  float * glyphs ;$/;"	m	struct:VlHog_
gmm	.\vlfeat\toolbox\noprefix\gmm.m	/^function varargout = gmm(varargin)$/;"	f
grad	.\vlfeat\toolbox\noprefix\grad.m	/^function varargout = grad(varargin)$/;"	f
grad	.\vlfeat\vl\sift.h	/^  vl_sift_pix *grad ;   \/**< GSS gradient data. *\/$/;"	m	struct:_VlSiftFilt
grad_o	.\vlfeat\vl\sift.h	/^  int grad_o ;          \/**< GSS gradient data octave. *\/$/;"	m	struct:_VlSiftFilt
grads	.\vlfeat\vl\dsift.h	/^  float **grads ;          \/**< gradient buffer *\/$/;"	m	struct:VlDsiftFilter_
greater	.\vlfeat\toolbox\imop\vl_imwbackwardmx.c	28;"	d	file:
greater	.\vlfeat\toolbox\misc\vl_localmax.c	20;"	d	file:
gss	.\vlfeat\vl\covdet.c	/^  VlScaleSpace *gss ;        \/**< Gaussian scale space. *\/$/;"	m	struct:_VlCovDet	file:
h_cmp	.\vlfeat\src\test_heap-def.c	/^int h_cmp (H const * h, vl_uindex a, vl_uindex b) {$/;"	f
h_swap	.\vlfeat\src\test_heap-def.c	/^void h_swap (H * h, vl_uindex a, vl_uindex b) {$/;"	f
harris	.\vlfeat\toolbox\noprefix\harris.m	/^function varargout = harris(varargin)$/;"	f
hasAVX	.\vlfeat\vl\host.h	/^  vl_bool hasAVX ;$/;"	m	struct:_VlX86CpuInfo
hasMMX	.\vlfeat\vl\host.h	/^  vl_bool hasMMX ;$/;"	m	struct:_VlX86CpuInfo
hasSSE	.\vlfeat\vl\host.h	/^  vl_bool hasSSE ;$/;"	m	struct:_VlX86CpuInfo
hasSSE2	.\vlfeat\vl\host.h	/^  vl_bool hasSSE2 ;$/;"	m	struct:_VlX86CpuInfo
hasSSE3	.\vlfeat\vl\host.h	/^  vl_bool hasSSE3 ;$/;"	m	struct:_VlX86CpuInfo
hasSSE41	.\vlfeat\vl\host.h	/^  vl_bool hasSSE41 ;$/;"	m	struct:_VlX86CpuInfo
hasSSE42	.\vlfeat\vl\host.h	/^  vl_bool hasSSE42 ;$/;"	m	struct:_VlX86CpuInfo
has_arg	.\vlfeat\toolbox\mexutils.h	/^  int has_arg ;      \/**< has argument? *\/$/;"	m	struct:_vlmxOption
has_arg	.\vlfeat\vl\getopt_long.h	/^  int	      has_arg ; \/**< flag indicating whether the option has no, required or optional argument *\/$/;"	m	struct:option
has_pygments	.\vlfeat\docsrc\webdoc.py	/^    has_pygments = False$/;"	v
has_pygments	.\vlfeat\docsrc\webdoc.py	/^    has_pygments = True$/;"	v
hat	.\vlfeat\toolbox\noprefix\hat.m	/^function varargout = hat(varargin)$/;"	f
headSearcher	.\vlfeat\vl\kdtree.h	/^  struct _VlKDForestSearcher * headSearcher ;  \/* head of the double linked list with searchers *\/$/;"	m	struct:_VlKDForest	typeref:struct:_VlKDForest::_VlKDForestSearcher
height	.\vlfeat\vl\mser.h	/^  vl_uint height ;   \/**< region height in the forest.            *\/$/;"	m	struct:_VlMserReg
height	.\vlfeat\vl\pgm.h	/^  vl_size height ;     \/**< image height.                    *\/$/;"	m	struct:_VlPgmImage
height	.\vlfeat\vl\quickshift.h	/^  int height;           \/**< height of the image *\/$/;"	m	struct:_VlQS
height	.\vlfeat\vl\scalespace.h	/^  vl_size height ; \/**< Height (number of pixels) *\/$/;"	m	struct:_VlScaleSpaceOctaveGeometry
height	.\vlfeat\vl\scalespace.h	/^  vl_size height ; \/**< Image height *\/$/;"	m	struct:_VlScaleSpaceGeometry
height	.\vlfeat\vl\sift.h	/^  int height ;          \/**< image height. *\/$/;"	m	struct:_VlSiftFilt
help	.\vlfeat\docsrc\mdoc.py	/^    help    = "create helptoc.xml")$/;"	v
help	.\vlfeat\docsrc\mdoc.py	/^    help    = "exclude files matching the specified regexp")$/;"	v
help	.\vlfeat\docsrc\mdoc.py	/^    help    = "helptoc.xml: Toolbox Name")$/;"	v
help	.\vlfeat\docsrc\mdoc.py	/^    help    = "print debug information")$/;"	v
help	.\vlfeat\docsrc\mdoc.py	/^    help    = "specify the output format (html, wiki, web)",$/;"	v
help	.\vlfeat\docsrc\webdoc.py	/^        help    = "find doxygen documentation here")$/;"	v
help	.\vlfeat\docsrc\webdoc.py	/^        help    = "print more debuging information")$/;"	v
help	.\vlfeat\docsrc\webdoc.py	/^        help    = "run the profiler")$/;"	v
help	.\vlfeat\docsrc\webdoc.py	/^        help    = "use this doxygen tag file")$/;"	v
help	.\vlfeat\docsrc\webdoc.py	/^        help    = "write output to this directory")$/;"	v
help	.\vlfeat\docsrc\webdoc.py	/^        help = "set the base URL of the website")$/;"	v
help	.\vlfeat\docsrc\webdoc.py	/^        help = "store the website index here")$/;"	v
help_message	.\vlfeat\src\mser.c	/^char const help_message [] =$/;"	v
help_message	.\vlfeat\src\sift.c	/^char const help_message [] =$/;"	v
hikm_to_matlab	.\vlfeat\toolbox\kmeans\vl_hikmeans.c	/^hikm_to_matlab (VlHIKMTree * tree)$/;"	f
hikmeans	.\vlfeat\toolbox\noprefix\hikmeans.m	/^function varargout = hikmeans(varargin)$/;"	f
hikmeanshist	.\vlfeat\toolbox\noprefix\hikmeanshist.m	/^function varargout = hikmeanshist(varargin)$/;"	f
hikmeanspush	.\vlfeat\toolbox\noprefix\hikmeanspush.m	/^function varargout = hikmeanspush(varargin)$/;"	f
histmarg	.\vlfeat\toolbox\noprefix\histmarg.m	/^function varargout = histmarg(varargin)$/;"	f
hog	.\vlfeat\toolbox\noprefix\hog.m	/^function varargout = hog(varargin)$/;"	f
hog	.\vlfeat\vl\hog.h	/^  float * hog ;$/;"	m	struct:VlHog_
hogHeight	.\vlfeat\vl\hog.h	/^  vl_size hogHeight ;$/;"	m	struct:VlHog_
hogNorm	.\vlfeat\vl\hog.h	/^  float * hogNorm ;$/;"	m	struct:VlHog_
hogWidth	.\vlfeat\vl\hog.h	/^  vl_size hogWidth ;$/;"	m	struct:VlHog_
hom	.\vlfeat\vl\svmdataset.c	/^  VlHomogeneousKernelMap * hom ;    \/**< Homogeneous kernel map (optional). *\/$/;"	m	struct:VlSvmDataset_	file:
homBuffer	.\vlfeat\vl\svmdataset.c	/^  void * homBuffer ;                \/**< Homogeneous kernel map buffer. *\/$/;"	m	struct:VlSvmDataset_	file:
homDimension	.\vlfeat\vl\svmdataset.c	/^  vl_size homDimension ;            \/**< Homogeneous kernel map dimension. *\/$/;"	m	struct:VlSvmDataset_	file:
homkermap	.\vlfeat\toolbox\noprefix\homkermap.m	/^function varargout = homkermap(varargin)$/;"	f
htmlentitydefs	.\vlfeat\docsrc\webdoc.py	/^import htmlentitydefs$/;"	i
idx_t	.\vlfeat\toolbox\mser\vl_erfill.c	/^typedef int           idx_t ;$/;"	t	file:
ignorableWhitespace	.\vlfeat\docsrc\webdoc.py	/^    def ignorableWhitespace(self, ws):$/;"	m	class:DocHandler
ihashfind	.\vlfeat\toolbox\noprefix\ihashfind.m	/^function varargout = ihashfind(varargin)$/;"	f
ihashsum	.\vlfeat\toolbox\noprefix\ihashsum.m	/^function varargout = ihashsum(varargin)$/;"	f
ihat	.\vlfeat\toolbox\noprefix\ihat.m	/^function varargout = ihat(varargin)$/;"	f
ikmeans	.\vlfeat\toolbox\noprefix\ikmeans.m	/^function varargout = ikmeans(varargin)$/;"	f
ikmeanshist	.\vlfeat\toolbox\noprefix\ikmeanshist.m	/^function varargout = ikmeanshist(varargin)$/;"	f
ikmeanspush	.\vlfeat\toolbox\noprefix\ikmeanspush.m	/^function varargout = ikmeanspush(varargin)$/;"	f
imHeight	.\vlfeat\vl\dsift.h	/^  int imHeight ;           \/**< @internal @brief image height *\/$/;"	m	struct:VlDsiftFilter_
imWidth	.\vlfeat\vl\dsift.h	/^  int imWidth ;            \/**< @internal @brief image width *\/$/;"	m	struct:VlDsiftFilter_
image	.\vlfeat\vl\quickshift.h	/^  vl_qs_type *image ;   \/**< height x width x channels feature image *\/$/;"	m	struct:_VlQS
imarray	.\vlfeat\toolbox\noprefix\imarray.m	/^function varargout = imarray(varargin)$/;"	f
imarraysc	.\vlfeat\toolbox\noprefix\imarraysc.m	/^function varargout = imarraysc(varargin)$/;"	f
imdisttf	.\vlfeat\toolbox\noprefix\imdisttf.m	/^function varargout = imdisttf(varargin)$/;"	f
imdisttf_equiv	.\vlfeat\toolbox\xtest\vl_test_imdisttf.m	/^function [D,map]=imdisttf_equiv(I,param)$/;"	f
imdown	.\vlfeat\toolbox\noprefix\imdown.m	/^function varargout = imdown(varargin)$/;"	f
imgrad	.\vlfeat\toolbox\noprefix\imgrad.m	/^function varargout = imgrad(varargin)$/;"	f
imintegral	.\vlfeat\toolbox\noprefix\imintegral.m	/^function varargout = imintegral(varargin)$/;"	f
impattern	.\vlfeat\toolbox\noprefix\impattern.m	/^function varargout = impattern(varargin)$/;"	f
imreadbw	.\vlfeat\toolbox\noprefix\imreadbw.m	/^function varargout = imreadbw(varargin)$/;"	f
imreadgray	.\vlfeat\toolbox\noprefix\imreadgray.m	/^function varargout = imreadgray(varargin)$/;"	f
imsc	.\vlfeat\toolbox\noprefix\imsc.m	/^function varargout = imsc(varargin)$/;"	f
imseg	.\vlfeat\toolbox\noprefix\imseg.m	/^function varargout = imseg(varargin)$/;"	f
imsmooth	.\vlfeat\toolbox\noprefix\imsmooth.m	/^function varargout = imsmooth(varargin)$/;"	f
imup	.\vlfeat\toolbox\noprefix\imup.m	/^function varargout = imup(varargin)$/;"	f
imwbackward	.\vlfeat\toolbox\noprefix\imwbackward.m	/^function varargout = imwbackward(varargin)$/;"	f
imwhiten	.\vlfeat\toolbox\noprefix\imwhiten.m	/^function varargout = imwhiten(varargin)$/;"	f
indent	.\vlfeat\docsrc\formatter.py	/^    indent  = 0$/;"	v	class:L
index	.\vlfeat\vl\kdtree.h	/^  vl_index index ;$/;"	m	struct:_VlKDTreeDataIndexEntry
index	.\vlfeat\vl\kdtree.h	/^  vl_uindex index ;   \/**< index of the neighbor in the KDTree data *\/$/;"	m	struct:_VlKDForestNeighbor
index	.\vlfeat\vl\mser.h	/^  int          index ;      \/**< index of pivot pixel                         *\/$/;"	m	struct:_VlMserExtrReg
init_data	.\vlfeat\src\test_vec_comp.c	/^init_data (vl_size numDimensions, vl_size numSamples, float ** X, float ** Y)$/;"	f
initialization	.\vlfeat\vl\gmm.c	/^  VlGMMInitialization initialization; \/**< Initialization option *\/$/;"	m	struct:_VlGMM	file:
initialization	.\vlfeat\vl\kmeans.h	/^  VlKMeansInitialization initialization ; \/**< Initalization algorithm. *\/$/;"	m	struct:_VlKMeans
innerProductFn	.\vlfeat\vl\svm.c	/^  VlSvmInnerProductFunction innerProductFn ;$/;"	m	struct:VlSvm_	file:
inner_indent	.\vlfeat\docsrc\formatter.py	/^    inner_indent = 0$/;"	v	class:BL
inputTypeNames	.\vlfeat\toolbox\misc\vl_hog.c	/^static char const * inputTypeNames [] = {$/;"	v	file:
intensityThreshold	.\vlfeat\vl\liop.h	/^  float intensityThreshold; \/**< Weight threshold. *\/$/;"	m	struct:_VlLiopDesc
inter_dist	.\vlfeat\vl\ikmeans.h	/^  vl_ikmacc_t *inter_dist ; \/**< centers inter-distances *\/$/;"	m	struct:_VlIKMFilt
inthist	.\vlfeat\toolbox\noprefix\inthist.m	/^function varargout = inthist(varargin)$/;"	f
inthist_slow	.\vlfeat\toolbox\xtest\vl_test_inthist.m	/^function hist = inthist_slow(labels, numLabels)$/;"	f
inv2x2	.\vlfeat\toolbox\sift\vl_ubcread.m	/^function S = inv2x2(C)$/;"	f
irodr	.\vlfeat\toolbox\noprefix\irodr.m	/^function varargout = irodr(varargin)$/;"	f
is	.\vlfeat\vl\sift.h	/^  int is ;          \/**< Integer s coordinate. *\/$/;"	m	struct:_VlSiftKeypoint
isA	.\vlfeat\docsrc\webdoc.py	/^    def isA(self, classInfo):$/;"	m	class:DocBareNode
isEnvelope	.\vlfeat\vl\array.h	/^  vl_bool isEnvelope ;$/;"	m	struct:_VlArray
isSparse	.\vlfeat\vl\array.h	/^  vl_bool isSparse ;$/;"	m	struct:_VlArray
is_equal	.\vlfeat\toolbox\misc\vl_ihashfind.c	/^is_equal (vl_uint8 const * x, vl_uint8 const * y, int n)$/;"	f
is_equal	.\vlfeat\toolbox\misc\vl_ihashsum.c	/^is_equal (vl_uint8 const * x, vl_uint8 const * y, int n)$/;"	f
is_null	.\vlfeat\toolbox\misc\vl_ihashfind.c	/^is_null (vl_uint8 const * x, int n)$/;"	f
is_null	.\vlfeat\toolbox\misc\vl_ihashsum.c	/^is_null (vl_uint8 const * x, int n)$/;"	f
is_raw	.\vlfeat\vl\pgm.h	/^  vl_bool is_raw ;     \/**< is RAW format?                   *\/$/;"	m	struct:_VlPgmImage
is_valid_geometry	.\vlfeat\vl\scalespace.c	323;"	d	file:
isa	.\vlfeat\docsrc\formatter.py	/^    def isa(self, classinfo):$/;"	m	class:Terminal
isign	.\vlfeat\vl\mathop.c	709;"	d	file:
isnan	.\vlfeat\vl\host.h	316;"	d
isnan	.\vlfeat\vl\host.h	336;"	d
isoctave	.\vlfeat\toolbox\noprefix\isoctave.m	/^function varargout = isoctave(varargin)$/;"	f
iteration	.\vlfeat\vl\svm.c	/^  vl_size iteration ;           \/**< Current iterations number. *\/$/;"	m	struct:VlSvm_	file:
iteration	.\vlfeat\vl\svm.h	/^  vl_size iteration ;           \/**< Solver iteration. *\/$/;"	m	struct:VlSvmStatistics_
ix	.\vlfeat\vl\sift.h	/^  int ix ;          \/**< Integer unnormalized x coordinate. *\/$/;"	m	struct:_VlSiftKeypoint
iy	.\vlfeat\vl\sift.h	/^  int iy ;          \/**< Integer unnormalized y coordinate. *\/$/;"	m	struct:_VlSiftKeypoint
joins	.\vlfeat\vl\mser.h	/^  vl_uint           *joins ;   \/**< sequence of join ops                    *\/$/;"	m	struct:_VlMserFilt
k1	.\vlfeat\toolbox\sift\vl_ubcmatch.c	/^  int k1 ;$/;"	m	struct:__anon34	file:
k2	.\vlfeat\toolbox\sift\vl_ubcmatch.c	/^  int k2 ;$/;"	m	struct:__anon34	file:
kdtreebuild	.\vlfeat\toolbox\noprefix\kdtreebuild.m	/^function varargout = kdtreebuild(varargin)$/;"	f
kdtreequery	.\vlfeat\toolbox\noprefix\kdtreequery.m	/^function varargout = kdtreequery(varargin)$/;"	f
kernelType	.\vlfeat\vl\homkermap.c	/^  VlHomogeneousKernelType kernelType ;$/;"	m	struct:_VlHomogeneousKernelMap	file:
key_handler	.\vlfeat\toolbox\plotop\vl_click.m	/^function key_handler(obj,event)$/;"	f
keys	.\vlfeat\vl\sift.h	/^  VlSiftKeypoint* keys ;\/**< detected keypoints. *\/$/;"	m	struct:_VlSiftFilt
keys_res	.\vlfeat\vl\sift.h	/^  int keys_res ;        \/**< size of the keys buffer. *\/$/;"	m	struct:_VlSiftFilt
kmeans	.\vlfeat\toolbox\noprefix\kmeans.m	/^function varargout = kmeans(varargin)$/;"	f
kmeansInit	.\vlfeat\vl\gmm.c	/^  VlKMeans * kmeansInit;              \/**< Kmeans object for initialization of gaussians *\/$/;"	m	struct:_VlGMM	file:
kmeansInitIsOwner	.\vlfeat\vl\gmm.c	/^  vl_bool kmeansInitIsOwner; \/**< Indicates whether a user provided the kmeans initialization object *\/$/;"	m	struct:_VlGMM	file:
korder	.\vlfeat\src\sift.c	/^korder (void const* a, void const* b) {$/;"	f
korder	.\vlfeat\toolbox\sift\vl_sift.c	/^korder (void const* a, void const* b) {$/;"	f	file:
labels	.\vlfeat\vl\svm.c	/^  double const * labels ;       \/**< Data labels. *\/$/;"	m	struct:VlSvm_	file:
lambda	.\vlfeat\vl\svm.c	/^  double lambda ;               \/**< Regularizer multiplier. *\/$/;"	m	struct:VlSvm_	file:
lapPatch	.\vlfeat\vl\covdet.c	/^  float lapPatch [(2*VL_COVDET_LAP_PATCH_RESOLUTION+1)*(2*VL_COVDET_LAP_PATCH_RESOLUTION+1)] ;$/;"	m	struct:_VlCovDet	file:
lapPeakThreshold	.\vlfeat\vl\covdet.c	/^  double lapPeakThreshold;   \/**< peak threshold for Laplacian scale selection. *\/$/;"	m	struct:_VlCovDet	file:
laplacianScaleScore	.\vlfeat\vl\covdet.h	/^  float laplacianScaleScore ; \/**< Laplacian scale score. *\/$/;"	m	struct:_VlCovDetFeature
laplacians	.\vlfeat\vl\covdet.c	/^  float laplacians [(2*VL_COVDET_LAP_PATCH_RESOLUTION+1)*(2*VL_COVDET_LAP_PATCH_RESOLUTION+1)*VL_COVDET_LAP_NUM_LEVELS] ;$/;"	m	struct:_VlCovDet	file:
lastError	.\vlfeat\vl\generic.c	/^  int lastError ;$/;"	m	struct:_VlThreadState	file:
lastErrorMessage	.\vlfeat\vl\generic.c	/^  char lastErrorMessage [VL_ERR_MSG_LEN] ;$/;"	m	struct:_VlThreadState	file:
lastOctave	.\vlfeat\vl\scalespace.h	/^  vl_index lastOctave ; \/**< Index of the last octave *\/$/;"	m	struct:_VlScaleSpaceGeometry
lbp	.\vlfeat\toolbox\noprefix\lbp.m	/^function varargout = lbp(varargin)$/;"	f
lbpfliplr	.\vlfeat\toolbox\noprefix\lbpfliplr.m	/^function varargout = lbpfliplr(varargin)$/;"	f
letter_V	.\vlfeat\doc\api\classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_V"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;V&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter__	.\vlfeat\doc\api\classes.html	/^<tr><td valign="top"><a class="el" href="structVlAIB.html">VlAIB<\/a>&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="struct__VlFileMeta.html">_VlFileMeta<\/a>&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="structVlKDForestNeighbor.html">VlKDForestNeighbor<\/a>&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="structVlPgmImage.html">VlPgmImage<\/a>&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter__"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;_&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_o	.\vlfeat\doc\api\classes.html	/^<tr><td valign="top"><a class="el" href="structVlCovDetFeatureLaplacianScale.html">VlCovDetFeatureLaplacianScale<\/a>&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="structVlFrameOrientedDisc.html">VlFrameOrientedDisc<\/a>&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="structVlLbp.html">VlLbp<\/a>&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="structVlScaleSpace.html">VlScaleSpace<\/a>&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_o"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;o&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_v	.\vlfeat\doc\api\classes.html	/^<tr><td valign="top"><a class="el" href="structVlDsiftFilter.html">VlDsiftFilter<\/a>&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="structVlHIKMTree.html">VlHIKMTree<\/a>&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="struct__VlMserFilt.html">_VlMserFilt<\/a>&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="structVlSiftFilt.html">VlSiftFilt<\/a>&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_v"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;v&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
lex	.\vlfeat\docsrc\formatter.py	/^def lex(line):$/;"	f
lexers	.\vlfeat\docsrc\webdoc.py	/^    import pygments.lexers$/;"	i
libobj	.\vlfeat\Makefile.mak	/^libobj = $(libobj:.c=.obj)$/;"	m
libobj	.\vlfeat\Makefile.mak	/^libobj = $(libsrc:vl\\=bin\\win32\\objs\\)$/;"	m
libobj	.\vlfeat\Makefile.mak	/^libobj = $(libsrc:vl\\=bin\\win64\\objs\\)$/;"	m
libsrc	.\vlfeat\Makefile.mak	/^libsrc = \\$/;"	m
lines	.\vlfeat\docsrc\formatter.py	/^    lines = text.splitlines()$/;"	v	class:Formatter
linespec2prop	.\vlfeat\toolbox\noprefix\linespec2prop.m	/^function varargout = linespec2prop(varargin)$/;"	f
liop	.\vlfeat\toolbox\noprefix\liop.m	/^function varargout = liop(varargin)$/;"	f
listMFilesX	.\vlfeat\toolbox\vl_noprefix.m	/^function list = listMFilesX(root)$/;"	f
load	.\vlfeat\docsrc\webdoc.py	/^    def load(self, qualFilePath):$/;"	m	class:DocHandler
localmax	.\vlfeat\toolbox\noprefix\localmax.m	/^function varargout = localmax(varargin)$/;"	f
log2	.\vlfeat\vl\sift.c	678;"	d	file:
longopts	.\vlfeat\src\mser.c	/^struct option const longopts [] = {$/;"	v
longopts	.\vlfeat\src\sift.c	/^struct option const longopts [] = {$/;"	v
longopts	.\vlfeat\src\test_getopt_long.c	/^static struct option longopts[] = {$/;"	v	typeref:struct:option	file:
lookupFile	.\vlfeat\docsrc\webdoc.py	/^    def lookupFile(self, filePath):$/;"	m	class:DocHandler
loss	.\vlfeat\vl\svm.h	/^  double loss ;                 \/**< Loss value. *\/$/;"	m	struct:VlSvmStatistics_
lossDerivativeFn	.\vlfeat\vl\svm.c	/^  VlSvmLossFunction lossDerivativeFn ;$/;"	m	struct:VlSvm_	file:
lossFn	.\vlfeat\vl\svm.c	/^  VlSvmLossFunction lossFn ;$/;"	m	struct:VlSvm_	file:
lowerBound	.\vlfeat\vl\kdtree.h	/^  double lowerBound ;$/;"	m	struct:_VlKDTreeNode
lowerChild	.\vlfeat\vl\kdtree.h	/^  vl_index lowerChild ;$/;"	m	struct:_VlKDTreeNode
m_demo_src	.\vlfeat\make\doc.mak	/^m_demo_src=$(wildcard toolbox\/demo\/vl_demo_*.m)$/;"	m
m_lnk	.\vlfeat\make\matlab.mak	/^m_lnk := $(addprefix toolbox\/noprefix\/,                              \\$/;"	m
m_src	.\vlfeat\make\matlab.mak	/^m_src := $(shell find $(VLDIR)\/toolbox -name "vl_*.m")$/;"	m
magnif	.\vlfeat\vl\sift.h	/^  double magnif ;       \/**< magnification factor. *\/$/;"	m	struct:_VlSiftFilt
main	.\vlfeat\src\aib.c	/^int main()$/;"	f
main	.\vlfeat\src\mser.c	/^main(int argc, char **argv)$/;"	f
main	.\vlfeat\src\sift.c	/^main(int argc, char **argv)$/;"	f
main	.\vlfeat\src\test_gauss_elimination.c	/^main(int argc VL_UNUSED, char**argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_getopt_long.c	/^main (int argc, char *argv[])$/;"	f
main	.\vlfeat\src\test_gmm.c	/^int main(int argc VL_UNUSED, char ** argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_heap-def.c	/^main (int argc VL_UNUSED, char** argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_host.c	/^main(int argc VL_UNUSED, char ** argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_imopv.c	/^main (int argc, char** argv)$/;"	f
main	.\vlfeat\src\test_kmeans.c	/^int main(int argc VL_UNUSED, char ** argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_liop.c	/^int main(){$/;"	f
main	.\vlfeat\src\test_mathop.c	/^main (int argc VL_UNUSED, char** argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_mathop_abs.c	/^main(int argc VL_UNUSED, char**argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_nan.c	/^main(int argc VL_UNUSED, char** argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_qsort-def.c	/^main (int argc VL_UNUSED, char ** argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_rand.c	/^main (int argc VL_UNUSED, char *argv[] VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_sqrti.c	/^main (int argc VL_UNUSED, char** argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_stringop.c	/^main (int argc VL_UNUSED, char *argv[] VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_svd2.c	/^main (int argc VL_UNUSED, char ** argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_threads.c	/^main(int argc VL_UNUSED, char** argv VL_UNUSED)$/;"	f
main	.\vlfeat\src\test_vec_comp.c	/^main (int argc VL_UNUSED, char** argv VL_UNUSED)$/;"	f
make	.\vlfeat\make\update-mak.sh	/^function make$/;"	f
makeError	.\vlfeat\docsrc\webdoc.py	/^    def makeError(self, message):$/;"	m	class:DocHandler
makeGuard	.\vlfeat\docsrc\webdoc.py	/^class makeGuard(object):$/;"	c
makeInfoStruct	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^mxArray * makeInfoStruct (VlSvm* svm)$/;"	f
makedist	.\vlfeat\toolbox\xtest\vl_test_alldist.m	/^function D = makedist(cmp,X,Y)$/;"	f
makedist	.\vlfeat\toolbox\xtest\vl_test_alldist2.m	/^function D = makedist(cmp,X,Y)$/;"	f
malloc_func	.\vlfeat\vl\generic.c	/^  void *(*malloc_func)  (size_t) ;$/;"	m	struct:_VlState	file:
man_src	.\vlfeat\make\doc.mak	/^man_src := $(wildcard src\/*.1) $(wildcard src\/*.7)$/;"	m
man_tgt	.\vlfeat\make\doc.mak	/^man_tgt := $(subst src\/,doc\/build\/man\/,$(addsuffix .html,$(man_src)))$/;"	m
mapFromS	.\vlfeat\toolbox\sift\vl_frame2oell.m	/^function A = mapFromS(S)$/;"	f
mapUnicodeToHtmlEntity	.\vlfeat\docsrc\webdoc.py	/^mapUnicodeToHtmlEntity = { }$/;"	v
mapping	.\vlfeat\vl\lbp.h	/^  vl_uint8 mapping [256] ;$/;"	m	struct:VlLbp_
mapvis	.\vlfeat\toolbox\quickshift\vl_quickvis.m	/^function [Iedge dists] = mapvis(map, gaps, maxdist, maxcuts)$/;"	f
matlabDiagonsticFunctionHandle	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  mxArray const * matlabDiagonsticFunctionHandle ;$/;"	m	struct:DiagnsoticOpts_	file:
matlab_to_hikm	.\vlfeat\toolbox\kmeans\vl_hikmeanspush.c	/^matlab_to_hikm (mxArray const *mtree, int method_type)$/;"	f	file:
matlabversion	.\vlfeat\toolbox\noprefix\matlabversion.m	/^function varargout = matlabversion(varargin)$/;"	f
maxExponent	.\vlfeat\vl\homkermap.c	/^  vl_index maxExponent ;$/;"	m	struct:_VlHomogeneousKernelMap	file:
maxNumComparisons	.\vlfeat\vl\kmeans.h	/^  vl_size maxNumComparisons ;             \/**< Maximum number of comparisons when using ANN-kmeans. *\/$/;"	m	struct:_VlKMeans
maxNumIterations	.\vlfeat\vl\gmm.c	/^  vl_size maxNumIterations ;          \/**< Maximum number of refinement iterations. *\/$/;"	m	struct:_VlGMM	file:
maxNumIterations	.\vlfeat\vl\kmeans.h	/^  vl_size maxNumIterations ;              \/**< Maximum number of refinement iterations. *\/$/;"	m	struct:_VlKMeans
maxNumIterations	.\vlfeat\vl\svm.c	/^  vl_size maxNumIterations ;    \/**< Maximum number of iterations. *\/$/;"	m	struct:VlSvm_	file:
maxNumNodes	.\vlfeat\vl\kdtree.h	/^  vl_size maxNumNodes;$/;"	m	struct:_VlKDForest
max_area	.\vlfeat\vl\mser.h	/^  double    max_area ;         \/**< badness test parameter                 *\/$/;"	m	struct:_VlMserFilt
max_niters	.\vlfeat\vl\hikmeans.h	/^  vl_size max_niters ;  \/**< IKM: maximum # of iterations *\/$/;"	m	struct:_VlHIKMTree
max_niters	.\vlfeat\vl\ikmeans.h	/^  vl_size max_niters ; \/**< Lloyd: maximum number of iterations *\/$/;"	m	struct:_VlIKMFilt
max_stable	.\vlfeat\vl\mser.h	/^  vl_uint      max_stable ; \/**< max stable number (=0 if not maxstable)      *\/$/;"	m	struct:_VlMserExtrReg
max_value	.\vlfeat\vl\pgm.h	/^  vl_size max_value ;  \/**< pixel maximum value (<= 2^16-1). *\/$/;"	m	struct:_VlPgmImage
max_variation	.\vlfeat\vl\mser.h	/^  double    max_variation ;    \/**< badness test parameter                 *\/$/;"	m	struct:_VlMserFilt
mean	.\vlfeat\vl\kdtree.h	/^  double mean ;$/;"	m	struct:_VlKDTreeSplitDimension
means	.\vlfeat\vl\gmm.c	/^  void *  means;                      \/**< Means of Gaussian modes. *\/$/;"	m	struct:_VlGMM	file:
medoid	.\vlfeat\vl\quickshift.h	/^  vl_bool medoid;$/;"	m	struct:_VlQS
member-group	.\vlfeat\doc\api\covdet_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"><\/a>$/;"	a
member-group	.\vlfeat\doc\api\generic_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"><\/a>$/;"	a
member-group	.\vlfeat\doc\api\host_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"><\/a>$/;"	a
member-group	.\vlfeat\doc\api\mexutils_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"><\/a>$/;"	a
mer	.\vlfeat\vl\mser.h	/^  vl_uint           *mer ;     \/**< maximally stable extremal regions       *\/$/;"	m	struct:_VlMserFilt
metavar	.\vlfeat\docsrc\mdoc.py	/^    metavar = "STRING")$/;"	v
method	.\vlfeat\vl\covdet.c	/^  VlCovDetMethod method ;    \/**< feature extraction method. *\/$/;"	m	struct:_VlCovDet	file:
method	.\vlfeat\vl\hikmeans.h	/^  int method ; \/**< IKM: method *\/$/;"	m	struct:_VlHIKMTree
method	.\vlfeat\vl\ikmeans.h	/^  int method ; \/**< Learning method *\/$/;"	m	struct:_VlIKMFilt
mexFunction	.\vlfeat\toolbox\aib\vl_aib.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\aib\vl_aibhist.c	/^mexFunction (int nout, mxArray * out[], int nin, const mxArray * in[])$/;"	f
mexFunction	.\vlfeat\toolbox\fisher\vl_fisher.c	/^mexFunction (int nout VL_UNUSED, mxArray * out[], int nin, const mxArray * in[])$/;"	f
mexFunction	.\vlfeat\toolbox\geometry\vl_irodr.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\geometry\vl_rodr.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\gmm\vl_gmm.c	/^mexFunction (int nout, mxArray * out[], int nin, const mxArray * in[])$/;"	f
mexFunction	.\vlfeat\toolbox\imop\vl_imdisttf.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\imop\vl_imintegral.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\imop\vl_imsmooth.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\imop\vl_imwbackwardmx.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\imop\vl_tpsumx.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\kmeans\vl_hikmeans.c	/^void mexFunction (int nout, mxArray * out[], int nin, const mxArray * in[])$/;"	f
mexFunction	.\vlfeat\toolbox\kmeans\vl_hikmeanspush.c	/^void mexFunction (int nout, mxArray * out[],$/;"	f
mexFunction	.\vlfeat\toolbox\kmeans\vl_ikmeans.c	/^void mexFunction (int nout, mxArray * out[], int nin, const mxArray * in[])$/;"	f
mexFunction	.\vlfeat\toolbox\kmeans\vl_ikmeanspush.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^mexFunction (int nout, mxArray * out[], int nin, const mxArray * in[])$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_alldist.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_binsearch.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_binsum.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_cummax.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_getpid.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_hog.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_homkermap.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_ihashfind.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_ihashsum.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_inthist.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_kdtreebuild.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_kdtreequery.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_lbp.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_localmax.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_sampleinthist.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_simdctrl.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_threads.c	/^mexFunction(int nout VL_UNUSED, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_twister.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\misc\vl_version.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\mser\vl_erfill.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\mser\vl_mser.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\quickshift\vl_quickshift.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\sift\vl_covdet.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\sift\vl_dsift.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\sift\vl_liop.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\sift\vl_sift.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\sift\vl_siftdescriptor.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\slic\vl_slic.c	/^mexFunction(int nout, mxArray *out[],$/;"	f
mexFunction	.\vlfeat\toolbox\vlad\vl_vlad.c	/^mexFunction (int nout VL_UNUSED, mxArray * out[], int nin, const mxArray * in[])$/;"	f
mex_dep	.\vlfeat\make\matlab.mak	/^mex_dep := $(mex_tgt:.$(MEX_SUFFIX)=.d)$/;"	m
mex_dll	.\vlfeat\make\matlab.mak	/^mex_dll := $(MEX_BINDIR)\/lib$(DLL_NAME).$(DLL_SUFFIX)$/;"	m
mex_src	.\vlfeat\make\matlab.mak	/^mex_src := $(shell find $(VLDIR)\/toolbox -name "*.c")$/;"	m
mex_sub	.\vlfeat\make\matlab.mak	/^mex_sub := $(shell find $(VLDIR)\/toolbox -type d)$/;"	m
mex_tgt	.\vlfeat\make\matlab.mak	/^mex_tgt := $(addprefix $(MEX_BINDIR)\/,\\$/;"	m
mexcrt	.\vlfeat\Makefile.mak	/^mexcrt = $(mexdir)\\msvcr$(MSVSVER).dll $(mexdir)\\$(MSVCR).manifest$/;"	m
mexcrt	.\vlfeat\Makefile.mak	/^mexcrt = $(mexdir)\\msvcr$(MSVSVER).dll$/;"	m
mexdir	.\vlfeat\Makefile.mak	/^mexdir = toolbox\\mex\\$(MEXEXT)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\aib=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\aib=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\fisher=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\fisher=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\geometry=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\geometry=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\gmm=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\gmm=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\imop=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\imop=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\kmeans=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\kmeans=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\misc=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\misc=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\mser=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\mser=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\quickshift=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\quickshift=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\sift=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\sift=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\slic=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\slic=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\vlad=toolbox\\mex\\mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexdll:toolbox\\vlad=toolbox\\mex\\mexw64)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexsrc:.c=.mexw32)$/;"	m
mexdll	.\vlfeat\Makefile.mak	/^mexdll = $(mexsrc:.c=.mexw64)$/;"	m
mexpdb	.\vlfeat\Makefile.mak	/^mexpdb = $(mexdll:.dll=.pdb)$/;"	m
mexpdb	.\vlfeat\Makefile.mak	/^mexpdb = $(mexdll:.mexw64=.pdb)$/;"	m
mexsrc	.\vlfeat\Makefile.mak	/^mexsrc = \\$/;"	m
mi	.\vlfeat\toolbox\xtest\vl_test_aib.m	/^function x = mi(P)$/;"	f
minEnergyVariation	.\vlfeat\vl\kmeans.h	/^  double minEnergyVariation ;             \/**< Minimum energy variation. *\/$/;"	m	struct:_VlKMeans
minExponent	.\vlfeat\vl\homkermap.c	/^  vl_index minExponent ;$/;"	m	struct:_VlHomogeneousKernelMap	file:
min_area	.\vlfeat\vl\mser.h	/^  double    min_area ;         \/**< badness test parameter                 *\/$/;"	m	struct:_VlMserFilt
min_diversity	.\vlfeat\vl\mser.h	/^  double    min_diversity ;    \/**< minimum diversity                      *\/$/;"	m	struct:_VlMserFilt
mine_hard_examples	.\mine_hard_examples.m	/^function [mine_w, mine_b] =  mine_hard_examples(features_pos, features_neg, non_face_scn_path, w, b, feature_params)$/;"	f
minidom	.\vlfeat\docsrc\doxytag.py	/^import xml.dom.minidom$/;"	i
minidom	.\vlfeat\docsrc\formatter.py	/^import xml.dom.minidom$/;"	i
mkd	.\vlfeat\toolbox\vl_compile.m	/^function mkd(dst)$/;"	f
model	.\vlfeat\vl\svm.c	/^  double * model ;              \/**< Model ($\\bw$ vector). *\/$/;"	m	struct:VlSvm_	file:
mser	.\vlfeat\toolbox\noprefix\mser.m	/^function varargout = mser(varargin)$/;"	f
mt	.\vlfeat\vl\random.c	147;"	d	file:
mt	.\vlfeat\vl\random.c	160;"	d	file:
mt	.\vlfeat\vl\random.c	173;"	d	file:
mt	.\vlfeat\vl\random.c	196;"	d	file:
mt	.\vlfeat\vl\random.c	232;"	d	file:
mt	.\vlfeat\vl\random.c	265;"	d	file:
mt	.\vlfeat\vl\random.h	/^  vl_uint32 mt [624] ;$/;"	m	struct:_VlRand
mti	.\vlfeat\vl\random.c	146;"	d	file:
mti	.\vlfeat\vl\random.c	159;"	d	file:
mti	.\vlfeat\vl\random.c	172;"	d	file:
mti	.\vlfeat\vl\random.c	195;"	d	file:
mti	.\vlfeat\vl\random.c	231;"	d	file:
mti	.\vlfeat\vl\random.c	264;"	d	file:
mti	.\vlfeat\vl\random.h	/^  vl_uint32 mti ;$/;"	m	struct:_VlRand
mwIndex	.\vlfeat\toolbox\mexutils.h	/^typedef vl_int32 mwIndex ;$/;"	t
mwSize	.\vlfeat\toolbox\mexutils.h	/^typedef vl_uint32 mwSize ;$/;"	t
mxRealloc	.\vlfeat\toolbox\mexutils.h	56;"	d
mxReallocOctaveWorkaround	.\vlfeat\toolbox\mexutils.h	/^mxReallocOctaveWorkaround(void * ptr, size_t size)$/;"	f
mxSetDimensions	.\vlfeat\toolbox\mexutils.h	66;"	d
mxSetDimensionsOctaveWorkaround	.\vlfeat\toolbox\mexutils.h	/^mxSetDimensionsOctaveWorkaround(mxArray * array, const mwSize  *dims, int ndims)$/;"	f
myFunction	.\vlfeat\doc\build\matlab\vl_argparse.html	/^  function myFunction(x,y,z,varargin)$/;"	f
myFunction	.\vlfeat\doc\matlab\vl_argparse.html	/^  function myFunction(x,y,z,varargin)$/;"	f
name	.\vlfeat\src\generic-driver.h	/^  char    name [1024] ;     \/**< Current file name *\/$/;"	m	struct:_VlFileMeta
name	.\vlfeat\toolbox\mexutils.h	/^  const char *name ; \/**< option name *\/$/;"	m	struct:_vlmxOption
name	.\vlfeat\vl\getopt_long.h	/^  const char *name ;  \/**< option long name *\/$/;"	m	struct:option
name	.\vlfeat\vl\stringop.h	/^  char const *name ; \/**< enumeration member name. *\/$/;"	m	struct:_VlEnumerator
ndims	.\vlfeat\vl\mser.h	/^  int                ndims ;   \/**< number of dimensions                    *\/$/;"	m	struct:_VlMserFilt
neighIntensities	.\vlfeat\vl\liop.h	/^  float * neighIntensities ;$/;"	m	struct:_VlLiopDesc
neighPermutation	.\vlfeat\vl\liop.h	/^  vl_uindex * neighPermutation ;$/;"	m	struct:_VlLiopDesc
neighRadius	.\vlfeat\vl\liop.h	/^  float neighRadius; \/**< Point to neighbour radius (distance). *\/$/;"	m	struct:_VlLiopDesc
neighSamplesX	.\vlfeat\vl\liop.h	/^  double * neighSamplesX ;$/;"	m	struct:_VlLiopDesc
neighSamplesY	.\vlfeat\vl\liop.h	/^  double * neighSamplesY ;$/;"	m	struct:_VlLiopDesc
neigh_cmp	.\vlfeat\vl\liop.c	/^VL_INLINE float neigh_cmp (VlLiopDesc * liop, vl_index i, vl_index j)$/;"	f
neigh_swap	.\vlfeat\vl\liop.c	/^VL_INLINE void neigh_swap (VlLiopDesc * liop, vl_index i, vl_index j)$/;"	f
nel	.\vlfeat\vl\mser.h	/^  int                nel ;     \/**< number of image elements (pixels)       *\/$/;"	m	struct:_VlMserFilt
nell	.\vlfeat\vl\mser.h	/^  int                nell ;    \/**< number of ellipsoids extracted         *\/$/;"	m	struct:_VlMserFilt
nentries	.\vlfeat\vl\aib.h	/^  vl_uint    nentries ; \/**< Total number of entries (= # active nodes) *\/$/;"	m	struct:_VlAIB
ner	.\vlfeat\vl\mser.h	/^  int                ner ;     \/**< number of extremal regions              *\/$/;"	m	struct:_VlMserFilt
nested-classes	.\vlfeat\doc\api\aib_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\array_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\covdet_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\covdet_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\dsift_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\getopt__long_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\hikmeans_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\ikmeans_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\kdtree_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\kmeans_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\lbp_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\liop_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\mexutils_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\mser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\pgm_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\quickshift_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\random_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\scalespace_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\sift_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\stringop_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	.\vlfeat\doc\api\svm_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
new_array_from_kdforest	.\vlfeat\toolbox\misc\kdtree.h	/^new_array_from_kdforest (VlKDForest const * forest)$/;"	f
new_kdforest_from_array	.\vlfeat\toolbox\misc\kdtree.h	/^new_kdforest_from_array (mxArray const * forest_array, mxArray const * data_array)$/;"	f
next	.\vlfeat\docsrc\formatter.py	/^    def next(self):$/;"	m	class:Lexer
next	.\vlfeat\vl\kdtree.h	/^  struct _VlKDForestSearcher * next;$/;"	m	struct:_VlKDForestSearcher	typeref:struct:_VlKDForestSearcher::_VlKDForestSearcher
njoins	.\vlfeat\vl\mser.h	/^  int                njoins ;  \/**< number of join ops                      *\/$/;"	m	struct:_VlMserFilt
nkeys	.\vlfeat\vl\sift.h	/^  int nkeys ;           \/**< number of detected keypoints. *\/$/;"	m	struct:_VlSiftFilt
nlabels	.\vlfeat\vl\aib.h	/^  vl_uint    nlabels;   \/**< Number of labels *\/$/;"	m	struct:_VlAIB
nmer	.\vlfeat\vl\mser.h	/^  int                nmer ;    \/**< number of maximally stable extr. reg.   *\/$/;"	m	struct:_VlMserFilt
no_argument	.\vlfeat\vl\getopt_long.h	34;"	d
nodeIndex	.\vlfeat\docsrc\webdoc.py	/^nodeIndex = { }$/;"	v
nodeIndex	.\vlfeat\vl\kdtree.h	/^  vl_uindex nodeIndex ;$/;"	m	struct:_VlKDForestSearchState
nodeUniqueCount	.\vlfeat\docsrc\webdoc.py	/^nodeUniqueCount = 0$/;"	v
nodes	.\vlfeat\vl\aib.h	/^  vl_uint   *nodes ;    \/**< Entires to nodes *\/$/;"	m	struct:_VlAIB
nodes	.\vlfeat\vl\kdtree.h	/^  VlKDTreeNode * nodes ;$/;"	m	struct:_VlKDTree
nominalScale	.\vlfeat\vl\scalespace.h	/^  double nominalScale ; \/**< Nominal smoothing of the original image *\/$/;"	m	struct:_VlScaleSpaceGeometry
nonExtremaSuppression	.\vlfeat\vl\covdet.c	/^  double nonExtremaSuppression ;$/;"	m	struct:_VlCovDet	file:
non_max_supr_bbox	.\non_max_supr_bbox.m	/^function [is_valid_bbox] = non_max_supr_bbox(bboxes, confidences, img_size, verbose)$/;"	f
noprefix	.\vlfeat\toolbox\noprefix\noprefix.m	/^function varargout = noprefix(varargin)$/;"	f
norm	.\vlfeat\vl\dsift.h	/^  double norm ; \/**< SIFT descriptor norm *\/$/;"	m	struct:VlDsiftKeypoint_
norm_thresh	.\vlfeat\vl\sift.h	/^  double norm_thresh ;  \/**< norm threshold. *\/$/;"	m	struct:_VlSiftFilt
normalize_histogram	.\vlfeat\vl\sift.c	/^normalize_histogram$/;"	f
numAllocatedNodes	.\vlfeat\vl\kdtree.h	/^  vl_size numAllocatedNodes ;$/;"	m	struct:_VlKDTree
numBinAlloc	.\vlfeat\vl\dsift.h	/^  int numBinAlloc ;        \/**< buffer allocated: descriptor size *\/$/;"	m	struct:VlDsiftFilter_
numBinT	.\vlfeat\vl\dsift.h	/^  int numBinT ;  \/**< number of orientation bins *\/$/;"	m	struct:VlDsiftDescriptorGeometry_
numBinX	.\vlfeat\vl\dsift.h	/^  int numBinX ;  \/**< number of bins along X *\/$/;"	m	struct:VlDsiftDescriptorGeometry_
numBinY	.\vlfeat\vl\dsift.h	/^  int numBinY ;  \/**< number of bins along Y *\/$/;"	m	struct:VlDsiftDescriptorGeometry_
numCPUs	.\vlfeat\vl\generic.c	/^  vl_size numCPUs ;$/;"	m	struct:_VlState	file:
numCenters	.\vlfeat\vl\kmeans.h	/^  vl_size numCenters ;                    \/**< Number of centers. *\/$/;"	m	struct:_VlKMeans
numClusters	.\vlfeat\vl\gmm.c	/^  vl_size numClusters ;               \/**< Number of clusters  *\/$/;"	m	struct:_VlGMM	file:
numData	.\vlfeat\vl\gmm.c	/^  vl_size numData ;                   \/**< Number of last time clustered data points.  *\/$/;"	m	struct:_VlGMM	file:
numData	.\vlfeat\vl\kdtree.h	/^  vl_size numData ;$/;"	m	struct:_VlKDForest
numData	.\vlfeat\vl\svm.c	/^  vl_size numData ;$/;"	m	struct:VlSvm_	file:
numData	.\vlfeat\vl\svmdataset.c	/^  vl_size numData ;                 \/**< Number of wrapped data. *\/$/;"	m	struct:VlSvmDataset_	file:
numDimensions	.\vlfeat\vl\array.h	/^  vl_size numDimensions ;$/;"	m	struct:_VlArray
numFeatureBufferSize	.\vlfeat\vl\covdet.c	/^  vl_size numFeatureBufferSize ;$/;"	m	struct:_VlCovDet	file:
numFeatures	.\vlfeat\vl\covdet.c	/^  vl_size numFeatures ;$/;"	m	struct:_VlCovDet	file:
numFeaturesWithNumScales	.\vlfeat\vl\covdet.c	/^  vl_size numFeaturesWithNumScales [VL_COVDET_MAX_NUM_LAPLACIAN_SCALES + 1] ;$/;"	m	struct:_VlCovDet	file:
numFrameAlloc	.\vlfeat\vl\dsift.h	/^  int numFrameAlloc ;      \/**< buffer allocated: number of frames  *\/$/;"	m	struct:VlDsiftFilter_
numFrames	.\vlfeat\vl\dsift.h	/^  int numFrames ;          \/**< number of sampled frames *\/$/;"	m	struct:VlDsiftFilter_
numGradAlloc	.\vlfeat\vl\dsift.h	/^  int numGradAlloc ;       \/**< buffer allocated: number of orientations *\/$/;"	m	struct:VlDsiftFilter_
numNeighbours	.\vlfeat\vl\liop.h	/^  vl_int numNeighbours; \/**< Number of neighbours. *\/$/;"	m	struct:_VlLiopDesc
numNodes	.\vlfeat\src\test_heap-def.c	/^  vl_size numNodes ;$/;"	m	struct:_H	file:
numNonExtremaSuppressed	.\vlfeat\vl\covdet.c	/^  vl_size numNonExtremaSuppressed ;$/;"	m	struct:_VlCovDet	file:
numOrientations	.\vlfeat\vl\hog.h	/^  vl_size numOrientations ;$/;"	m	struct:VlHog_
numRepetitions	.\vlfeat\vl\gmm.c	/^  vl_size numRepetitions   ;          \/**< Number of clustering repetitions. *\/$/;"	m	struct:_VlGMM	file:
numRepetitions	.\vlfeat\vl\kmeans.h	/^  vl_size numRepetitions ;                \/**< Number of clustering repetitions. *\/$/;"	m	struct:_VlKMeans
numSearchers	.\vlfeat\vl\kdtree.h	/^  vl_size numSearchers;$/;"	m	struct:_VlKDForest
numSpatialBins	.\vlfeat\vl\liop.h	/^  vl_int numSpatialBins; \/**< Number of bins. *\/$/;"	m	struct:_VlLiopDesc
numSubdivisions	.\vlfeat\vl\homkermap.c	/^  vl_size numSubdivisions ;$/;"	m	struct:_VlHomogeneousKernelMap	file:
numThreads	.\vlfeat\vl\generic.c	/^  vl_size numThreads ;$/;"	m	struct:_VlState	file:
numTrees	.\vlfeat\vl\kdtree.h	/^  vl_size numTrees ;$/;"	m	struct:_VlKDForest
numTrees	.\vlfeat\vl\kmeans.h	/^  vl_size numTrees ;                      \/**< Number of trees in forest when using ANN-kmeans. *\/$/;"	m	struct:_VlKMeans
numUsedNodes	.\vlfeat\vl\kdtree.h	/^  vl_size numUsedNodes ;$/;"	m	struct:_VlKDTree
num_abs_unstable	.\vlfeat\vl\mser.h	/^  int num_abs_unstable ;  \/**< number of regions that failed the absolute stability test *\/$/;"	m	struct:_VlMserStats
num_duplicates	.\vlfeat\vl\mser.h	/^  int num_duplicates ;    \/**< number of regions that failed the duplicate test          *\/$/;"	m	struct:_VlMserStats
num_extremal	.\vlfeat\vl\mser.h	/^  int num_extremal ;      \/**< number of extremal regions                                *\/$/;"	m	struct:_VlMserStats
num_too_big	.\vlfeat\vl\mser.h	/^  int num_too_big ;       \/**< number of regions that failed the maximum size test       *\/$/;"	m	struct:_VlMserStats
num_too_small	.\vlfeat\vl\mser.h	/^  int num_too_small ;     \/**< number of regions that failed the minimum size test       *\/$/;"	m	struct:_VlMserStats
num_unstable	.\vlfeat\vl\mser.h	/^  int num_unstable ;      \/**< number of unstable extremal regions                       *\/$/;"	m	struct:_VlMserStats
numder	.\vlfeat\toolbox\noprefix\numder.m	/^function varargout = numder(varargin)$/;"	f
numder2	.\vlfeat\toolbox\noprefix\numder2.m	/^function varargout = numder2(varargin)$/;"	f
nvalues	.\vlfeat\vl\aib.h	/^  vl_uint    nvalues;   \/**< Number of feature values *\/$/;"	m	struct:_VlAIB
nwhich	.\vlfeat\vl\aib.h	/^  vl_uint    nwhich ;   \/**< Number of entries to update *\/$/;"	m	struct:_VlAIB
o	.\vlfeat\vl\sift.h	/^  int o ;           \/**< o coordinate (octave). *\/$/;"	m	struct:_VlSiftKeypoint
o_cur	.\vlfeat\vl\sift.h	/^  int o_cur ;           \/**< current octave. *\/$/;"	m	struct:_VlSiftFilt
o_min	.\vlfeat\vl\sift.h	/^  int o_min ;           \/**< minimum octave index. *\/$/;"	m	struct:_VlSiftFilt
obj	.\vlfeat\toolbox\xtest\vl_test_svmtrain.m	/^function o = obj(s, w, b)$/;"	f
objdir	.\vlfeat\Makefile.mak	/^objdir = $(bindir)\\objs$/;"	m
objective	.\vlfeat\vl\svm.h	/^  double objective ;            \/**< Objective function value. *\/$/;"	m	struct:VlSvmStatistics_
octave	.\vlfeat\vl\sift.h	/^  vl_sift_pix *octave ; \/**< current GSS data. *\/$/;"	m	struct:_VlSiftFilt
octaveFirstSubdivision	.\vlfeat\vl\scalespace.h	/^  vl_index octaveFirstSubdivision ; \/**< Index of the first octave subdivision *\/$/;"	m	struct:_VlScaleSpaceGeometry
octaveLastSubdivision	.\vlfeat\vl\scalespace.h	/^  vl_index octaveLastSubdivision ; \/**< Index of the last octave subdivision *\/$/;"	m	struct:_VlScaleSpaceGeometry
octaveResolution	.\vlfeat\vl\covdet.c	/^  vl_size octaveResolution ; \/**< resolution of each octave. *\/$/;"	m	struct:_VlCovDet	file:
octaveResolution	.\vlfeat\vl\scalespace.h	/^  vl_size octaveResolution ; \/**< Number of octave subdivisions *\/$/;"	m	struct:_VlScaleSpaceGeometry
octave_height	.\vlfeat\vl\sift.h	/^  int octave_height ;   \/**< current octave height. *\/$/;"	m	struct:_VlSiftFilt
octave_mex_dep	.\vlfeat\make\octave.mak	/^octave_mex_dep := $(octave_mex_tgt:.$(OCTAVE_MEX_SUFFIX)=.d)$/;"	m
octave_mex_dll	.\vlfeat\make\octave.mak	/^octave_mex_dll := $(OCTAVE_MEX_BINDIR)\/lib$(DLL_NAME).$(DLL_SUFFIX)$/;"	m
octave_mex_src	.\vlfeat\make\octave.mak	/^octave_mex_src := $(shell find $(VLDIR)\/toolbox -name "*.c")$/;"	m
octave_mex_tgt	.\vlfeat\make\octave.mak	/^octave_mex_tgt := $(addprefix $(OCTAVE_MEX_BINDIR)\/,\\$/;"	m
octave_width	.\vlfeat\vl\sift.h	/^  int octave_width ;    \/**< current octave width. *\/$/;"	m	struct:_VlSiftFilt
octaves	.\vlfeat\vl\scalespace.c	/^  float **octaves ; \/**< Data *\/$/;"	m	struct:_VlScaleSpace	file:
open	.\vlfeat\docsrc\webdoc.py	/^    def open(self, filePath):$/;"	m	class:Generator
opt_CHI2	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_CHI2,$/;"	e	enum:__anon18	file:
opt_CHI2	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_CHI2,$/;"	e	enum:__anon19	file:
opt_HELL	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_HELL,$/;"	e	enum:__anon18	file:
opt_HELL	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_HELL,$/;"	e	enum:__anon19	file:
opt_JS	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_JS,$/;"	e	enum:__anon18	file:
opt_KCHI2	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_KCHI2,$/;"	e	enum:__anon18	file:
opt_KCHI2	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_KCHI2,$/;"	e	enum:__anon19	file:
opt_KCHI2	.\vlfeat\toolbox\misc\vl_homkermap.c	/^  opt_KCHI2,$/;"	e	enum:__anon21	file:
opt_KHELL	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_KHELL,$/;"	e	enum:__anon18	file:
opt_KHELL	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_KHELL,$/;"	e	enum:__anon19	file:
opt_KINTERS	.\vlfeat\toolbox\misc\vl_homkermap.c	/^  opt_KINTERS,$/;"	e	enum:__anon21	file:
opt_KJS	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_KJS$/;"	e	enum:__anon18	file:
opt_KJS	.\vlfeat\toolbox\misc\vl_homkermap.c	/^  opt_KJS,$/;"	e	enum:__anon21	file:
opt_KL1	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_KL1,$/;"	e	enum:__anon18	file:
opt_KL1	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_KL1,$/;"	e	enum:__anon19	file:
opt_KL1	.\vlfeat\toolbox\misc\vl_homkermap.c	/^  opt_KL1,$/;"	e	enum:__anon21	file:
opt_KL2	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_KL2,$/;"	e	enum:__anon18	file:
opt_KL2	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_KL2,$/;"	e	enum:__anon19	file:
opt_L0	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_L0,$/;"	e	enum:__anon18	file:
opt_L0	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_L0,$/;"	e	enum:__anon19	file:
opt_L1	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_L1,$/;"	e	enum:__anon18	file:
opt_L1	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_L1,$/;"	e	enum:__anon19	file:
opt_L2	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_L2,$/;"	e	enum:__anon18	file:
opt_L2	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_L2,$/;"	e	enum:__anon19	file:
opt_LINF	.\vlfeat\toolbox\misc\vl_alldist.c	/^  opt_LINF,$/;"	e	enum:__anon18	file:
opt_LINF	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_LINF,$/;"	e	enum:__anon19	file:
opt_MIN	.\vlfeat\toolbox\misc\vl_alldist2.c	/^  opt_MIN$/;"	e	enum:__anon19	file:
opt_algorithm	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  opt_algorithm,$/;"	e	enum:__anon16	file:
opt_bias	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_bias,$/;"	e	enum:__anon25	file:
opt_bias_learning_rate	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_bias_learning_rate$/;"	e	enum:__anon25	file:
opt_bias_multiplier	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_bias_multiplier,$/;"	e	enum:__anon25	file:
opt_bilinear_orientations	.\vlfeat\toolbox\misc\vl_hog.c	/^  opt_bilinear_orientations$/;"	e	enum:__anon20	file:
opt_bounds	.\vlfeat\toolbox\sift\vl_dsift.c	/^  opt_bounds,$/;"	e	enum:__anon30	file:
opt_bright	.\vlfeat\src\mser.c	/^  opt_bright,$/;"	e	enum:__anon1	file:
opt_bright_on_dark	.\vlfeat\toolbox\mser\vl_mser.c	/^  opt_bright_on_dark,$/;"	e	enum:__anon27	file:
opt_cluster_null	.\vlfeat\toolbox\aib\vl_aib.c	/^  opt_cluster_null = 0,$/;"	e	enum:__anon3	file:
opt_covariance_bound	.\vlfeat\toolbox\gmm\vl_gmm.c	/^  opt_covariance_bound$/;"	e	enum:__anon9	file:
opt_covariances	.\vlfeat\toolbox\gmm\vl_gmm.c	/^  opt_covariances,$/;"	e	enum:__anon9	file:
opt_dark	.\vlfeat\src\mser.c	/^  opt_dark$/;"	e	enum:__anon1	file:
opt_dark_on_bright	.\vlfeat\toolbox\mser\vl_mser.c	/^  opt_dark_on_bright,$/;"	e	enum:__anon27	file:
opt_delta	.\vlfeat\toolbox\mser\vl_mser.c	/^  opt_delta = 0,$/;"	e	enum:__anon27	file:
opt_descriptor	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_descriptor,$/;"	e	enum:__anon29	file:
opt_descriptors	.\vlfeat\src\sift.c	/^  opt_descriptors,$/;"	e	enum:__anon2	file:
opt_diagnostic_frequency	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_diagnostic_frequency,$/;"	e	enum:__anon25	file:
opt_diagnostic_function	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_diagnostic_function,$/;"	e	enum:__anon25	file:
opt_directed_polar_field	.\vlfeat\toolbox\misc\vl_hog.c	/^  opt_directed_polar_field,$/;"	e	enum:__anon20	file:
opt_distance	.\vlfeat\toolbox\gmm\vl_gmm.c	/^  opt_distance,$/;"	e	enum:__anon9	file:
opt_distance	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  opt_distance,$/;"	e	enum:__anon16	file:
opt_distance	.\vlfeat\toolbox\misc\vl_kdtreebuild.c	/^  opt_verbose, opt_threshold_method, opt_num_trees, opt_distance$/;"	e	enum:__anon23	file:
opt_double_image	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_double_image,$/;"	e	enum:__anon29	file:
opt_edge_thresh	.\vlfeat\src\sift.c	/^  opt_edge_thresh,$/;"	e	enum:__anon2	file:
opt_edge_thresh	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_edge_thresh,$/;"	e	enum:__anon32	file:
opt_edge_threshold	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_edge_threshold,$/;"	e	enum:__anon29	file:
opt_epsilon	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_epsilon,$/;"	e	enum:__anon25	file:
opt_estimate_affine_shape	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_estimate_affine_shape,$/;"	e	enum:__anon29	file:
opt_estimate_orientation	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_estimate_orientation,$/;"	e	enum:__anon29	file:
opt_fast	.\vlfeat\toolbox\fisher\vl_fisher.c	/^  opt_fast$/;"	e	enum:__anon4	file:
opt_fast	.\vlfeat\toolbox\sift\vl_dsift.c	/^  opt_fast,$/;"	e	enum:__anon30	file:
opt_first_octave	.\vlfeat\src\sift.c	/^  opt_first_octave,$/;"	e	enum:__anon2	file:
opt_first_octave	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_first_octave,$/;"	e	enum:__anon32	file:
opt_float_descriptors	.\vlfeat\toolbox\sift\vl_dsift.c	/^  opt_float_descriptors,$/;"	e	enum:__anon30	file:
opt_float_descriptors	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_float_descriptors,$/;"	e	enum:__anon32	file:
opt_float_descriptors	.\vlfeat\toolbox\sift\vl_siftdescriptor.c	/^  opt_float_descriptors,$/;"	e	enum:__anon33	file:
opt_frame	.\vlfeat\src\mser.c	/^  opt_frame,$/;"	e	enum:__anon1	file:
opt_frames	.\vlfeat\src\sift.c	/^  opt_frames,$/;"	e	enum:__anon2	file:
opt_frames	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_frames,$/;"	e	enum:__anon29	file:
opt_frames	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_frames,$/;"	e	enum:__anon32	file:
opt_gamma	.\vlfeat\toolbox\misc\vl_homkermap.c	/^  opt_gamma,$/;"	e	enum:__anon21	file:
opt_geometry	.\vlfeat\toolbox\sift\vl_dsift.c	/^  opt_geometry,$/;"	e	enum:__anon30	file:
opt_gss	.\vlfeat\src\sift.c	/^  opt_gss,$/;"	e	enum:__anon2	file:
opt_improved	.\vlfeat\toolbox\fisher\vl_fisher.c	/^  opt_improved,$/;"	e	enum:__anon4	file:
opt_initialization	.\vlfeat\toolbox\gmm\vl_gmm.c	/^  opt_initialization,$/;"	e	enum:__anon9	file:
opt_initialization	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  opt_initialization,$/;"	e	enum:__anon16	file:
opt_intensity_threshold	.\vlfeat\toolbox\sift\vl_liop.c	/^  opt_intensity_threshold,$/;"	e	enum:__anon31	file:
opt_kernel	.\vlfeat\toolbox\imop\vl_imsmooth.c	/^  opt_kernel,$/;"	e	enum:__anon10	file:
opt_kernel	.\vlfeat\toolbox\misc\vl_homkermap.c	/^  opt_kernel,$/;"	e	enum:__anon21	file:
opt_laplacian_peak_threshold	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_laplacian_peak_threshold,$/;"	e	enum:__anon29	file:
opt_levels	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_levels,$/;"	e	enum:__anon32	file:
opt_liop_bins	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_liop_bins,$/;"	e	enum:__anon29	file:
opt_liop_neighbours	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_liop_neighbours,$/;"	e	enum:__anon29	file:
opt_liop_radius	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_liop_radius,$/;"	e	enum:__anon29	file:
opt_liop_threshold	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_liop_threshold,$/;"	e	enum:__anon29	file:
opt_loss	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_loss,$/;"	e	enum:__anon25	file:
opt_magnif	.\vlfeat\src\sift.c	/^  opt_magnif,$/;"	e	enum:__anon2	file:
opt_magnif	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_magnif,$/;"	e	enum:__anon32	file:
opt_magnif	.\vlfeat\toolbox\sift\vl_siftdescriptor.c	/^  opt_magnif,$/;"	e	enum:__anon33	file:
opt_mass	.\vlfeat\toolbox\misc\vl_inthist.c	/^enum {opt_mass = 1, opt_numLabels, opt_verbose} ;$/;"	e	enum:__anon22	file:
opt_max_area	.\vlfeat\src\mser.c	/^  opt_max_area,$/;"	e	enum:__anon1	file:
opt_max_area	.\vlfeat\toolbox\mser\vl_mser.c	/^  opt_max_area,$/;"	e	enum:__anon27	file:
opt_max_niters	.\vlfeat\toolbox\kmeans\vl_hikmeans.c	/^  opt_max_niters,$/;"	e	enum:__anon12	file:
opt_max_niters	.\vlfeat\toolbox\kmeans\vl_ikmeans.c	/^  opt_max_niters,$/;"	e	enum:__anon14	file:
opt_max_num_comparisons	.\vlfeat\toolbox\misc\vl_kdtreequery.c	/^  opt_verbose, opt_num_neighs, opt_max_num_comparisons, opt_multithreading$/;"	e	enum:__anon24	file:
opt_max_num_iterations	.\vlfeat\toolbox\gmm\vl_gmm.c	/^  opt_max_num_iterations,$/;"	e	enum:__anon9	file:
opt_max_num_iterations	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  opt_max_num_iterations,$/;"	e	enum:__anon16	file:
opt_max_num_iterations	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_max_num_iterations,$/;"	e	enum:__anon25	file:
opt_max_variation	.\vlfeat\src\mser.c	/^  opt_max_variation,$/;"	e	enum:__anon1	file:
opt_max_variation	.\vlfeat\toolbox\mser\vl_mser.c	/^  opt_max_variation,$/;"	e	enum:__anon27	file:
opt_means	.\vlfeat\toolbox\gmm\vl_gmm.c	/^  opt_means,$/;"	e	enum:__anon9	file:
opt_medoid	.\vlfeat\toolbox\quickshift\vl_quickshift.c	/^  opt_medoid,$/;"	e	enum:__anon28	file:
opt_meta	.\vlfeat\src\mser.c	/^  opt_meta,$/;"	e	enum:__anon1	file:
opt_meta	.\vlfeat\src\sift.c	/^  opt_meta = 1000,$/;"	e	enum:__anon2	file:
opt_method	.\vlfeat\toolbox\kmeans\vl_hikmeans.c	/^  opt_method,$/;"	e	enum:__anon12	file:
opt_method	.\vlfeat\toolbox\kmeans\vl_hikmeanspush.c	/^  opt_method,$/;"	e	enum:__anon13	file:
opt_method	.\vlfeat\toolbox\kmeans\vl_ikmeans.c	/^  opt_method,$/;"	e	enum:__anon14	file:
opt_method	.\vlfeat\toolbox\kmeans\vl_ikmeanspush.c	/^  opt_method,$/;"	e	enum:__anon15	file:
opt_method	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_method = 0,$/;"	e	enum:__anon29	file:
opt_min_area	.\vlfeat\src\mser.c	/^  opt_min_area,$/;"	e	enum:__anon1	file:
opt_min_area	.\vlfeat\toolbox\mser\vl_mser.c	/^  opt_min_area,$/;"	e	enum:__anon27	file:
opt_min_diversity	.\vlfeat\src\mser.c	/^  opt_min_diversity,$/;"	e	enum:__anon1	file:
opt_min_diversity	.\vlfeat\toolbox\mser\vl_mser.c	/^  opt_min_diversity,$/;"	e	enum:__anon27	file:
opt_min_energy_variation	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  opt_min_energy_variation,$/;"	e	enum:__anon16	file:
opt_min_segment_size	.\vlfeat\toolbox\slic\vl_slic.c	/^  opt_min_segment_size$/;"	e	enum:__anon35	file:
opt_model	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_model,$/;"	e	enum:__anon25	file:
opt_multithreading	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  opt_multithreading$/;"	e	enum:__anon16	file:
opt_multithreading	.\vlfeat\toolbox\misc\vl_kdtreequery.c	/^  opt_verbose, opt_num_neighs, opt_max_num_comparisons, opt_multithreading$/;"	e	enum:__anon24	file:
opt_norm	.\vlfeat\toolbox\sift\vl_dsift.c	/^  opt_norm,$/;"	e	enum:__anon30	file:
opt_norm_thresh	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_norm_thresh,$/;"	e	enum:__anon32	file:
opt_norm_thresh	.\vlfeat\toolbox\sift\vl_siftdescriptor.c	/^  opt_norm_thresh,$/;"	e	enum:__anon33	file:
opt_normalize_components	.\vlfeat\toolbox\vlad\vl_vlad.c	/^  opt_normalize_components,$/;"	e	enum:__anon36	file:
opt_normalize_mass	.\vlfeat\toolbox\vlad\vl_vlad.c	/^  opt_normalize_mass$/;"	e	enum:__anon36	file:
opt_normalized	.\vlfeat\toolbox\fisher\vl_fisher.c	/^  opt_normalized,$/;"	e	enum:__anon4	file:
opt_numLabels	.\vlfeat\toolbox\misc\vl_inthist.c	/^enum {opt_mass = 1, opt_numLabels, opt_verbose} ;$/;"	e	enum:__anon22	file:
opt_num_comparisons	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  opt_num_comparisons,$/;"	e	enum:__anon16	file:
opt_num_neighbours	.\vlfeat\toolbox\sift\vl_liop.c	/^  opt_num_neighbours,$/;"	e	enum:__anon31	file:
opt_num_neighs	.\vlfeat\toolbox\misc\vl_kdtreequery.c	/^  opt_verbose, opt_num_neighs, opt_max_num_comparisons, opt_multithreading$/;"	e	enum:__anon24	file:
opt_num_orientations	.\vlfeat\toolbox\misc\vl_hog.c	/^  opt_num_orientations,$/;"	e	enum:__anon20	file:
opt_num_repetitions	.\vlfeat\toolbox\gmm\vl_gmm.c	/^  opt_num_repetitions,$/;"	e	enum:__anon9	file:
opt_num_repetitions	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  opt_num_repetitions,$/;"	e	enum:__anon16	file:
opt_num_spatial_bins	.\vlfeat\toolbox\sift\vl_liop.c	/^  opt_num_spatial_bins,$/;"	e	enum:__anon31	file:
opt_num_trees	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  opt_num_trees,$/;"	e	enum:__anon16	file:
opt_num_trees	.\vlfeat\toolbox\misc\vl_kdtreebuild.c	/^  opt_verbose, opt_threshold_method, opt_num_trees, opt_distance$/;"	e	enum:__anon23	file:
opt_octave_resolution	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_octave_resolution,$/;"	e	enum:__anon29	file:
opt_octaves	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_octaves = 0,$/;"	e	enum:__anon32	file:
opt_orientations	.\vlfeat\src\sift.c	/^  opt_orientations$/;"	e	enum:__anon2	file:
opt_orientations	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_orientations,$/;"	e	enum:__anon32	file:
opt_padding	.\vlfeat\toolbox\imop\vl_imsmooth.c	/^  opt_padding = 0,$/;"	e	enum:__anon10	file:
opt_patch_relative_extent	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_patch_relative_extent,$/;"	e	enum:__anon29	file:
opt_patch_relative_smoothing	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_patch_relative_smoothing,$/;"	e	enum:__anon29	file:
opt_patch_resolution	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_patch_resolution,$/;"	e	enum:__anon29	file:
opt_peak_thresh	.\vlfeat\src\sift.c	/^  opt_peak_thresh,$/;"	e	enum:__anon2	file:
opt_peak_thresh	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_peak_thresh,$/;"	e	enum:__anon32	file:
opt_peak_threshold	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_peak_threshold,$/;"	e	enum:__anon29	file:
opt_period	.\vlfeat\toolbox\misc\vl_homkermap.c	/^  opt_period,$/;"	e	enum:__anon21	file:
opt_priors	.\vlfeat\toolbox\gmm\vl_gmm.c	/^  opt_priors,$/;"	e	enum:__anon9	file:
opt_radius	.\vlfeat\toolbox\sift\vl_liop.c	/^  opt_radius,$/;"	e	enum:__anon31	file:
opt_read_frames	.\vlfeat\src\sift.c	/^  opt_read_frames,$/;"	e	enum:__anon2	file:
opt_seed	.\vlfeat\src\mser.c	/^  opt_seed    = 1000,$/;"	e	enum:__anon1	file:
opt_size	.\vlfeat\toolbox\sift\vl_dsift.c	/^  opt_size,$/;"	e	enum:__anon30	file:
opt_solver	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_solver,$/;"	e	enum:__anon25	file:
opt_square_root	.\vlfeat\toolbox\fisher\vl_fisher.c	/^  opt_square_root,$/;"	e	enum:__anon4	file:
opt_square_root	.\vlfeat\toolbox\vlad\vl_vlad.c	/^  opt_square_root,$/;"	e	enum:__anon36	file:
opt_starting_iteration	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_starting_iteration,$/;"	e	enum:__anon25	file:
opt_step	.\vlfeat\toolbox\sift\vl_dsift.c	/^  opt_step = 0,$/;"	e	enum:__anon30	file:
opt_subsample	.\vlfeat\toolbox\imop\vl_imsmooth.c	/^  opt_subsample,$/;"	e	enum:__anon10	file:
opt_threshold_method	.\vlfeat\toolbox\misc\vl_kdtreebuild.c	/^  opt_verbose, opt_threshold_method, opt_num_trees, opt_distance$/;"	e	enum:__anon23	file:
opt_undirected_polar_field	.\vlfeat\toolbox\misc\vl_hog.c	/^  opt_undirected_polar_field,$/;"	e	enum:__anon20	file:
opt_unnormalized	.\vlfeat\toolbox\vlad\vl_vlad.c	/^  opt_unnormalized,$/;"	e	enum:__anon36	file:
opt_validation_subset	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_validation_subset,$/;"	e	enum:__anon25	file:
opt_variant	.\vlfeat\toolbox\misc\vl_hog.c	/^  opt_verbose, opt_variant,$/;"	e	enum:__anon20	file:
opt_verbose	.\vlfeat\toolbox\aib\vl_aib.c	/^  opt_verbose$/;"	e	enum:__anon3	file:
opt_verbose	.\vlfeat\toolbox\fisher\vl_fisher.c	/^  opt_verbose,$/;"	e	enum:__anon4	file:
opt_verbose	.\vlfeat\toolbox\gmm\vl_gmm.c	/^  opt_verbose,$/;"	e	enum:__anon9	file:
opt_verbose	.\vlfeat\toolbox\imop\vl_imsmooth.c	/^  opt_verbose$/;"	e	enum:__anon10	file:
opt_verbose	.\vlfeat\toolbox\kmeans\vl_hikmeans.c	/^  opt_verbose$/;"	e	enum:__anon12	file:
opt_verbose	.\vlfeat\toolbox\kmeans\vl_hikmeanspush.c	/^  opt_verbose$/;"	e	enum:__anon13	file:
opt_verbose	.\vlfeat\toolbox\kmeans\vl_ikmeans.c	/^  opt_verbose$/;"	e	enum:__anon14	file:
opt_verbose	.\vlfeat\toolbox\kmeans\vl_ikmeanspush.c	/^  opt_verbose$/;"	e	enum:__anon15	file:
opt_verbose	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^  opt_verbose,$/;"	e	enum:__anon16	file:
opt_verbose	.\vlfeat\toolbox\misc\vl_hog.c	/^  opt_verbose, opt_variant,$/;"	e	enum:__anon20	file:
opt_verbose	.\vlfeat\toolbox\misc\vl_inthist.c	/^enum {opt_mass = 1, opt_numLabels, opt_verbose} ;$/;"	e	enum:__anon22	file:
opt_verbose	.\vlfeat\toolbox\misc\vl_kdtreebuild.c	/^  opt_verbose, opt_threshold_method, opt_num_trees, opt_distance$/;"	e	enum:__anon23	file:
opt_verbose	.\vlfeat\toolbox\misc\vl_kdtreequery.c	/^  opt_verbose, opt_num_neighs, opt_max_num_comparisons, opt_multithreading$/;"	e	enum:__anon24	file:
opt_verbose	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_verbose,$/;"	e	enum:__anon25	file:
opt_verbose	.\vlfeat\toolbox\misc\vl_version.c	/^  opt_verbose$/;"	e	enum:__anon26	file:
opt_verbose	.\vlfeat\toolbox\mser\vl_mser.c	/^  opt_verbose$/;"	e	enum:__anon27	file:
opt_verbose	.\vlfeat\toolbox\quickshift\vl_quickshift.c	/^  opt_verbose$/;"	e	enum:__anon28	file:
opt_verbose	.\vlfeat\toolbox\sift\vl_covdet.c	/^  opt_verbose$/;"	e	enum:__anon29	file:
opt_verbose	.\vlfeat\toolbox\sift\vl_dsift.c	/^  opt_verbose$/;"	e	enum:__anon30	file:
opt_verbose	.\vlfeat\toolbox\sift\vl_liop.c	/^  opt_verbose$/;"	e	enum:__anon31	file:
opt_verbose	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_verbose$/;"	e	enum:__anon32	file:
opt_verbose	.\vlfeat\toolbox\sift\vl_siftdescriptor.c	/^  opt_verbose$/;"	e	enum:__anon33	file:
opt_verbose	.\vlfeat\toolbox\slic\vl_slic.c	/^  opt_verbose,$/;"	e	enum:__anon35	file:
opt_verbose	.\vlfeat\toolbox\vlad\vl_vlad.c	/^  opt_verbose,$/;"	e	enum:__anon36	file:
opt_weights	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  opt_weights,$/;"	e	enum:__anon25	file:
opt_window	.\vlfeat\toolbox\misc\vl_homkermap.c	/^  opt_window$/;"	e	enum:__anon21	file:
opt_window_size	.\vlfeat\toolbox\sift\vl_dsift.c	/^  opt_window_size,$/;"	e	enum:__anon30	file:
opt_window_size	.\vlfeat\toolbox\sift\vl_sift.c	/^  opt_window_size,$/;"	e	enum:__anon32	file:
optarg	.\vlfeat\vl\getopt_long.c	/^char * optarg ;$/;"	v
optarg	.\vlfeat\vl\getopt_long.h	/^VL_EXPORT char * optarg ;   \/**< argument of the current option *\/$/;"	v
opterr	.\vlfeat\vl\getopt_long.c	/^int    opterr = 1 ;$/;"	v
opterr	.\vlfeat\vl\getopt_long.h	/^VL_EXPORT int    opterr ;   \/**< code of the last error occured while parsing an option *\/$/;"	v
optind	.\vlfeat\vl\getopt_long.c	/^int    optind = 1 ;$/;"	v
optind	.\vlfeat\vl\getopt_long.h	/^VL_EXPORT int    optind ;   \/**< index of the next option to process in @c argv *\/$/;"	v
option	.\vlfeat\vl\getopt_long.h	/^struct option$/;"	s
optional_argument	.\vlfeat\vl\getopt_long.h	36;"	d
options	.\vlfeat\toolbox\aib\vl_aib.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\fisher\vl_fisher.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\gmm\vl_gmm.c	/^vlmxOption  options [] =$/;"	v
options	.\vlfeat\toolbox\imop\vl_imsmooth.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\kmeans\vl_hikmeans.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\kmeans\vl_hikmeanspush.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\kmeans\vl_ikmeans.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\kmeans\vl_ikmeanspush.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\kmeans\vl_kmeans.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\misc\vl_alldist.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\misc\vl_alldist2.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\misc\vl_hog.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\misc\vl_homkermap.c	/^vlmxOption options [] = {$/;"	v
options	.\vlfeat\toolbox\misc\vl_inthist.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\misc\vl_kdtreebuild.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\misc\vl_kdtreequery.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\misc\vl_version.c	/^vlmxOption options [] = {$/;"	v
options	.\vlfeat\toolbox\mser\vl_mser.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\quickshift\vl_quickshift.c	/^vlmxOption options [] = {$/;"	v
options	.\vlfeat\toolbox\sift\vl_covdet.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\sift\vl_dsift.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\sift\vl_liop.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\sift\vl_sift.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\sift\vl_siftdescriptor.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\slic\vl_slic.c	/^vlmxOption  options [] = {$/;"	v
options	.\vlfeat\toolbox\vlad\vl_vlad.c	/^vlmxOption  options [] = {$/;"	v
optopt	.\vlfeat\vl\getopt_long.c	/^int    optopt ;$/;"	v
optopt	.\vlfeat\vl\getopt_long.h	/^VL_EXPORT int    optopt ;   \/**< current option *\/$/;"	v
optreset	.\vlfeat\vl\getopt_long.c	/^int    optreset ;$/;"	v
optreset	.\vlfeat\vl\getopt_long.h	/^VL_EXPORT int    optreset ; \/**< reset flag *\/$/;"	v
opts	.\vlfeat\src\mser.c	/^char const opts [] = "vhd:" ;$/;"	v
opts	.\vlfeat\src\sift.c	/^char const opts [] = "vhO:S:o:" ;$/;"	v
order	.\vlfeat\vl\homkermap.c	/^  vl_size order ;$/;"	m	struct:_VlHomogeneousKernelMap	file:
orientationScore	.\vlfeat\vl\covdet.h	/^  float orientationScore ; \/**< orientation score. *\/$/;"	m	struct:_VlCovDetFeature
orientationX	.\vlfeat\vl\hog.h	/^  float * orientationX ;$/;"	m	struct:VlHog_
orientationY	.\vlfeat\vl\hog.h	/^  float * orientationY ;$/;"	m	struct:VlHog_
orientations	.\vlfeat\vl\covdet.c	/^  VlCovDetFeatureOrientation orientations [VL_COVDET_MAX_NUM_ORIENTATIONS] ;$/;"	m	struct:_VlCovDet	file:
os	.\vlfeat\docsrc\doxytag.py	/^import os$/;"	i
os	.\vlfeat\docsrc\formatter.py	/^import os$/;"	i
os	.\vlfeat\docsrc\mdoc.py	/^import sys, os, re, shutil$/;"	i
os	.\vlfeat\docsrc\webdoc.py	/^import os$/;"	i
os	.\vlfeat\docsrc\wikidoc.py	/^import sys,os$/;"	i
override	.\vlfeat\toolbox\noprefix\override.m	/^function varargout = override(varargin)$/;"	f
ownDataset	.\vlfeat\vl\svm.c	/^  VlSvmDataset * ownDataset ;   \/**< Optional owned dataset. *\/$/;"	m	struct:VlSvm_	file:
parent	.\vlfeat\vl\kdtree.h	/^  vl_uindex parent ;$/;"	m	struct:_VlKDTreeNode
parent	.\vlfeat\vl\mser.h	/^  int          parent ;     \/**< index of the parent region                   *\/$/;"	m	struct:_VlMserExtrReg
parent	.\vlfeat\vl\mser.h	/^  vl_uint parent ;   \/**< points to the parent region.            *\/$/;"	m	struct:_VlMserReg
parentDir	.\vlfeat\docsrc\webdoc.py	/^    def parentDir(self):$/;"	m	class:Generator
parents	.\vlfeat\vl\aib.h	/^  vl_uint   *parents;   \/**< Array of parents *\/$/;"	m	struct:_VlAIB
parents	.\vlfeat\vl\quickshift.h	/^  int *parents ;$/;"	m	struct:_VlQS
parse	.\vlfeat\docsrc\webdoc.py	/^from xml.sax         import parse$/;"	i
parseDataset	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^VlSvmDataset * parseDataset(const mxArray * dataset_array)$/;"	f
parse_DI	.\vlfeat\docsrc\formatter.py	/^    def parse_DI(self, indent):$/;"	m	class:Formatter
parse_DIV	.\vlfeat\docsrc\formatter.py	/^    def parse_DIV(self, indent):$/;"	m	class:Formatter
parse_DL	.\vlfeat\docsrc\formatter.py	/^    def parse_DL(self, indent):$/;"	m	class:Formatter
parse_P	.\vlfeat\docsrc\formatter.py	/^    def parse_P(self, indent):$/;"	m	class:Formatter
parse_Terminal	.\vlfeat\docsrc\formatter.py	/^    def parse_Terminal(self, T):$/;"	m	class:Formatter
parse_UL	.\vlfeat\docsrc\formatter.py	/^    def parse_UL(self, indent):$/;"	m	class:Formatter
parse_ULI	.\vlfeat\docsrc\formatter.py	/^    def parse_ULI(self, indent):$/;"	m	class:Formatter
parse_V	.\vlfeat\docsrc\formatter.py	/^    def parse_V(self, indent):$/;"	m	class:Formatter
parser	.\vlfeat\docsrc\mdoc.py	/^parser = OptionParser(usage=usage)$/;"	v
parser	.\vlfeat\docsrc\webdoc.py	/^    parser = OptionParser(usage=usage)$/;"	v
patch	.\vlfeat\vl\covdet.c	/^  float * patch ;$/;"	m	struct:_VlCovDet	file:
patchBufferSize	.\vlfeat\vl\covdet.c	/^  vl_size patchBufferSize ;$/;"	m	struct:_VlCovDet	file:
patchIntensities	.\vlfeat\vl\liop.h	/^  float * patchIntensities ;$/;"	m	struct:_VlLiopDesc
patchPermutation	.\vlfeat\vl\liop.h	/^  vl_uindex * patchPermutation ;$/;"	m	struct:_VlLiopDesc
patchPixels	.\vlfeat\vl\liop.h	/^  vl_uindex * patchPixels ;$/;"	m	struct:_VlLiopDesc
patchSideLength	.\vlfeat\vl\liop.h	/^  vl_size patchSideLength ;$/;"	m	struct:_VlLiopDesc
patchSize	.\vlfeat\vl\liop.h	/^  vl_size patchSize ; \/* only circular neighbourhood *\/$/;"	m	struct:_VlLiopDesc
patch_cmp	.\vlfeat\vl\liop.c	/^VL_INLINE float patch_cmp (VlLiopDesc * liop, vl_index i, vl_index j)$/;"	f
patch_swap	.\vlfeat\vl\liop.c	/^VL_INLINE void patch_swap (VlLiopDesc * liop, vl_index i, vl_index j)$/;"	f
pattern	.\vlfeat\src\generic-driver.h	/^  char    pattern [1024] ;  \/**< File name pattern *\/$/;"	m	struct:_VlFileMeta
peakScore	.\vlfeat\vl\covdet.c	/^  float peakScore ;$/;"	m	struct:_VlCovDetExtremum2	file:
peakScore	.\vlfeat\vl\covdet.c	/^  float peakScore ;$/;"	m	struct:_VlCovDetExtremum3	file:
peakScore	.\vlfeat\vl\covdet.h	/^  float peakScore ; \/**< peak score. *\/$/;"	m	struct:_VlCovDetFeature
peakThreshold	.\vlfeat\vl\covdet.c	/^  double peakThreshold ;     \/**< peak threshold. *\/$/;"	m	struct:_VlCovDet	file:
peak_thresh	.\vlfeat\vl\sift.h	/^  double peak_thresh ;  \/**< peak threshold. *\/$/;"	m	struct:_VlSiftFilt
pegasos	.\vlfeat\toolbox\noprefix\pegasos.m	/^function varargout = pegasos(varargin)$/;"	f
period	.\vlfeat\vl\homkermap.c	/^  double period ;$/;"	m	struct:_VlHomogeneousKernelMap	file:
perm	.\vlfeat\vl\mser.h	/^  vl_uint           *perm ;    \/**< pixel ordering                          *\/$/;"	m	struct:_VlMserFilt
permutation	.\vlfeat\vl\hog.h	/^  vl_index * permutation ;$/;"	m	struct:VlHog_
permutation	.\vlfeat\vl\kmeans.c	/^  vl_uint32 * permutation ;$/;"	m	struct:_VlKMeansSortWrapper	file:
pf	.\vlfeat\apps\recognition\experiments.m	/^function pf(str)$/;"	f
ph	.\vlfeat\apps\recognition\experiments.m	/^function ph(varargin)$/;"	f
phow	.\vlfeat\toolbox\noprefix\phow.m	/^function varargout = phow(varargin)$/;"	f
phow_caltech101	.\vlfeat\apps\phow_caltech101.m	/^function phow_caltech101()$/;"	f
plotClusters	.\vlfeat\toolbox\demo\vl_demo_ikmeans.m	/^function plotClusters(data, centers, assignments)$/;"	f
plotbox	.\vlfeat\toolbox\noprefix\plotbox.m	/^function varargout = plotbox(varargin)$/;"	f
plotframe	.\vlfeat\toolbox\noprefix\plotframe.m	/^function varargout = plotframe(varargin)$/;"	f
plotgrid	.\vlfeat\toolbox\noprefix\plotgrid.m	/^function varargout = plotgrid(varargin)$/;"	f
plotpoint	.\vlfeat\toolbox\noprefix\plotpoint.m	/^function varargout = plotpoint(varargin)$/;"	f
plotquantization	.\vlfeat\toolbox\demo\vl_demo_aib.m	/^function [i,j] = plotquantization(D,K,C)$/;"	f
plotsiftdescriptor	.\vlfeat\toolbox\noprefix\plotsiftdescriptor.m	/^function varargout = plotsiftdescriptor(varargin)$/;"	f
plotss	.\vlfeat\toolbox\noprefix\plotss.m	/^function varargout = plotss(varargin)$/;"	f
plotstyle	.\vlfeat\toolbox\noprefix\plotstyle.m	/^function varargout = plotstyle(varargin)$/;"	f
plottree	.\vlfeat\toolbox\demo\vl_demo_aib.m	/^function h = plottree(D,K,parents)$/;"	f
posteriors	.\vlfeat\vl\gmm.c	/^  void *  posteriors;                 \/**< Probabilities of correspondences of points to clusters. *\/$/;"	m	struct:_VlGMM	file:
pr	.\vlfeat\apps\recognition\experiments.m	/^function pr(varargin)$/;"	f
pr	.\vlfeat\toolbox\noprefix\pr.m	/^function varargout = pr(varargin)$/;"	f
previous	.\vlfeat\vl\kdtree.h	/^  struct _VlKDForestSearcher * previous;$/;"	m	struct:_VlKDForestSearcher	typeref:struct:_VlKDForestSearcher::_VlKDForestSearcher
print_matrix	.\vlfeat\src\test_svd2.c	/^print_matrix(char const * name, double *M)$/;"	f
printf_func	.\vlfeat\vl\generic.c	/^  int   (*printf_func)  (char const * format, ...) ;$/;"	m	struct:_VlState	file:
printf_func_t	.\vlfeat\vl\generic.h	/^typedef int(*printf_func_t) (char const *format, ...) ;$/;"	t
printsize	.\vlfeat\toolbox\noprefix\printsize.m	/^function varargout = printsize(varargin)$/;"	f
priors	.\vlfeat\vl\gmm.c	/^  void *  priors;                     \/**< Weights of Gaussian modes. *\/$/;"	m	struct:_VlGMM	file:
processChunk	.\vlfeat\apps\recognition\encodeImage.m	/^function psi = processChunk(encoder, im)$/;"	f
prod2	.\vlfeat\src\test_svd2.c	/^prod2 (double R [4], double A [4], double B [4])$/;"	f
protocol	.\vlfeat\src\generic-driver.h	/^  int     protocol ;        \/**< File protocol *\/$/;"	m	struct:_VlFileMeta
pub-attribs	.\vlfeat\doc\api\structVlAIB.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlCovDetFeature.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlDsiftDescriptorGeometry.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlDsiftFilter.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlDsiftKeypoint.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlEnumerator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlFrameDisc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlFrameEllipse.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlFrameOrientedDisc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlFrameOrientedEllipse.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlHIKMNode.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlHIKMTree.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlIKMFilt.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlKDForestNeighbor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlKMeans.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlLiopDesc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlPgmImage.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlQS.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlScaleSpaceGeometry.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlScaleSpaceOctaveGeometry.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlSiftFilt.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlSiftKeypoint.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structVlSvmStatistics.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\struct__VlCovDet.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\struct__VlFileMeta.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\struct__VlMserExtrReg.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\struct__VlMserFilt.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\struct__VlMserReg.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\struct__VlMserStats.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\struct__vlmxOption.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	.\vlfeat\doc\api\structoption.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self):$/;"	m	class:DocSite
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self, gen, pageNode = None):$/;"	m	class:DocCDATA
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self, gen, pageNode = None):$/;"	m	class:DocCDATAText
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self, gen, pageNode = None):$/;"	m	class:DocCode
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self, gen, pageNode = None):$/;"	m	class:DocHtmlElement
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self, gen, pageNode = None):$/;"	m	class:DocHtmlText
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self, gen, pageNode = None):$/;"	m	class:DocPageScript
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self, gen, pageNode = None):$/;"	m	class:DocPageStyle
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self, generator, pageNode = None): pass$/;"	m	class:DocBareNode
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self, generator, pageNode = None):$/;"	m	class:DocNode
publish	.\vlfeat\docsrc\webdoc.py	/^    def publish(self, generator, pageNode = None):$/;"	m	class:DocPage
publish	.\vlfeat\docsrc\webdoc.py	/^    publish = makeGuard(publish)$/;"	v	class:DocCDATA
publish	.\vlfeat\docsrc\webdoc.py	/^    publish = makeGuard(publish)$/;"	v	class:DocCode
publish	.\vlfeat\docsrc\webdoc.py	/^    publish = makeGuard(publish)$/;"	v	class:DocHtmlElement
publish	.\vlfeat\docsrc\webdoc.py	/^    publish = makeGuard(publish)$/;"	v	class:DocNode
publish	.\vlfeat\docsrc\webdoc.py	/^    publish = makeGuard(publish)$/;"	v	class:DocSite
publishIndex	.\vlfeat\docsrc\webdoc.py	/^    def publishIndex(self, gen, inPage, activePageNodes, full=False): return False$/;"	m	class:DocBareNode
publishIndex	.\vlfeat\docsrc\webdoc.py	/^    def publishIndex(self, gen, inPage, activePageNodes, full=False):$/;"	m	class:DocNode
publishIndex	.\vlfeat\docsrc\webdoc.py	/^    def publishIndex(self, gen, inPage, activePageNodes, full=False):$/;"	m	class:DocPage
publishTableOfContents	.\vlfeat\docsrc\webdoc.py	/^    def publishTableOfContents(self, gen, pageNode):$/;"	m	class:DocNode
putString	.\vlfeat\docsrc\webdoc.py	/^    def putString(self, str):$/;"	m	class:Generator
putXMLAttr	.\vlfeat\docsrc\webdoc.py	/^    def putXMLAttr(self, str):$/;"	m	class:Generator
putXMLString	.\vlfeat\docsrc\webdoc.py	/^    def putXMLString(self, str):$/;"	m	class:Generator
pygments	.\vlfeat\docsrc\webdoc.py	/^    import pygments$/;"	i
pygments	.\vlfeat\docsrc\webdoc.py	/^    import pygments.formatters$/;"	i
pygments	.\vlfeat\docsrc\webdoc.py	/^    import pygments.lexers$/;"	i
quantize	.\vlfeat\toolbox\demo\vl_demo_aib.m	/^function f = quantize(X,D,K)$/;"	f
quickseg	.\vlfeat\toolbox\noprefix\quickseg.m	/^function varargout = quickseg(varargin)$/;"	f
quickshift	.\vlfeat\toolbox\noprefix\quickshift.m	/^function varargout = quickshift(varargin)$/;"	f
quickvis	.\vlfeat\toolbox\noprefix\quickvis.m	/^function varargout = quickvis(varargin)$/;"	f
r	.\vlfeat\vl\mser.h	/^  VlMserReg         *r ;       \/**< basic regions                           *\/$/;"	m	struct:_VlMserFilt
rand	.\vlfeat\vl\generic.c	/^  VlRand rand ;$/;"	m	struct:_VlThreadState	file:
rand	.\vlfeat\vl\kdtree.h	/^  VlRand * rand ;$/;"	m	struct:_VlKDForest
random	.\vlfeat\docsrc\webdoc.py	/^import random$/;"	i
raw	.\vlfeat\vl\mathop.h	/^static union { vl_uint32 raw ; float value ; }$/;"	m	union:__anon40
raw	.\vlfeat\vl\mathop.h	/^static union { vl_uint32 raw ; float value ; }$/;"	m	union:__anon41
raw	.\vlfeat\vl\mathop.h	/^static union { vl_uint64 raw ; double value ; }$/;"	m	union:__anon42
raw	.\vlfeat\vl\mathop.h	/^static union { vl_uint64 raw ; double value ; }$/;"	m	union:__anon43
rb	.\vlfeat\toolbox\imop\vl_tpsu.m	/^function y = rb(r2)$/;"	f
rcos	.\vlfeat\toolbox\noprefix\rcos.m	/^function varargout = rcos(varargin)$/;"	f
re	.\vlfeat\docsrc\doxytag.py	/^import re$/;"	i
re	.\vlfeat\docsrc\formatter.py	/^import re$/;"	i
re	.\vlfeat\docsrc\mdoc.py	/^import sys, os, re, shutil$/;"	i
re	.\vlfeat\docsrc\webdoc.py	/^import re$/;"	i
readImage	.\vlfeat\apps\recognition\readImage.m	/^function [im, scale] = readImage(imagePath)$/;"	f
readflann	.\vlfeat\toolbox\demo\vl_demo_kdtree_sift.m	/^function kdtree = readflann(kdtree, path)$/;"	f
realloc_func	.\vlfeat\vl\generic.c	/^  void *(*realloc_func) (void*,size_t) ;$/;"	m	struct:_VlState	file:
recognition_demo	.\vlfeat\apps\recognition\traintest.m	/^function recognition_demo(varargin)$/;"	f
regularizer	.\vlfeat\vl\svm.h	/^  double regularizer ;          \/**< Regularizer value. *\/$/;"	m	struct:VlSvmStatistics_
rell	.\vlfeat\vl\mser.h	/^  int                rell ;    \/**< size of ell buffer                     *\/$/;"	m	struct:_VlMserFilt
remove_blanks	.\vlfeat\vl\pgm.c	/^remove_blanks(FILE* f)$/;"	f	file:
remove_line	.\vlfeat\vl\pgm.c	/^remove_line(FILE* f)$/;"	f	file:
render_descr	.\vlfeat\toolbox\sift\vl_plotsiftdescriptor.m	/^function [x,y] = render_descr(d, numSpatialBins, numOrientationBins, maxValue)$/;"	f
report_accuracy	.\report_accuracy.m	/^function [tpr, fpr, tnr, fnr] = report_accuracy( confidences, label_vector )$/;"	f
required_argument	.\vlfeat\vl\getopt_long.h	35;"	d
rer	.\vlfeat\vl\mser.h	/^  int                rer ;     \/**< size of er buffer                       *\/$/;"	m	struct:_VlMserFilt
residual	.\vlfeat\apps\sift_mosaic.m	/^function err = residual(H)$/;"	f
resolveEntity	.\vlfeat\docsrc\webdoc.py	/^    def resolveEntity(self, publicid, systemid):$/;"	m	class:DocHandler
restore_parent_recursively	.\vlfeat\toolbox\misc\kdtree.h	/^restore_parent_recursively (VlKDTree * tree, int nodeIndex, int * numNodesToVisit)$/;"	f
rewrite	.\vlfeat\docsrc\formatter.py	/^    def rewrite(self, str):$/;"	m	class:Lexer
rgb2xyz	.\vlfeat\toolbox\noprefix\rgb2xyz.m	/^function varargout = rgb2xyz(varargin)$/;"	f
rmer	.\vlfeat\vl\mser.h	/^  int                rmer ;    \/**< size of mer buffer                      *\/$/;"	m	struct:_VlMserFilt
roc	.\vlfeat\toolbox\noprefix\roc.m	/^function varargout = roc(varargin)$/;"	f
rodr	.\vlfeat\toolbox\noprefix\rodr.m	/^function varargout = rodr(varargin)$/;"	f
root	.\vlfeat\vl\hikmeans.h	/^  VlHIKMNode * root; \/**< Tree root node *\/$/;"	m	struct:_VlHIKMTree
rowPointers	.\vlfeat\vl\array.h	/^  void * rowPointers ;$/;"	m	struct:_VlArray
rsync-doc	.\vlfeat\make\dist.mak	/^rsync-doc = \\$/;"	m
run_experiment	.\vlfeat\toolbox\demo\vl_demo_alldist.m	/^function [elaps, D] = run_experiment(numDimensions, numSamples, settings)$/;"	f
runcmd	.\vlfeat\docsrc\mdoc.py	/^def runcmd(cmd):$/;"	f
s	.\vlfeat\vl\dsift.h	/^  double s ; \/**< scale *\/$/;"	m	struct:VlDsiftKeypoint_
s	.\vlfeat\vl\sift.h	/^  float s ;     \/**< s coordinate. *\/$/;"	m	struct:_VlSiftKeypoint
s_cmp	.\vlfeat\src\test_heap-def.c	/^int s_cmp (S const * v, vl_uindex a, vl_uindex b)$/;"	f
s_max	.\vlfeat\vl\sift.h	/^  int s_max ;           \/**< maximum level index. *\/$/;"	m	struct:_VlSiftFilt
s_min	.\vlfeat\vl\sift.h	/^  int s_min ;           \/**< minimum level index. *\/$/;"	m	struct:_VlSiftFilt
s_swap	.\vlfeat\src\test_heap-def.c	/^void s_swap (S * v, vl_uindex a, vl_uindex b)$/;"	f
sampleinthist	.\vlfeat\toolbox\noprefix\sampleinthist.m	/^function varargout = sampleinthist(varargin)$/;"	f
saveResults	.\vlfeat\src\test_gmm.c	/^void saveResults(const char * dataFileData, const char * dataFileResults, VlGMM * gmm, void * data, vl_size numData)$/;"	f
save_gss	.\vlfeat\src\sift.c	/^save_gss (VlSiftFilt * filt, VlFileMeta * fm, const char * basename,$/;"	f	file:
sax	.\vlfeat\docsrc\webdoc.py	/^import xml.sax$/;"	i
sax	.\vlfeat\docsrc\webdoc.py	/^import xml.sax.saxutils$/;"	i
saxutils	.\vlfeat\docsrc\webdoc.py	/^import xml.sax.saxutils$/;"	i
scale	.\vlfeat\vl\covdet.h	/^  double scale ;$/;"	m	struct:_VlCovDetFeatureLaplacianScale
scales	.\vlfeat\vl\covdet.c	/^  VlCovDetFeatureLaplacianScale scales [VL_COVDET_MAX_NUM_LAPLACIAN_SCALES] ;$/;"	m	struct:_VlCovDet	file:
score	.\vlfeat\toolbox\sift\vl_ubcmatch.c	/^  double score ;$/;"	m	struct:__anon34	file:
score	.\vlfeat\vl\covdet.h	/^  double score ;$/;"	m	struct:_VlCovDetFeatureLaplacianScale
score	.\vlfeat\vl\covdet.h	/^  double score ;$/;"	m	struct:_VlCovDetFeatureOrientation
scores	.\vlfeat\vl\svm.c	/^  double * scores ;$/;"	m	struct:VlSvm_	file:
scoresVariation	.\vlfeat\vl\svm.h	/^  double scoresVariation ;      \/**< Variance of the score updates. *\/$/;"	m	struct:VlSvmStatistics_
screen_dpi	.\vlfeat\make\doc.mak	/^screen_dpi := 95$/;"	m
searchHeapArray	.\vlfeat\vl\kdtree.h	/^  VlKDForestSearchState * searchHeapArray ;$/;"	m	struct:_VlKDForestSearcher
searchHeapNumNodes	.\vlfeat\vl\kdtree.h	/^  vl_size searchHeapNumNodes ;$/;"	m	struct:_VlKDForestSearcher
searchId	.\vlfeat\vl\kdtree.h	/^  vl_uindex searchId ;$/;"	m	struct:_VlKDForestSearcher
searchIdBook	.\vlfeat\vl\kdtree.h	/^  vl_uindex * searchIdBook ;$/;"	m	struct:_VlKDForestSearcher
searchMaxNumComparisons	.\vlfeat\vl\kdtree.h	/^  vl_size searchMaxNumComparisons ;$/;"	m	struct:_VlKDForest
searchNumComparisons	.\vlfeat\vl\kdtree.h	/^  vl_size searchNumComparisons;$/;"	m	struct:_VlKDForestSearcher
searchNumRecursions	.\vlfeat\vl\kdtree.h	/^  vl_size searchNumRecursions ;$/;"	m	struct:_VlKDForestSearcher
searchNumSimplifications	.\vlfeat\vl\kdtree.h	/^  vl_size searchNumSimplifications ;$/;"	m	struct:_VlKDForestSearcher
seek	.\vlfeat\docsrc\formatter.py	/^    def seek(self, pos):$/;"	m	class:Lexer
seek	.\vlfeat\docsrc\webdoc.py	/^    def seek(self, pos):$/;"	m	class:Generator
setDocumentLocator	.\vlfeat\docsrc\webdoc.py	/^    def setDocumentLocator(self, locator):$/;"	m	class:DocHandler
setDoubleValue	.\vlfeat\toolbox\misc\svms_common.h	/^void setDoubleValue(mxArray* array, double value)$/;"	f
setOutDir	.\vlfeat\docsrc\webdoc.py	/^    def setOutDir(self, outDir):$/;"	m	class:DocSite
setParent	.\vlfeat\docsrc\webdoc.py	/^    def setParent(self, parent): pass$/;"	m	class:DocBareNode
setParent	.\vlfeat\docsrc\webdoc.py	/^    def setParent(self, parent):$/;"	m	class:DocNode
setPublishURL	.\vlfeat\docsrc\webdoc.py	/^    def setPublishURL(self, url):$/;"	m	class:DocSite
setUintValue	.\vlfeat\toolbox\misc\svms_common.h	/^void setUintValue(mxArray* array, vl_uint32 value)$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_aib.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_alldist.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_alldist2.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_alphanum.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_colsubset.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_dsift.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_fisher.m	/^function s =  setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_gmm.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_grad.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_hikmeans.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_hog.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_ihashsum.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_ikmeans.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_imintegral.m	/^function state = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_imsmooth.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_imwbackward.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_inthist.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_kdtree.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_kmeans.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_lbp.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_liop.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_mser.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_phow.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_printsize.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_roc.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_sift.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_slic.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_svmtrain.m	/^function s = setup()$/;"	f
setup	.\vlfeat\toolbox\xtest\vl_test_vlad.m	/^function s =  setup()$/;"	f
setupCaltech256	.\vlfeat\apps\recognition\setupCaltech256.m	/^function imdb = setupCaltech256(datasetDir, varargin)$/;"	f
setupFMD	.\vlfeat\apps\recognition\setupFMD.m	/^function imdb = setupFMD(datasetDir, varargin)$/;"	f
setupGeneric	.\vlfeat\apps\recognition\setupGeneric.m	/^function imdb = setupGeneric(datasetDir, varargin)$/;"	f
setupScene67	.\vlfeat\apps\recognition\setupScene67.m	/^function imdb = setupScene67(datasetDir, varargin)$/;"	f
setupVoc	.\vlfeat\apps\recognition\setupVoc.m	/^function imdb = setupVoc(datasetDir, varargin)$/;"	f
shortcut	.\vlfeat\vl\mser.h	/^  vl_uint      shortcut ;   \/**< shortcut used when building a tree           *\/$/;"	m	struct:_VlMserExtrReg
shortcut	.\vlfeat\vl\mser.h	/^  vl_uint shortcut ; \/**< points to a region closer to a root.    *\/$/;"	m	struct:_VlMserReg
shutil	.\vlfeat\docsrc\mdoc.py	/^import sys, os, re, shutil$/;"	i
sift	.\vlfeat\toolbox\noprefix\sift.m	/^function varargout = sift(varargin)$/;"	f
sift_mosaic	.\vlfeat\apps\sift_mosaic.m	/^function mosaic = sift_mosaic(im1, im2)$/;"	f
siftdescriptor	.\vlfeat\toolbox\noprefix\siftdescriptor.m	/^function varargout = siftdescriptor(varargin)$/;"	f
sigma	.\vlfeat\vl\covdet.h	/^  float sigma ; \/**< radius or scale *\/$/;"	m	struct:_VlFrameDisc
sigma	.\vlfeat\vl\covdet.h	/^  float sigma ; \/**< radius or scale *\/$/;"	m	struct:_VlFrameOrientedDisc
sigma	.\vlfeat\vl\quickshift.h	/^  vl_qs_type sigma;$/;"	m	struct:_VlQS
sigma	.\vlfeat\vl\sift.h	/^  float sigma ; \/**< scale. *\/$/;"	m	struct:_VlSiftKeypoint
sigma0	.\vlfeat\vl\sift.h	/^  double sigma0 ;       \/**< smoothing of pyramid base. *\/$/;"	m	struct:_VlSiftFilt
sigmaLowBound	.\vlfeat\vl\gmm.c	/^  double * sigmaLowBound ;            \/**< Lower bound on the diagonal covariance values. *\/$/;"	m	struct:_VlGMM	file:
sigmak	.\vlfeat\vl\sift.h	/^  double sigmak ;       \/**< k-smoothing *\/$/;"	m	struct:_VlSiftFilt
sigman	.\vlfeat\vl\sift.h	/^  double sigman ;       \/**< nominal image smoothing. *\/$/;"	m	struct:_VlSiftFilt
sigmoid	.\vlfeat\toolbox\noprefix\sigmoid.m	/^function varargout = sigmoid(varargin)$/;"	f
sign	.\vlfeat\vl\mathop.c	710;"	d	file:
signal	.\vlfeat\docsrc\mdoc.py	/^import subprocess, signal$/;"	i
simdEnabled	.\vlfeat\vl\generic.c	/^  vl_bool simdEnabled ;$/;"	m	struct:_VlState	file:
simdctrl	.\vlfeat\toolbox\noprefix\simdctrl.m	/^function varargout = simdctrl(varargin)$/;"	f
simpleKMeans	.\vlfeat\toolbox\xtest\vl_test_kmeans.m	/^function [centers, assignments, en] = simpleKMeans(X, numCenters)$/;"	f
simple_fisher	.\vlfeat\toolbox\xtest\vl_test_fisher.m	/^function enc = simple_fisher(x, mu, sigma2, pri, fast)$/;"	f
simple_vlad	.\vlfeat\toolbox\xtest\vl_test_vlad.m	/^function enc = simple_vlad(x, mu, assign)$/;"	f
sinc	.\vlfeat\vl\homkermap.c	/^VL_INLINE double sinc(double x)$/;"	f
sitexml	.\vlfeat\docsrc\mdoc.py	/^sitexml          = ""$/;"	v
slic	.\vlfeat\toolbox\noprefix\slic.m	/^function varargout = slic(varargin)$/;"	f
slow_imintegral	.\vlfeat\toolbox\xtest\vl_test_imintegral.m	/^function integral = slow_imintegral(I)$/;"	f
small	.\vlfeat\toolbox\imop\vl_tpsumx.c	35;"	d	file:
small	.\vlfeat\vl\rodrigues.c	56;"	d	file:
smoothChecker	.\vlfeat\toolbox\imop\vl_impattern.m	/^function im = smoothChecker(args)$/;"	f
snorm	.\vlfeat\apps\recognition\getDenseSIFT.m	/^function x = snorm(x)$/;"	f
snprintf	.\vlfeat\toolbox\mexutils.h	27;"	d
snprintf	.\vlfeat\vl\host.h	315;"	d
snprintf	.\vlfeat\vl\host.h	335;"	d
solver	.\vlfeat\vl\svm.c	/^  VlSvmSolverType solver ;      \/**< SVM solver type. *\/$/;"	m	struct:VlSvm_	file:
spline	.\vlfeat\toolbox\plotop\vl_pr.m	/^function h = spline(x,y,spec,varargin)$/;"	f
spline	.\vlfeat\toolbox\plotop\vl_roc.m	/^function h = spline(x,y,spec,varargin)$/;"	f
splitDimension	.\vlfeat\vl\kdtree.h	/^  unsigned int splitDimension ;$/;"	m	struct:_VlKDTreeNode
splitHeapArray	.\vlfeat\vl\kdtree.h	/^  VlKDTreeSplitDimension splitHeapArray [VL_KDTREE_SPLIT_HEAP_SIZE] ;$/;"	m	struct:_VlKDForest
splitHeapNumNodes	.\vlfeat\vl\kdtree.h	/^  vl_size splitHeapNumNodes ;$/;"	m	struct:_VlKDForest
splitHeapSize	.\vlfeat\vl\kdtree.h	/^  vl_size splitHeapSize ;$/;"	m	struct:_VlKDForest
splitThreshold	.\vlfeat\vl\kdtree.h	/^  double splitThreshold ;$/;"	m	struct:_VlKDTreeNode
sqrtf	.\vlfeat\toolbox\misc\vl_alldist2.c	71;"	d	file:
standarizeImage	.\vlfeat\apps\phow_caltech101.m	/^function im = standarizeImage(im)$/;"	f
start	.\vlfeat\docsrc\webdoc.py	/^def start(filePath, opts):$/;"	f
startCDATA	.\vlfeat\docsrc\webdoc.py	/^    def startCDATA(self):$/;"	m	class:DocHandler
startDTD	.\vlfeat\docsrc\webdoc.py	/^    def startDTD(self, name, public_id, system_id):$/;"	m	class:DocHandler
startElement	.\vlfeat\docsrc\webdoc.py	/^    def startElement(self, name, attrs):$/;"	m	class:DocHandler
startEntity	.\vlfeat\docsrc\webdoc.py	/^    def startEntity(self, name): pass$/;"	m	class:DocHandler
statistics	.\vlfeat\vl\svm.c	/^  VlSvmStatistics statistics ;  \/**< Statistcs. *\/$/;"	m	struct:VlSvm_	file:
stats	.\vlfeat\vl\mser.h	/^  VlMserStats stats ;          \/** run statistic                           *\/$/;"	m	struct:_VlMserFilt
status	.\vlfeat\vl\svm.h	/^  VlSvmSolverStatus status ;    \/**< Solver status. *\/$/;"	m	struct:VlSvmStatistics_
step	.\vlfeat\vl\scalespace.h	/^  double step ; \/**< Sampling step (size of a pixel) *\/$/;"	m	struct:_VlScaleSpaceOctaveGeometry
stepX	.\vlfeat\vl\dsift.h	/^  int stepX ;              \/**< frame sampling step X *\/$/;"	m	struct:VlDsiftFilter_
stepY	.\vlfeat\vl\dsift.h	/^  int stepY ;              \/**< frame sampling step Y *\/$/;"	m	struct:VlDsiftFilter_
stockImage	.\vlfeat\toolbox\imop\vl_impattern.m	/^function im = stockImage(pattern,args)$/;"	f
storeToCache	.\vlfeat\apps\recognition\encodeImage.m	/^function storeToCache(name, cache, psi)$/;"	f
stride	.\vlfeat\vl\kmeans.c	/^  vl_size stride ;$/;"	m	struct:_VlKMeansSortWrapper	file:
strides	.\vlfeat\vl\mser.h	/^  int               *strides ; \/**< strides to move in image data           *\/$/;"	m	struct:_VlMserFilt
string	.\vlfeat\vl\host.h	/^    char string [0x20] ;$/;"	m	union:_VlX86CpuInfo::__anon39
sub	.\vlfeat\make\update-mak.sh	/^function sub$/;"	f
subdivision	.\vlfeat\vl\homkermap.c	/^  double subdivision  ;$/;"	m	struct:_VlHomogeneousKernelMap	file:
subprocess	.\vlfeat\docsrc\mdoc.py	/^import subprocess, signal$/;"	i
subs	.\vlfeat\vl\mser.h	/^  int               *subs ;    \/**< N-dimensional subscript                 *\/$/;"	m	struct:_VlMserFilt
subv	.\vlfeat\make\update-mak.sh	/^function subv$/;"	f
svmdataset	.\vlfeat\toolbox\noprefix\svmdataset.m	/^function varargout = svmdataset(varargin)$/;"	f
svmpegasos	.\vlfeat\toolbox\noprefix\svmpegasos.m	/^function varargout = svmpegasos(varargin)$/;"	f
svmtrain	.\vlfeat\toolbox\noprefix\svmtrain.m	/^function varargout = svmtrain(varargin)$/;"	f
sys	.\vlfeat\docsrc\doxytag.py	/^import sys$/;"	i
sys	.\vlfeat\docsrc\formatter.py	/^import sys$/;"	i
sys	.\vlfeat\docsrc\mdoc.py	/^import sys, os, re, shutil$/;"	i
sys	.\vlfeat\docsrc\webdoc.py	/^import sys$/;"	i
sys	.\vlfeat\docsrc\wikidoc.py	/^import sys,os$/;"	i
table	.\vlfeat\vl\homkermap.c	/^  double * table ;$/;"	m	struct:_VlHomogeneousKernelMap	file:
tau	.\vlfeat\vl\quickshift.h	/^  vl_qs_type tau;$/;"	m	struct:_VlQS
teardown	.\vlfeat\toolbox\xtest\vl_test_printsize.m	/^function teardown(s)$/;"	f
tell	.\vlfeat\docsrc\webdoc.py	/^    def tell(self):$/;"	m	class:Generator
temp	.\vlfeat\vl\sift.h	/^  vl_sift_pix *temp ;   \/**< temporary pixel buffer. *\/$/;"	m	struct:_VlSiftFilt
test	.\vlfeat\toolbox\noprefix\test.m	/^function varargout = test(varargin)$/;"	f
testThread	.\vlfeat\src\test_threads.c	/^testThread(LPVOID args)$/;"	f
testThread	.\vlfeat\src\test_threads.c	/^testThread(void * args)$/;"	f
test_1x1	.\vlfeat\toolbox\xtest\vl_test_imdisttf.m	/^function test_1x1()$/;"	f
test_3d_one	.\vlfeat\toolbox\xtest\vl_test_binsum.m	/^function test_3d_one()$/;"	f
test_3d_two	.\vlfeat\toolbox\xtest\vl_test_binsum.m	/^function test_3d_two()$/;"	f
test_acc	.\vlfeat\toolbox\xtest\vl_test_whistc.m	/^function test_acc()$/;"	f
test_algorithms	.\vlfeat\toolbox\xtest\vl_test_kmeans.m	/^function test_algorithms(s)$/;"	f
test_ann	.\vlfeat\toolbox\xtest\vl_test_kdtree.m	/^function test_ann(s)$/;"	f
test_ann_forest	.\vlfeat\toolbox\xtest\vl_test_kdtree.m	/^function test_ann_forest(s)$/;"	f
test_array	.\vlfeat\toolbox\xtest\vl_test_binsearch.m	/^function test_array()$/;"	f
test_auto_rect_kchi2	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_auto_rect_kchi2(),   check_ker('kchi2', 3,  'rectangular') ;$/;"	f
test_auto_rect_kjs	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_auto_rect_kjs(),     check_ker('kjs',   3,  'rectangular') ;$/;"	f
test_auto_rect_kl1	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_auto_rect_kl1(),     check_ker('kl1',  25,  'rectangular') ;$/;"	f
test_auto_uniform_kchi2	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_auto_uniform_kchi2(),check_ker('kchi2', 3,  'uniform') ;$/;"	f
test_auto_uniform_kjs	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_auto_uniform_kjs(),  check_ker('kjs',   3,  'uniform') ;$/;"	f
test_auto_uniform_kl1	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_auto_uniform_kl1(),  check_ker('kl1',  25,  'uniform') ;$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_aib.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_alphanum.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_argparse.m	/^function test_basic()$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_binsearch.m	/^function test_basic()$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_cummax.m	/^function test_basic()$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_fisher.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_hikmeans.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_ikmeans.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_imarray.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_imdisttf.m	/^function test_basic()$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_imintegral.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_inthist.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_kmeans.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_liop.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_plotbox.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_printsize.m	/^function test_basic(s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_vlad.m	/^function test_basic (s)$/;"	f
test_basic	.\vlfeat\toolbox\xtest\vl_test_whistc.m	/^function test_basic()$/;"	f
test_basic_call	.\vlfeat\toolbox\xtest\vl_test_hog.m	/^function test_basic_call(s)$/;"	f
test_beginning	.\vlfeat\toolbox\xtest\vl_test_colsubset.m	/^function test_beginning(s)$/;"	f
test_bilinear_orientations	.\vlfeat\toolbox\xtest\vl_test_hog.m	/^function test_bilinear_orientations(s)$/;"	f
test_blob	.\vlfeat\toolbox\xtest\vl_test_liop.m	/^function test_blob(s)$/;"	f
test_bnd	.\vlfeat\toolbox\xtest\vl_test_binsearch.m	/^function test_bnd()$/;"	f
test_cluster_null	.\vlfeat\toolbox\xtest\vl_test_aib.m	/^function test_cluster_null(s)$/;"	f
test_datatypes	.\vlfeat\toolbox\xtest\vl_test_imintegral.m	/^function test_datatypes(s)$/;"	f
test_distance_kernel_pairs	.\vlfeat\toolbox\xtest\vl_test_alldist.m	/^function test_distance_kernel_pairs(s)$/;"	f
test_distance_kernel_pairs	.\vlfeat\toolbox\xtest\vl_test_alldist2.m	/^function test_distance_kernel_pairs(s)$/;"	f
test_distances	.\vlfeat\toolbox\xtest\vl_test_alldist.m	/^function test_distances(s)$/;"	f
test_distances	.\vlfeat\toolbox\xtest\vl_test_alldist2.m	/^function test_distances(s)$/;"	f
test_elkan	.\vlfeat\toolbox\xtest\vl_test_hikmeans.m	/^function test_elkan(s)$/;"	f
test_elkan	.\vlfeat\toolbox\xtest\vl_test_ikmeans.m	/^function test_elkan(s)$/;"	f
test_empty	.\vlfeat\toolbox\xtest\vl_test_binsearch.m	/^function test_empty()$/;"	f
test_ending	.\vlfeat\toolbox\xtest\vl_test_colsubset.m	/^function test_ending(s)$/;"	f
test_equiv	.\vlfeat\toolbox\xtest\vl_test_grad.m	/^function test_equiv(s)$/;"	f
test_equiv_forward	.\vlfeat\toolbox\xtest\vl_test_grad.m	/^function test_equiv_forward(s)$/;"	f
test_equiv_small	.\vlfeat\toolbox\xtest\vl_test_grad.m	/^function test_equiv_small(s)$/;"	f
test_error	.\vlfeat\toolbox\xtest\vl_test_argparse.m	/^function test_error()$/;"	f
test_fast	.\vlfeat\toolbox\xtest\vl_test_fisher.m	/^function test_fast(s)$/;"	f
test_fast_slow	.\vlfeat\toolbox\xtest\vl_test_dsift.m	/^function test_fast_slow(s)$/;"	f
test_fliplr	.\vlfeat\toolbox\xtest\vl_test_lbp.m	/^function test_fliplr(s)$/;"	f
test_four_args	.\vlfeat\toolbox\xtest\vl_test_binsum.m	/^function test_four_args()$/;"	f
test_frac	.\vlfeat\toolbox\xtest\vl_test_binsearch.m	/^function test_frac()$/;"	f
test_gamma	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_gamma()$/;"	f
test_get_set_state	.\vlfeat\toolbox\xtest\vl_test_twister.m	/^function test_get_set_state()$/;"	f
test_gray	.\vlfeat\toolbox\xtest\vl_test_phow.m	/^function test_gray(s)$/;"	f
test_hash	.\vlfeat\toolbox\xtest\vl_test_ihashsum.m	/^function test_hash(s)$/;"	f
test_homkermap	.\vlfeat\toolbox\xtest\vl_test_svmtrain.m	/^function test_homkermap(s)$/;"	f
test_hsv	.\vlfeat\toolbox\xtest\vl_test_phow.m	/^function test_hsv(s)$/;"	f
test_identity	.\vlfeat\toolbox\xtest\vl_test_imwbackward.m	/^function test_identity(s)$/;"	f
test_illegal_args	.\vlfeat\toolbox\xtest\vl_test_twister.m	/^function test_illegal_args()$/;"	f
test_improved	.\vlfeat\toolbox\xtest\vl_test_fisher.m	/^function test_improved(s)$/;"	f
test_individual	.\vlfeat\toolbox\xtest\vl_test_vlad.m	/^function test_individual (s)$/;"	f
test_inf	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function test_inf(s)$/;"	f
test_inf_bins	.\vlfeat\toolbox\xtest\vl_test_binsearch.m	/^function test_inf_bins()$/;"	f
test_inf_stable	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function test_inf_stable(s)$/;"	f
test_invalid_args	.\vlfeat\toolbox\xtest\vl_test_imwbackward.m	/^function test_invalid_args(s)$/;"	f
test_kernels	.\vlfeat\toolbox\xtest\vl_test_imsmooth.m	/^function test_kernels(s)$/;"	f
test_largest	.\vlfeat\toolbox\xtest\vl_test_colsubset.m	/^function test_largest(s)$/;"	f
test_leftovers	.\vlfeat\toolbox\xtest\vl_test_argparse.m	/^function test_leftovers()$/;"	f
test_margin	.\vlfeat\toolbox\xtest\vl_test_printsize.m	/^function test_margin(s)$/;"	f
test_mass	.\vlfeat\toolbox\xtest\vl_test_vlad.m	/^function test_mass (s)$/;"	f
test_matlab_equivalent	.\vlfeat\toolbox\xtest\vl_test_imintegral.m	/^function test_matlab_equivalent(s)$/;"	f
test_movie_gray_indexed	.\vlfeat\toolbox\xtest\vl_test_imarray.m	/^function test_movie_gray_indexed(s)$/;"	f
test_movie_indexed	.\vlfeat\toolbox\xtest\vl_test_imarray.m	/^function test_movie_indexed(s)$/;"	f
test_movie_rgb	.\vlfeat\toolbox\xtest\vl_test_imarray.m	/^function test_movie_rgb(s)$/;"	f
test_mser	.\vlfeat\toolbox\xtest\vl_test_mser.m	/^function test_mser(s)$/;"	f
test_multi_dimensional	.\vlfeat\toolbox\xtest\vl_test_imintegral.m	/^function test_multi_dimensional(s)$/;"	f
test_multi_dimensions	.\vlfeat\toolbox\xtest\vl_test_twister.m	/^function test_multi_dimensions()$/;"	f
test_multi_multi_args	.\vlfeat\toolbox\xtest\vl_test_twister.m	/^function test_multi_multi_args()$/;"	f
test_multidim	.\vlfeat\toolbox\xtest\vl_test_cummax.m	/^function test_multidim()$/;"	f
test_multidim	.\vlfeat\toolbox\xtest\vl_test_whistc.m	/^function test_multidim()$/;"	f
test_multiple	.\vlfeat\toolbox\xtest\vl_test_liop.m	/^function test_multiple(s)$/;"	f
test_multiple	.\vlfeat\toolbox\xtest\vl_test_plotbox.m	/^function test_multiple(s)$/;"	f
test_multithreading	.\vlfeat\toolbox\xtest\vl_test_gmm.m	/^function test_multithreading(s)$/;"	f
test_nan	.\vlfeat\toolbox\xtest\vl_test_whistc.m	/^function test_nan()$/;"	f
test_nearest	.\vlfeat\toolbox\xtest\vl_test_kdtree.m	/^function test_nearest(s)$/;"	f
test_nearests	.\vlfeat\toolbox\xtest\vl_test_kdtree.m	/^function test_nearests(s)$/;"	f
test_negative	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_negative()$/;"	f
test_neighbours	.\vlfeat\toolbox\xtest\vl_test_liop.m	/^function test_neighbours(s)$/;"	f
test_no_edges	.\vlfeat\toolbox\xtest\vl_test_whistc.m	/^function test_no_edges()$/;"	f
test_norm	.\vlfeat\toolbox\xtest\vl_test_fisher.m	/^function test_norm(s)$/;"	f
test_norm	.\vlfeat\toolbox\xtest\vl_test_vlad.m	/^function test_norm (s)$/;"	f
test_normalised_pr	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function test_normalised_pr(s)$/;"	f
test_normalised_pr_corner_cases	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function test_normalised_pr_corner_cases(s)$/;"	f
test_null_args	.\vlfeat\toolbox\xtest\vl_test_alldist.m	/^function test_null_args(s)$/;"	f
test_null_args	.\vlfeat\toolbox\xtest\vl_test_alldist2.m	/^function test_null_args(s)$/;"	f
test_opponent	.\vlfeat\toolbox\xtest\vl_test_phow.m	/^function test_opponent(s)$/;"	f
test_pad_by_continuity	.\vlfeat\toolbox\xtest\vl_test_imsmooth.m	/^function test_pad_by_continuity(s)$/;"	f
test_papertype	.\vlfeat\toolbox\xtest\vl_test_printsize.m	/^function test_papertype(s)$/;"	f
test_param	.\vlfeat\toolbox\xtest\vl_test_imdisttf.m	/^function test_param()$/;"	f
test_patterns	.\vlfeat\toolbox\xtest\vl_test_kmeans.m	/^function test_patterns(s)$/;"	f
test_perfect_metrics	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function test_perfect_metrics(s)$/;"	f
test_perfect_metrics	.\vlfeat\toolbox\xtest\vl_test_roc.m	/^function test_perfect_metrics(s)$/;"	f
test_perfect_tptn	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function test_perfect_tptn(s)$/;"	f
test_perfect_tptn	.\vlfeat\toolbox\xtest\vl_test_roc.m	/^function test_perfect_tptn(s)$/;"	f
test_polar	.\vlfeat\toolbox\xtest\vl_test_hog.m	/^function test_polar(s)$/;"	f
test_rand	.\vlfeat\toolbox\xtest\vl_test_imdisttf.m	/^function test_rand()$/;"	f
test_rand	.\vlfeat\toolbox\xtest\vl_test_vlad.m	/^function test_rand (s)$/;"	f
test_random	.\vlfeat\toolbox\xtest\vl_test_colsubset.m	/^function test_random(s)$/;"	f
test_random	.\vlfeat\toolbox\xtest\vl_test_imintegral.m	/^function test_random(s)$/;"	f
test_rect_kchi2	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_rect_kchi2(),        check_ker('kchi2', 3,  'rectangular', 15) ;$/;"	f
test_rect_kjs	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_rect_kjs(),          check_ker('kjs',   3,  'rectangular', 15) ;$/;"	f
test_rect_kl1	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_rect_kl1(),          check_ker('kl1',  29,  'rectangular', 10) ;$/;"	f
test_reference	.\vlfeat\toolbox\xtest\vl_test_printsize.m	/^function test_reference(s)$/;"	f
test_rgb	.\vlfeat\toolbox\xtest\vl_test_phow.m	/^function test_rgb(s)$/;"	f
test_sample	.\vlfeat\toolbox\xtest\vl_test_inthist.m	/^function test_sample(s)$/;"	f
test_sdca_basic	.\vlfeat\toolbox\xtest\vl_test_svmtrain.m	/^function test_sdca_basic(s)$/;"	f
test_seed_by_scalar	.\vlfeat\toolbox\xtest\vl_test_twister.m	/^function test_seed_by_scalar()$/;"	f
test_self	.\vlfeat\toolbox\xtest\vl_test_alldist.m	/^function test_self(s)$/;"	f
test_self	.\vlfeat\toolbox\xtest\vl_test_alldist2.m	/^function test_self(s)$/;"	f
test_sgd_basic	.\vlfeat\toolbox\xtest\vl_test_svmtrain.m	/^function test_sgd_basic(s)$/;"	f
test_sift	.\vlfeat\toolbox\xtest\vl_test_dsift.m	/^function test_sift(s)$/;"	f
test_slic	.\vlfeat\toolbox\xtest\vl_test_slic.m	/^function test_slic(s)$/;"	f
test_smallest	.\vlfeat\toolbox\xtest\vl_test_colsubset.m	/^function test_smallest(s)$/;"	f
test_special	.\vlfeat\toolbox\xtest\vl_test_imdisttf.m	/^function test_special()$/;"	f
test_sqrt	.\vlfeat\toolbox\xtest\vl_test_fisher.m	/^function test_sqrt(s)$/;"	f
test_sqrt	.\vlfeat\toolbox\xtest\vl_test_vlad.m	/^function test_sqrt (s)$/;"	f
test_square	.\vlfeat\toolbox\xtest\vl_test_twister.m	/^function test_square()$/;"	f
test_storage_classes	.\vlfeat\toolbox\xtest\vl_test_binsum.m	/^function test_storage_classes()$/;"	f
test_storage_classes	.\vlfeat\toolbox\xtest\vl_test_cummax.m	/^function test_storage_classes()$/;"	f
test_style	.\vlfeat\toolbox\xtest\vl_test_plotbox.m	/^function test_style(s)$/;"	f
test_swap1_metrics	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function test_swap1_metrics(s)$/;"	f
test_swap1_metrics	.\vlfeat\toolbox\xtest\vl_test_roc.m	/^function test_swap1_metrics(s)$/;"	f
test_swap1_tptn	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function test_swap1_tptn(s)$/;"	f
test_swap1_tptn	.\vlfeat\toolbox\xtest\vl_test_roc.m	/^function test_swap1_tptn(s)$/;"	f
test_swap1_tptn_stable	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function test_swap1_tptn_stable(s)$/;"	f
test_swap1_tptn_stable	.\vlfeat\toolbox\xtest\vl_test_roc.m	/^function test_swap1_tptn_stable(s)$/;"	f
test_three_args	.\vlfeat\toolbox\xtest\vl_test_binsum.m	/^function test_three_args()$/;"	f
test_ubc_descriptor	.\vlfeat\toolbox\xtest\vl_test_sift.m	/^function test_ubc_descriptor(s)$/;"	f
test_ubc_detector	.\vlfeat\toolbox\xtest\vl_test_sift.m	/^function test_ubc_detector(s)$/;"	f
test_unfiorm_lbps	.\vlfeat\toolbox\xtest\vl_test_lbp.m	/^function test_unfiorm_lbps(s)$/;"	f
test_uniform_kchi2	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_uniform_kchi2(),     check_ker('kchi2', 3,  'uniform', 15) ;$/;"	f
test_uniform_kjs	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_uniform_kjs(),       check_ker('kjs',   3,  'uniform', 15) ;$/;"	f
test_uniform_kl1	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function test_uniform_kl1(),       check_ker('kl1',  29,  'uniform', 15) ;$/;"	f
test_variants_and_flipping	.\vlfeat\toolbox\xtest\vl_test_hog.m	/^function test_variants_and_flipping(s)$/;"	f
test_weights	.\vlfeat\toolbox\xtest\vl_test_svmtrain.m	/^function test_weights(s)$/;"	f
threadState	.\vlfeat\vl\generic.c	/^  VlThreadState * threadState ;$/;"	m	struct:_VlState	file:
threads	.\vlfeat\toolbox\noprefix\threads.m	/^function varargout = threads(varargin)$/;"	f
threeDotSquare	.\vlfeat\toolbox\imop\vl_impattern.m	/^function im = threeDotSquare(args)$/;"	f
thresholdingMethod	.\vlfeat\vl\kdtree.h	/^  VlKDTreeThresholdingMethod thresholdingMethod ;$/;"	m	struct:_VlKDForest
ticFreq	.\vlfeat\vl\generic.c	/^  LARGE_INTEGER ticFreq ;$/;"	m	struct:_VlThreadState	file:
ticMark	.\vlfeat\vl\generic.c	/^  LARGE_INTEGER ticMark ;$/;"	m	struct:_VlThreadState	file:
ticMark	.\vlfeat\vl\generic.c	/^  clock_t ticMark ;$/;"	m	struct:_VlThreadState	file:
tightsubplot	.\vlfeat\toolbox\noprefix\tightsubplot.m	/^function varargout = tightsubplot(varargin)$/;"	f
tmp-dir	.\vlfeat\make\dist.mak	/^dist-bin-commit-common: tmp-dir=$(TMPDIR)\/tmp-$(NAME)-$(VER)-$(ARCH)$/;"	m
tmp-dir	.\vlfeat\make\dist.mak	/^dist-bin-commit: tmp-dir=$(TMPDIR)\/tmp-$(NAME)-$(VER)-$(ARCH)$/;"	m
tmp-dir	.\vlfeat\make\dist.mak	/^dist-bin-merge: tmp-dir=$(TMPDIR)\/tmp-$(NAME)-$(VER)-merge$/;"	m
tmp-dir	.\vlfeat\make\dist.mak	/^dist-bin-release: tmp-dir=$(TMPDIR)\/tmp-$(NAME)-$(VER)-$(ARCH)$/;"	m
to	.\vlfeat\vl\lbp.c	282;"	d	file:
toDOM	.\vlfeat\docsrc\formatter.py	/^    def toDOM(self):$/;"	m	class:Formatter
toIndexPage	.\vlfeat\docsrc\mdoc.py	/^    def toIndexPage(self, format='html', depth=1):$/;"	m	class:Node
toIndexXML	.\vlfeat\docsrc\mdoc.py	/^    def toIndexXML(self):$/;"	m	class:Node
toTextNode	.\vlfeat\docsrc\formatter.py	/^    def toTextNode(self,s):$/;"	m	class:Formatter
towiki	.\vlfeat\docsrc\mdoc.py	/^    def towiki(docdir, pagename):$/;"	f
tpfp	.\vlfeat\toolbox\noprefix\tpfp.m	/^function varargout = tpfp(varargin)$/;"	f
tps	.\vlfeat\toolbox\noprefix\tps.m	/^function varargout = tps(varargin)$/;"	f
tpsu	.\vlfeat\toolbox\noprefix\tpsu.m	/^function varargout = tpsu(varargin)$/;"	f
trainEncoder	.\vlfeat\apps\recognition\trainEncoder.m	/^function encoder = trainEncoder(images, varargin)$/;"	f
transp2	.\vlfeat\src\test_svd2.c	/^transp2 (double R [4], double A [4])$/;"	f
transpose_descriptor	.\vlfeat\toolbox\sift\vl_sift.c	/^transpose_descriptor (vl_sift_pix* dst, vl_sift_pix* src)$/;"	f
transpose_descriptor	.\vlfeat\toolbox\sift\vl_siftdescriptor.c	/^transpose_descriptor (vl_sift_pix* dst, vl_sift_pix* src)$/;"	f
transposed	.\vlfeat\vl\covdet.c	/^  vl_bool transposed ;$/;"	m	struct:_VlCovDet	file:
transposed	.\vlfeat\vl\hog.h	/^  vl_bool transposed ;$/;"	m	struct:VlHog_
transposed	.\vlfeat\vl\lbp.h	/^  vl_bool transposed ;$/;"	m	struct:VlLbp_
tree	.\vlfeat\vl\kdtree.h	/^  VlKDTree * tree ;$/;"	m	struct:_VlKDForestSearchState
trees	.\vlfeat\vl\kdtree.h	/^  VlKDTree ** trees ;$/;"	m	struct:_VlKDForest
twister	.\vlfeat\toolbox\noprefix\twister.m	/^function varargout = twister(varargin)$/;"	f
type	.\vlfeat\docsrc\mdoc.py	/^    type    = "string",$/;"	v
type	.\vlfeat\docsrc\mdoc.py	/^    type = "string",$/;"	v
type	.\vlfeat\vl\array.h	/^  vl_type type ;$/;"	m	struct:_VlArray
typedef-members	.\vlfeat\doc\api\gmm_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	.\vlfeat\doc\api\homkermap_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	.\vlfeat\doc\api\ikmeans_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	.\vlfeat\doc\api\mathop_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	.\vlfeat\doc\api\mser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	.\vlfeat\doc\api\quickshift_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	.\vlfeat\doc\api\sift_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	.\vlfeat\doc\api\svm_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	.\vlfeat\doc\api\svmdataset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
types	.\vlfeat\docsrc\webdoc.py	/^import types$/;"	i
ubcmatch	.\vlfeat\toolbox\noprefix\ubcmatch.m	/^function varargout = ubcmatch(varargin)$/;"	f
ubcread	.\vlfeat\toolbox\noprefix\ubcread.m	/^function varargout = ubcread(varargin)$/;"	f
uniformNoise	.\vlfeat\toolbox\imop\vl_impattern.m	/^function im = uniformNoise(args)$/;"	f
update_gradient	.\vlfeat\vl\sift.c	/^update_gradient (VlSiftFilt *f)$/;"	f	file:
upperBound	.\vlfeat\vl\kdtree.h	/^  double upperBound ;$/;"	m	struct:_VlKDTreeNode
upperChild	.\vlfeat\vl\kdtree.h	/^  vl_index upperChild ;$/;"	m	struct:_VlKDTreeNode
urlparse	.\vlfeat\docsrc\webdoc.py	/^from urlparse        import urlparse$/;"	i
urlunparse	.\vlfeat\docsrc\webdoc.py	/^from urlparse        import urlunparse$/;"	i
usage	.\vlfeat\docsrc\wikidoc.py	/^def usage():$/;"	f
useBilinearOrientationAssigment	.\vlfeat\vl\hog.h	/^  vl_bool useBilinearOrientationAssigment ;$/;"	m	struct:VlHog_
useFlatWindow	.\vlfeat\vl\dsift.h	/^  int useFlatWindow ;      \/**< flag: whether to approximate the Gaussian window with a flat one *\/$/;"	m	struct:VlDsiftFilter_
v	.\vlfeat\vl\host.c	548;"	d	file:
v	.\vlfeat\vl\host.c	552;"	d	file:
val	.\vlfeat\toolbox\mexutils.h	/^  int val ;          \/**< value to return *\/$/;"	m	struct:_vlmxOption
val	.\vlfeat\vl\getopt_long.h	/^  int	      val ;     \/**< value to set or to return *\/$/;"	m	struct:option
val_t	.\vlfeat\toolbox\mser\vl_erfill.c	/^typedef char unsigned val_t ;$/;"	t	file:
value	.\vlfeat\vl\kdtree.h	/^  double value ;$/;"	m	struct:_VlKDTreeDataIndexEntry
value	.\vlfeat\vl\mathop.h	/^static union { vl_uint32 raw ; float value ; }$/;"	m	union:__anon40
value	.\vlfeat\vl\mathop.h	/^static union { vl_uint32 raw ; float value ; }$/;"	m	union:__anon41
value	.\vlfeat\vl\mathop.h	/^static union { vl_uint64 raw ; double value ; }$/;"	m	union:__anon42
value	.\vlfeat\vl\mathop.h	/^static union { vl_uint64 raw ; double value ; }$/;"	m	union:__anon43
value	.\vlfeat\vl\mser.h	/^  vl_mser_pix  value ;      \/**< value of pivot pixel                         *\/$/;"	m	struct:_VlMserExtrReg
value	.\vlfeat\vl\stringop.h	/^  vl_index value ;   \/**< enumeration member value. *\/$/;"	m	struct:_VlEnumerator
var-members	.\vlfeat\doc\api\getopt__long_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	.\vlfeat\doc\api\mathop_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	.\vlfeat\doc\api\sift_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
variance	.\vlfeat\vl\kdtree.h	/^  double variance ;$/;"	m	struct:_VlKDTreeSplitDimension
variant	.\vlfeat\vl\hog.h	/^  VlHogVariant variant ;$/;"	m	struct:VlHog_
variation	.\vlfeat\vl\mser.h	/^  float        variation ;  \/**< rel. area variation                          *\/$/;"	m	struct:_VlMserExtrReg
vendor	.\vlfeat\vl\host.h	/^  } vendor ;$/;"	m	struct:_VlX86CpuInfo	typeref:union:_VlX86CpuInfo::__anon39
verb	.\vlfeat\docsrc\mdoc.py	/^verb             = 0$/;"	v
verb	.\vlfeat\vl\hikmeans.h	/^  int verb ; \/**< Verbosity level *\/$/;"	m	struct:_VlHIKMTree
verb	.\vlfeat\vl\ikmeans.h	/^  int verb ; \/**< verbosity level *\/$/;"	m	struct:_VlIKMFilt
verbose	.\vlfeat\toolbox\misc\vl_svmtrain.c	/^  vl_bool verbose ;$/;"	m	struct:DiagnsoticOpts_	file:
verbose	.\vlfeat\vl\mser.h	/^  vl_bool   verbose ;          \/**< be verbose                             *\/$/;"	m	struct:_VlMserFilt
verbosity	.\vlfeat\vl\aib.h	/^  vl_uint verbosity ; \/** Verbosity level *\/$/;"	m	struct:_VlAIB
verbosity	.\vlfeat\vl\gmm.c	/^  int     verbosity ;                 \/**< Verbosity level. *\/$/;"	m	struct:_VlGMM	file:
verbosity	.\vlfeat\vl\kmeans.h	/^  int verbosity ;                         \/**< Verbosity level. *\/$/;"	m	struct:_VlKMeans
visit	.\vlfeat\docsrc\webdoc.py	/^    def visit(self, generator): pass$/;"	m	class:DocBareNode
visit	.\vlfeat\docsrc\webdoc.py	/^    def visit(self, generator):$/;"	m	class:DocDir
visit	.\vlfeat\docsrc\webdoc.py	/^    def visit(self, generator):$/;"	m	class:DocNode
visit	.\vlfeat\docsrc\webdoc.py	/^    def visit(self, generator):$/;"	m	class:DocPage
visualize_detections_by_confidence	.\visualize_detections_by_confidence.m	/^function visualize_detections_by_confidence(bboxes, confidences, image_ids, test_scn_path, label_path, onlytp)$/;"	f
visualize_detections_by_image	.\visualize_detections_by_image.m	/^function visualize_detections_by_image(bboxes, confidences, image_ids, tp, fp, test_scn_path, label_path, onlytp)$/;"	f
visualize_detections_by_image_no_gt	.\visualize_detections_by_image_no_gt.m	/^function visualize_detections_by_image_no_gt(bboxes, confidences, image_ids, test_scn_path)$/;"	f
vlCovDetDescriptorNames	.\vlfeat\toolbox\sift\vl_covdet.c	/^const char* vlCovDetDescriptorNames [VL_COVDET_DESC_NUM] =$/;"	v
vlCovDetDescriptorTypes	.\vlfeat\toolbox\sift\vl_covdet.c	/^VlEnumerator vlCovDetDescriptorTypes [VL_COVDET_DESC_NUM] =$/;"	v
vlCovdetMethods	.\vlfeat\vl\covdet.c	/^VlEnumerator vlCovdetMethods [VL_COVDET_METHOD_NUM] = {$/;"	v
vlCovdetMethods	.\vlfeat\vl\covdet.h	/^VL_EXPORT VlEnumerator vlCovdetMethods [VL_COVDET_METHOD_NUM] ;$/;"	v
vlFrameNames	.\vlfeat\vl\covdet.h	/^VL_EXPORT const char* vlFrameNames [VL_FRAMETYPE_NUM] ;$/;"	v
vlFrameTypes	.\vlfeat\vl\covdet.h	/^VL_EXPORT VlEnumerator vlFrameTypes [VL_FRAMETYPE_NUM] ;$/;"	v
vl_abs_d	.\vlfeat\vl\mathop.h	/^vl_abs_d (double x)$/;"	f
vl_abs_f	.\vlfeat\vl\mathop.h	/^vl_abs_f (float x)$/;"	f
vl_aib_calculate_information	.\vlfeat\vl\aib.c	/^void vl_aib_calculate_information(VlAIB * aib, double * I, double * H)$/;"	f
vl_aib_delete	.\vlfeat\vl\aib.c	/^vl_aib_delete (VlAIB * aib)$/;"	f
vl_aib_get_costs	.\vlfeat\vl\aib.h	/^double * vl_aib_get_costs(VlAIB const * aib)$/;"	f
vl_aib_get_parents	.\vlfeat\vl\aib.h	/^vl_uint * vl_aib_get_parents(VlAIB const * aib)$/;"	f
vl_aib_get_verbosity	.\vlfeat\vl\aib.h	/^vl_aib_get_verbosity (VlAIB const * self)$/;"	f
vl_aib_merge_nodes	.\vlfeat\vl\aib.c	/^vl_aib_merge_nodes (VlAIB * aib, vl_uint i, vl_uint j, vl_uint new)$/;"	f
vl_aib_min_beta	.\vlfeat\vl\aib.c	/^void vl_aib_min_beta$/;"	f
vl_aib_new	.\vlfeat\vl\aib.c	/^VlAIB * vl_aib_new(double * Pcx, vl_uint nvalues, vl_uint nlabels)$/;"	f
vl_aib_new_Pc	.\vlfeat\vl\aib.c	/^double * vl_aib_new_Pc(double * Pcx, vl_uint nvalues, vl_uint nlabels)$/;"	f
vl_aib_new_Px	.\vlfeat\vl\aib.c	/^double * vl_aib_new_Px(double * Pcx, vl_uint nvalues, vl_uint nlabels)$/;"	f
vl_aib_new_nodelist	.\vlfeat\vl\aib.c	/^vl_uint *vl_aib_new_nodelist (vl_uint nentries)$/;"	f
vl_aib_normalize_P	.\vlfeat\vl\aib.c	/^void vl_aib_normalize_P (double * P, vl_uint nelem)$/;"	f
vl_aib_process	.\vlfeat\vl\aib.c	/^void vl_aib_process(VlAIB *aib)$/;"	f
vl_aib_set_verbosity	.\vlfeat\vl\aib.h	/^vl_aib_set_verbosity (VlAIB * self, int verbosity)$/;"	f
vl_aib_update_beta	.\vlfeat\vl\aib.c	/^vl_aib_update_beta (VlAIB * aib)$/;"	f
vl_aibcut	.\vlfeat\toolbox\aib\vl_aibcut.m	/^function [cut, map, short] = vl_aibcut(parents, n)$/;"	f
vl_aibcuthist	.\vlfeat\toolbox\aib\vl_aibcuthist.m	/^function hist = vl_aibcuthist(map, x, varargin)$/;"	f
vl_aibcutpush	.\vlfeat\toolbox\aib\vl_aibcutpush.m	/^function y = vl_aibcutpush(map, x)$/;"	f
vl_alphanum	.\vlfeat\toolbox\misc\vl_alphanum.m	/^function [strings, perm] = vl_alphanum(strings)$/;"	f
vl_argparse	.\vlfeat\toolbox\misc\vl_argparse.m	/^function [conf, args] = vl_argparse(conf, args, varargin)$/;"	f
vl_array_dealloc	.\vlfeat\vl\array.c	/^vl_array_dealloc (VlArray * self)$/;"	f
vl_array_delete	.\vlfeat\vl\array.c	/^vl_array_delete (VlArray * self)$/;"	f
vl_array_get_data	.\vlfeat\vl\array.h	/^vl_array_get_data (VlArray const * self)$/;"	f
vl_array_get_data_type	.\vlfeat\vl\array.h	/^vl_array_get_data_type (VlArray const * self)$/;"	f
vl_array_get_dimensions	.\vlfeat\vl\array.h	/^vl_array_get_dimensions (VlArray const * self)$/;"	f
vl_array_get_num_dimensions	.\vlfeat\vl\array.h	/^vl_array_get_num_dimensions (VlArray const * self)$/;"	f
vl_array_get_num_elements	.\vlfeat\vl\array.c	/^vl_array_get_num_elements (VlArray const * self)$/;"	f
vl_array_init	.\vlfeat\vl\array.c	/^vl_array_init (VlArray* self, vl_type type,$/;"	f
vl_array_init_envelope	.\vlfeat\vl\array.c	/^vl_array_init_envelope (VlArray * self, void * data, vl_type type,$/;"	f
vl_array_init_matrix	.\vlfeat\vl\array.c	/^vl_array_init_matrix (VlArray * self, vl_type type, vl_size numRows, vl_size numColumns)$/;"	f
vl_array_init_matrix_envelope	.\vlfeat\vl\array.c	/^vl_array_init_matrix_envelope (VlArray * self, void * data,$/;"	f
vl_array_new	.\vlfeat\vl\array.c	/^vl_array_new (vl_type type, vl_size numDimensions, vl_size const * dimensions)$/;"	f
vl_array_new_envelope	.\vlfeat\vl\array.c	/^vl_array_new_envelope (void * data, vl_type type,$/;"	f
vl_array_new_matrix	.\vlfeat\vl\array.c	/^vl_array_new_matrix (vl_type type, vl_size numRows, vl_size numColumns)$/;"	f
vl_array_new_matrix_envelope	.\vlfeat\vl\array.c	/^vl_array_new_matrix_envelope (void * data, vl_type type, vl_size numRows, vl_size numColumns)$/;"	f
vl_assert_almost_equal	.\vlfeat\toolbox\xtest\vl_assert_almost_equal.m	/^function vl_assert_almost_equal(x, y, varargin)$/;"	f
vl_assert_equal	.\vlfeat\toolbox\xtest\vl_assert_equal.m	/^function vl_assert_equal(x, y, varargin)$/;"	f
vl_assert_exception	.\vlfeat\toolbox\xtest\vl_assert_exception.m	/^function vl_assert_exception(func, errorId, errorMessage)$/;"	f
vl_bool	.\vlfeat\vl\host.h	/^typedef int                 vl_bool ;    \/**< @brief Boolean. *\/$/;"	t
vl_bool	.\vlfeat\vl\host.h	/^typedef int                 vl_bool ;$/;"	t
vl_calloc	.\vlfeat\vl\generic.c	/^vl_calloc (size_t n, size_t size)$/;"	f
vl_ceil_d	.\vlfeat\vl\mathop.h	/^vl_ceil_d (double x)$/;"	f
vl_ceil_f	.\vlfeat\vl\mathop.h	/^vl_ceil_f (float x)$/;"	f
vl_cf	.\vlfeat\toolbox\plotop\vl_cf.m	/^function h = vl_cf(h0)$/;"	f
vl_click	.\vlfeat\toolbox\plotop\vl_click.m	/^function P = vl_click(N,varargin) ;$/;"	f
vl_clickpoint	.\vlfeat\toolbox\plotop\vl_clickpoint.m	/^function sel = vl_clickpoint(V,N,varargin)$/;"	f
vl_clicksegment	.\vlfeat\toolbox\plotop\vl_clicksegment.m	/^function [P1,P2] = vl_clicksegment$/;"	f
vl_colsubset	.\vlfeat\toolbox\misc\vl_colsubset.m	/^function [Y, sel] = vl_colsubset(X,n,varargin)$/;"	f
vl_compile	.\vlfeat\toolbox\vl_compile.m	/^function vl_compile(compiler)$/;"	f
vl_configuration_to_string_copy	.\vlfeat\vl\generic.c	/^vl_configuration_to_string_copy ()$/;"	f
vl_constructor	.\vlfeat\vl\generic.c	/^vl_constructor (void)$/;"	f	file:
vl_covdet_append_feature	.\vlfeat\vl\covdet.c	/^vl_covdet_append_feature (VlCovDet * self, VlCovDetFeature const * feature)$/;"	f
vl_covdet_delete	.\vlfeat\vl\covdet.c	/^vl_covdet_delete (VlCovDet * self)$/;"	f
vl_covdet_detect	.\vlfeat\vl\covdet.c	/^vl_covdet_detect (VlCovDet * self)$/;"	f
vl_covdet_drop_features_outside	.\vlfeat\vl\covdet.c	/^vl_covdet_drop_features_outside (VlCovDet * self, double margin)$/;"	f
vl_covdet_extract_affine_shape	.\vlfeat\vl\covdet.c	/^vl_covdet_extract_affine_shape (VlCovDet * self)$/;"	f
vl_covdet_extract_affine_shape_for_frame	.\vlfeat\vl\covdet.c	/^vl_covdet_extract_affine_shape_for_frame (VlCovDet * self,$/;"	f
vl_covdet_extract_laplacian_scales	.\vlfeat\vl\covdet.c	/^vl_covdet_extract_laplacian_scales (VlCovDet * self)$/;"	f
vl_covdet_extract_laplacian_scales_for_frame	.\vlfeat\vl\covdet.c	/^vl_covdet_extract_laplacian_scales_for_frame (VlCovDet * self,$/;"	f
vl_covdet_extract_orientations	.\vlfeat\vl\covdet.c	/^vl_covdet_extract_orientations (VlCovDet * self)$/;"	f
vl_covdet_extract_orientations_for_frame	.\vlfeat\vl\covdet.c	/^vl_covdet_extract_orientations_for_frame (VlCovDet * self,$/;"	f
vl_covdet_extract_patch_for_frame	.\vlfeat\vl\covdet.c	/^vl_covdet_extract_patch_for_frame (VlCovDet * self,$/;"	f
vl_covdet_extract_patch_helper	.\vlfeat\vl\covdet.c	/^vl_covdet_extract_patch_helper (VlCovDet * self,$/;"	f
vl_covdet_get_aa_accurate_smoothing	.\vlfeat\vl\covdet.c	/^vl_covdet_get_aa_accurate_smoothing (VlCovDet const * self)$/;"	f
vl_covdet_get_css	.\vlfeat\vl\covdet.c	/^vl_covdet_get_css (VlCovDet const * self)$/;"	f
vl_covdet_get_edge_threshold	.\vlfeat\vl\covdet.c	/^vl_covdet_get_edge_threshold (VlCovDet const * self)$/;"	f
vl_covdet_get_features	.\vlfeat\vl\covdet.c	/^vl_covdet_get_features (VlCovDet * self)$/;"	f
vl_covdet_get_first_octave	.\vlfeat\vl\covdet.c	/^vl_covdet_get_first_octave (VlCovDet const * self)$/;"	f
vl_covdet_get_gss	.\vlfeat\vl\covdet.c	/^vl_covdet_get_gss (VlCovDet const * self)$/;"	f
vl_covdet_get_laplacian_peak_threshold	.\vlfeat\vl\covdet.c	/^vl_covdet_get_laplacian_peak_threshold (VlCovDet const * self)$/;"	f
vl_covdet_get_laplacian_scales_statistics	.\vlfeat\vl\covdet.c	/^vl_covdet_get_laplacian_scales_statistics (VlCovDet const * self,$/;"	f
vl_covdet_get_non_extrema_suppression_threshold	.\vlfeat\vl\covdet.c	/^vl_covdet_get_non_extrema_suppression_threshold (VlCovDet const * self)$/;"	f
vl_covdet_get_num_features	.\vlfeat\vl\covdet.c	/^vl_covdet_get_num_features (VlCovDet const * self)$/;"	f
vl_covdet_get_num_non_extrema_suppressed	.\vlfeat\vl\covdet.c	/^vl_covdet_get_num_non_extrema_suppressed (VlCovDet const * self)$/;"	f
vl_covdet_get_octave_resolution	.\vlfeat\vl\covdet.c	/^vl_covdet_get_octave_resolution (VlCovDet const * self)$/;"	f
vl_covdet_get_peak_threshold	.\vlfeat\vl\covdet.c	/^vl_covdet_get_peak_threshold (VlCovDet const * self)$/;"	f
vl_covdet_get_transposed	.\vlfeat\vl\covdet.c	/^vl_covdet_get_transposed (VlCovDet const  * self)$/;"	f
vl_covdet_new	.\vlfeat\vl\covdet.c	/^vl_covdet_new (VlCovDetMethod method)$/;"	f
vl_covdet_put_image	.\vlfeat\vl\covdet.c	/^vl_covdet_put_image (VlCovDet * self,$/;"	f
vl_covdet_reset	.\vlfeat\vl\covdet.c	/^vl_covdet_reset (VlCovDet * self)$/;"	f
vl_covdet_set_aa_accurate_smoothing	.\vlfeat\vl\covdet.c	/^vl_covdet_set_aa_accurate_smoothing (VlCovDet * self, vl_bool x)$/;"	f
vl_covdet_set_edge_threshold	.\vlfeat\vl\covdet.c	/^vl_covdet_set_edge_threshold (VlCovDet * self, double edgeThreshold)$/;"	f
vl_covdet_set_first_octave	.\vlfeat\vl\covdet.c	/^vl_covdet_set_first_octave (VlCovDet * self, vl_index o)$/;"	f
vl_covdet_set_laplacian_peak_threshold	.\vlfeat\vl\covdet.c	/^vl_covdet_set_laplacian_peak_threshold (VlCovDet * self, double peakThreshold)$/;"	f
vl_covdet_set_non_extrema_suppression_threshold	.\vlfeat\vl\covdet.c	/^vl_covdet_set_non_extrema_suppression_threshold (VlCovDet * self, double x)$/;"	f
vl_covdet_set_octave_resolution	.\vlfeat\vl\covdet.c	/^vl_covdet_set_octave_resolution (VlCovDet * self, vl_size r)$/;"	f
vl_covdet_set_peak_threshold	.\vlfeat\vl\covdet.c	/^vl_covdet_set_peak_threshold (VlCovDet * self, double peakThreshold)$/;"	f
vl_covdet_set_transposed	.\vlfeat\vl\covdet.c	/^vl_covdet_set_transposed (VlCovDet * self, vl_bool t)$/;"	f
vl_cpu_has_avx	.\vlfeat\vl\generic.c	/^vl_cpu_has_avx (void)$/;"	f
vl_cpu_has_sse2	.\vlfeat\vl\generic.c	/^vl_cpu_has_sse2 (void)$/;"	f
vl_cpu_has_sse3	.\vlfeat\vl\generic.c	/^vl_cpu_has_sse3 (void)$/;"	f
vl_ddgaussian	.\vlfeat\toolbox\special\vl_ddgaussian.m	/^function y = vl_ddgaussian(x)$/;"	f
vl_demo	.\vlfeat\toolbox\vl_demo.m	/^function vl_demo$/;"	f
vl_demo_aib	.\vlfeat\toolbox\demo\vl_demo_aib.m	/^function vl_demo_aib$/;"	f
vl_demo_alldist	.\vlfeat\toolbox\demo\vl_demo_alldist.m	/^function vl_demo_alldist$/;"	f
vl_demo_cmd	.\vlfeat\toolbox\demo\vl_demo_cmd.m	/^function [err,msg] = vl_demo_cmd(name, args)$/;"	f
vl_demo_gmm_3d	.\vlfeat\toolbox\demo\vl_demo_gmm_3d.m	/^function vl_demo_gmm_3d$/;"	f
vl_demo_ikmeans	.\vlfeat\toolbox\demo\vl_demo_ikmeans.m	/^function vl_demo_ikmeans()$/;"	f
vl_demo_kdtree	.\vlfeat\toolbox\demo\vl_demo_kdtree.m	/^function vl_demo_kdtree$/;"	f
vl_demo_kdtree_ann	.\vlfeat\toolbox\demo\vl_demo_kdtree_ann.m	/^function vl_demo_kdtree_ann$/;"	f
vl_demo_kdtree_forest	.\vlfeat\toolbox\demo\vl_demo_kdtree_forest.m	/^function vl_demo_kdtree_forest$/;"	f
vl_demo_kdtree_plot	.\vlfeat\toolbox\demo\vl_demo_kdtree_plot.m	/^function h = vl_demo_kdtree_plot(kdtree, nodeIndex, xlim, ylim)$/;"	f
vl_demo_kdtree_self	.\vlfeat\toolbox\demo\vl_demo_kdtree_self.m	/^function vl_demo_kdtree_self$/;"	f
vl_demo_kdtree_sift	.\vlfeat\toolbox\demo\vl_demo_kdtree_sift.m	/^function vl_demo_kdtree_sift$/;"	f
vl_demo_print	.\vlfeat\toolbox\demo\vl_demo_print.m	/^function vl_demo_print(varargin)$/;"	f
vl_demo_svm	.\vlfeat\toolbox\demo\vl_demo_svm.m	/^function vl_demo_svm$/;"	f
vl_destructor	.\vlfeat\vl\generic.c	/^vl_destructor ()$/;"	f	file:
vl_det	.\vlfeat\toolbox\plotop\vl_det.m	/^function [missRate, falseAlarm] = vl_det(labels, scores, varargin)$/;"	f
vl_dgaussian	.\vlfeat\toolbox\special\vl_dgaussian.m	/^function y = vl_dgaussian(x)$/;"	f
vl_dsift_delete	.\vlfeat\vl\dsift.c	/^vl_dsift_delete (VlDsiftFilter * self)$/;"	f
vl_dsift_get_bounds	.\vlfeat\vl\dsift.h	/^vl_dsift_get_bounds (VlDsiftFilter const* self,$/;"	f
vl_dsift_get_descriptor_size	.\vlfeat\vl\dsift.h	/^vl_dsift_get_descriptor_size (VlDsiftFilter const *self)$/;"	f
vl_dsift_get_descriptors	.\vlfeat\vl\dsift.h	/^vl_dsift_get_descriptors (VlDsiftFilter const *self)$/;"	f
vl_dsift_get_flat_window	.\vlfeat\vl\dsift.h	/^vl_dsift_get_flat_window (VlDsiftFilter const* self)$/;"	f
vl_dsift_get_geometry	.\vlfeat\vl\dsift.h	/^VlDsiftDescriptorGeometry const* vl_dsift_get_geometry (VlDsiftFilter const *self)$/;"	f
vl_dsift_get_keypoint_num	.\vlfeat\vl\dsift.h	/^vl_dsift_get_keypoint_num (VlDsiftFilter const *self)$/;"	f
vl_dsift_get_keypoints	.\vlfeat\vl\dsift.h	/^vl_dsift_get_keypoints (VlDsiftFilter const *self)$/;"	f
vl_dsift_get_steps	.\vlfeat\vl\dsift.h	/^vl_dsift_get_steps (VlDsiftFilter const* self,$/;"	f
vl_dsift_get_window_size	.\vlfeat\vl\dsift.h	/^vl_dsift_get_window_size(VlDsiftFilter const * self)$/;"	f
vl_dsift_new	.\vlfeat\vl\dsift.c	/^vl_dsift_new (int imWidth, int imHeight)$/;"	f
vl_dsift_new_basic	.\vlfeat\vl\dsift.c	/^vl_dsift_new_basic (int imWidth, int imHeight, int step, int binSize)$/;"	f
vl_dsift_process	.\vlfeat\vl\dsift.c	/^void vl_dsift_process (VlDsiftFilter* self, float const* im)$/;"	f
vl_dsift_set_bounds	.\vlfeat\vl\dsift.h	/^vl_dsift_set_bounds (VlDsiftFilter* self,$/;"	f
vl_dsift_set_flat_window	.\vlfeat\vl\dsift.h	/^vl_dsift_set_flat_window (VlDsiftFilter* self,$/;"	f
vl_dsift_set_geometry	.\vlfeat\vl\dsift.h	/^vl_dsift_set_geometry (VlDsiftFilter *self,$/;"	f
vl_dsift_set_steps	.\vlfeat\vl\dsift.h	/^vl_dsift_set_steps (VlDsiftFilter* self,$/;"	f
vl_dsift_set_window_size	.\vlfeat\vl\dsift.h	/^vl_dsift_set_window_size(VlDsiftFilter * self, double windowSize)$/;"	f
vl_dsift_transpose_descriptor	.\vlfeat\vl\dsift.h	/^vl_dsift_transpose_descriptor (float* dst,$/;"	f
vl_dsigmoid	.\vlfeat\toolbox\special\vl_dsigmoid.m	/^function y = vl_dsigmoid(x)$/;"	f
vl_dwaffine	.\vlfeat\toolbox\imop\vl_dwaffine.m	/^function [dWx,dWy] = vl_dwaffine(x,y)$/;"	f
vl_enumeration_get	.\vlfeat\vl\stringop.c	/^vl_enumeration_get (VlEnumerator const *enumeration, char const *name)$/;"	f
vl_enumeration_get_by_value	.\vlfeat\vl\stringop.c	/^vl_enumeration_get_by_value (VlEnumerator const *enumeration, vl_index value)$/;"	f
vl_enumeration_get_casei	.\vlfeat\vl\stringop.c	/^vl_enumeration_get_casei (VlEnumerator const *enumeration, char const *name)$/;"	f
vl_ertr	.\vlfeat\toolbox\mser\vl_ertr.m	/^function f = vl_ertr(f) ;$/;"	f
vl_fast_atan2_d	.\vlfeat\vl\mathop.h	/^vl_fast_atan2_d (double y, double x)$/;"	f
vl_fast_atan2_f	.\vlfeat\vl\mathop.h	/^vl_fast_atan2_f (float y, float x)$/;"	f
vl_fast_resqrt_d	.\vlfeat\vl\mathop.h	/^vl_fast_resqrt_d (double x)$/;"	f
vl_fast_resqrt_f	.\vlfeat\vl\mathop.h	/^vl_fast_resqrt_f (float x)$/;"	f
vl_fast_sqrt_d	.\vlfeat\vl\mathop.h	/^vl_fast_sqrt_d (float x)$/;"	f
vl_fast_sqrt_f	.\vlfeat\vl\mathop.h	/^vl_fast_sqrt_f (float x)$/;"	f
vl_figaspect	.\vlfeat\toolbox\plotop\vl_figaspect.m	/^function vl_figaspect(a)$/;"	f
vl_file_meta_close	.\vlfeat\src\generic-driver.h	/^vl_file_meta_close (VlFileMeta * self)$/;"	f
vl_file_meta_get_double	.\vlfeat\src\generic-driver.h	/^vl_file_meta_get_double (VlFileMeta *self, double *x)$/;"	f
vl_file_meta_open	.\vlfeat\src\generic-driver.h	/^vl_file_meta_open (VlFileMeta * self, char const * basename, char const * mode)$/;"	f
vl_file_meta_parse	.\vlfeat\src\generic-driver.h	/^vl_file_meta_parse (VlFileMeta * self, char const * optarg)$/;"	f
vl_file_meta_put_double	.\vlfeat\src\generic-driver.h	/^vl_file_meta_put_double (VlFileMeta * self, double x)$/;"	f
vl_file_meta_put_uint8	.\vlfeat\src\generic-driver.h	/^vl_file_meta_put_uint8 (VlFileMeta *self, vl_uint8 x)$/;"	f
vl_find_local_extrema_2	.\vlfeat\vl\covdet.c	/^vl_find_local_extrema_2 (vl_index ** extrema, vl_size * bufferSize,$/;"	f
vl_find_local_extrema_3	.\vlfeat\vl\covdet.c	/^vl_find_local_extrema_3 (vl_index ** extrema, vl_size * bufferSize,$/;"	f
vl_fisher_encode	.\vlfeat\vl\fisher.c	/^vl_fisher_encode$/;"	f
vl_flatmap	.\vlfeat\toolbox\quickshift\vl_flatmap.m	/^function [map, C] = vl_flatmap(map)$/;"	f
vl_floor_d	.\vlfeat\vl\mathop.h	/^vl_floor_d (double x)$/;"	f
vl_floor_f	.\vlfeat\vl\mathop.h	/^vl_floor_f (float x)$/;"	f
vl_frame2oell	.\vlfeat\toolbox\sift\vl_frame2oell.m	/^function eframes = vl_frame2oell(frames)$/;"	f
vl_free	.\vlfeat\vl\generic.c	/^vl_free (void *ptr)$/;"	f
vl_gaussian	.\vlfeat\toolbox\special\vl_gaussian.m	/^function y = vl_gaussian(x)$/;"	f
vl_gaussian_elimination	.\vlfeat\vl\mathop.c	/^vl_gaussian_elimination (double * A, vl_size numRows, vl_size numColumns)$/;"	f
vl_get_cpu_time	.\vlfeat\vl\generic.c	/^vl_get_cpu_time ()$/;"	f
vl_get_frame_size	.\vlfeat\vl\covdet.h	/^vl_get_frame_size (VlFrameType frameType) {$/;"	f
vl_get_frame_type	.\vlfeat\vl\covdet.h	/^vl_get_frame_type (vl_bool affineAdaptation, vl_bool orientation)$/;"	f
vl_get_last_error	.\vlfeat\vl\generic.c	/^vl_get_last_error (void) {$/;"	f
vl_get_last_error_message	.\vlfeat\vl\generic.c	/^vl_get_last_error_message (void)$/;"	f
vl_get_max_threads	.\vlfeat\vl\generic.c	/^vl_get_max_threads (void)$/;"	f
vl_get_num_cpus	.\vlfeat\vl\generic.c	/^vl_get_num_cpus (void)$/;"	f
vl_get_printf_func	.\vlfeat\vl\generic.c	/^vl_get_printf_func (void) {$/;"	f
vl_get_rand	.\vlfeat\vl\generic.c	/^vl_get_rand (void)$/;"	f
vl_get_simd_enabled	.\vlfeat\vl\generic.c	/^vl_get_simd_enabled (void)$/;"	f
vl_get_state	.\vlfeat\vl\generic.c	/^vl_get_state (void)$/;"	f
vl_get_thread_limit	.\vlfeat\vl\generic.c	/^vl_get_thread_limit (void)$/;"	f
vl_get_thread_specific_state	.\vlfeat\vl\generic.c	/^vl_get_thread_specific_state (void)$/;"	f
vl_get_type_name	.\vlfeat\vl\generic.h	/^vl_get_type_name (vl_type type)$/;"	f
vl_get_type_size	.\vlfeat\vl\generic.h	/^vl_get_type_size (vl_type type)$/;"	f
vl_get_vector_comparison_type_name	.\vlfeat\vl\mathop.h	/^vl_get_vector_comparison_type_name (int type)$/;"	f
vl_get_version_string	.\vlfeat\vl\generic.c	/^vl_get_version_string ()$/;"	f
vl_gmm_cluster	.\vlfeat\vl\gmm.c	/^double vl_gmm_cluster (VlGMM * self,$/;"	f
vl_gmm_delete	.\vlfeat\vl\gmm.c	/^vl_gmm_delete (VlGMM * self)$/;"	f
vl_gmm_em	.\vlfeat\vl\gmm.c	/^double vl_gmm_em (VlGMM * self, void const * data, vl_size numData)$/;"	f
vl_gmm_get_covariance_lower_bounds	.\vlfeat\vl\gmm.c	/^double const * vl_gmm_get_covariance_lower_bounds (VlGMM const * self)$/;"	f
vl_gmm_get_covariances	.\vlfeat\vl\gmm.c	/^vl_gmm_get_covariances (VlGMM const * self)$/;"	f
vl_gmm_get_data_type	.\vlfeat\vl\gmm.c	/^vl_gmm_get_data_type (VlGMM const * self)$/;"	f
vl_gmm_get_dimension	.\vlfeat\vl\gmm.c	/^vl_gmm_get_dimension (VlGMM const * self)$/;"	f
vl_gmm_get_initialization	.\vlfeat\vl\gmm.c	/^vl_gmm_get_initialization (VlGMM const * self)$/;"	f
vl_gmm_get_kmeans_init_object	.\vlfeat\vl\gmm.c	/^VlKMeans * vl_gmm_get_kmeans_init_object (VlGMM const * self)$/;"	f
vl_gmm_get_loglikelihood	.\vlfeat\vl\gmm.c	/^vl_gmm_get_loglikelihood (VlGMM const * self)$/;"	f
vl_gmm_get_max_num_iterations	.\vlfeat\vl\gmm.c	/^vl_gmm_get_max_num_iterations (VlGMM const * self)$/;"	f
vl_gmm_get_means	.\vlfeat\vl\gmm.c	/^vl_gmm_get_means (VlGMM const * self)$/;"	f
vl_gmm_get_num_clusters	.\vlfeat\vl\gmm.c	/^vl_gmm_get_num_clusters (VlGMM const * self)$/;"	f
vl_gmm_get_num_data	.\vlfeat\vl\gmm.c	/^vl_gmm_get_num_data (VlGMM const * self)$/;"	f
vl_gmm_get_num_repetitions	.\vlfeat\vl\gmm.c	/^vl_gmm_get_num_repetitions (VlGMM const * self)$/;"	f
vl_gmm_get_posteriors	.\vlfeat\vl\gmm.c	/^vl_gmm_get_posteriors (VlGMM const * self)$/;"	f
vl_gmm_get_priors	.\vlfeat\vl\gmm.c	/^vl_gmm_get_priors (VlGMM const * self)$/;"	f
vl_gmm_get_verbosity	.\vlfeat\vl\gmm.c	/^vl_gmm_get_verbosity (VlGMM const * self)$/;"	f
vl_gmm_init_with_kmeans	.\vlfeat\vl\gmm.c	/^vl_gmm_init_with_kmeans$/;"	f
vl_gmm_init_with_rand_data	.\vlfeat\vl\gmm.c	/^vl_gmm_init_with_rand_data$/;"	f
vl_gmm_new	.\vlfeat\vl\gmm.c	/^vl_gmm_new (vl_type dataType, vl_size dimension, vl_size numComponents)$/;"	f
vl_gmm_new_copy	.\vlfeat\vl\gmm.c	/^vl_gmm_new_copy (VlGMM const * self)$/;"	f
vl_gmm_reset	.\vlfeat\vl\gmm.c	/^vl_gmm_reset (VlGMM * self)$/;"	f
vl_gmm_set_covariance_lower_bound	.\vlfeat\vl\gmm.c	/^void vl_gmm_set_covariance_lower_bound (VlGMM * self, double bound)$/;"	f
vl_gmm_set_covariance_lower_bounds	.\vlfeat\vl\gmm.c	/^void vl_gmm_set_covariance_lower_bounds (VlGMM * self, double const * bounds)$/;"	f
vl_gmm_set_covariances	.\vlfeat\vl\gmm.c	/^void vl_gmm_set_covariances (VlGMM * self, void const * covariances)$/;"	f
vl_gmm_set_initialization	.\vlfeat\vl\gmm.c	/^vl_gmm_set_initialization (VlGMM * self, VlGMMInitialization init)$/;"	f
vl_gmm_set_kmeans_init_object	.\vlfeat\vl\gmm.c	/^void vl_gmm_set_kmeans_init_object (VlGMM * self, VlKMeans * kmeans)$/;"	f
vl_gmm_set_max_num_iterations	.\vlfeat\vl\gmm.c	/^vl_gmm_set_max_num_iterations (VlGMM * self, vl_size maxNumIterations)$/;"	f
vl_gmm_set_means	.\vlfeat\vl\gmm.c	/^vl_gmm_set_means (VlGMM * self, void const * means)$/;"	f
vl_gmm_set_num_repetitions	.\vlfeat\vl\gmm.c	/^vl_gmm_set_num_repetitions (VlGMM * self, vl_size numRepetitions)$/;"	f
vl_gmm_set_priors	.\vlfeat\vl\gmm.c	/^void vl_gmm_set_priors (VlGMM * self, void const * priors)$/;"	f
vl_gmm_set_verbosity	.\vlfeat\vl\gmm.c	/^vl_gmm_set_verbosity (VlGMM * self, int verbosity)$/;"	f
vl_grad	.\vlfeat\toolbox\misc\vl_grad.m	/^function [Ix,Iy] = vl_grad(I,varargin) ;$/;"	f
vl_harris	.\vlfeat\toolbox\vl_harris.m	/^function [H,details] = vl_harris(I,si,alpha)$/;"	f
vl_hat	.\vlfeat\toolbox\geometry\vl_hat.m	/^function H = vl_hat(om)$/;"	f
vl_heap_left_child	.\vlfeat\vl\heap-def.h	/^vl_heap_left_child (vl_uindex index)$/;"	f
vl_heap_parent	.\vlfeat\vl\heap-def.h	/^vl_heap_parent (vl_uindex index)$/;"	f
vl_heap_right_child	.\vlfeat\vl\heap-def.h	/^vl_heap_right_child (vl_uindex index)$/;"	f
vl_help	.\vlfeat\toolbox\vl_help.m	/^function vl_help(topic, varargin)$/;"	f
vl_hikm_copy_subset	.\vlfeat\vl\hikmeans.c	/^vl_hikm_copy_subset (vl_uint8 const * data,$/;"	f
vl_hikm_delete	.\vlfeat\vl\hikmeans.c	/^vl_hikm_delete (VlHIKMTree *f)$/;"	f
vl_hikm_get_K	.\vlfeat\vl\hikmeans.c	/^vl_hikm_get_K (VlHIKMTree const *f)$/;"	f
vl_hikm_get_depth	.\vlfeat\vl\hikmeans.c	/^vl_hikm_get_depth (VlHIKMTree const *f)$/;"	f
vl_hikm_get_max_niters	.\vlfeat\vl\hikmeans.c	/^vl_hikm_get_max_niters (VlHIKMTree const *f)$/;"	f
vl_hikm_get_ndims	.\vlfeat\vl\hikmeans.c	/^vl_hikm_get_ndims (VlHIKMTree const* f)$/;"	f
vl_hikm_get_root	.\vlfeat\vl\hikmeans.c	/^vl_hikm_get_root (VlHIKMTree const *f)$/;"	f
vl_hikm_get_verbosity	.\vlfeat\vl\hikmeans.c	/^vl_hikm_get_verbosity (VlHIKMTree const *f)$/;"	f
vl_hikm_init	.\vlfeat\vl\hikmeans.c	/^vl_hikm_init (VlHIKMTree *f, vl_size M, vl_size K, vl_size depth)$/;"	f
vl_hikm_new	.\vlfeat\vl\hikmeans.c	/^vl_hikm_new (int method)$/;"	f
vl_hikm_push	.\vlfeat\vl\hikmeans.c	/^vl_hikm_push (VlHIKMTree *f, vl_uint32 *asgn, vl_uint8 const *data, vl_size N)$/;"	f
vl_hikm_set_max_niters	.\vlfeat\vl\hikmeans.c	/^vl_hikm_set_max_niters (VlHIKMTree *f, int max_niters)$/;"	f
vl_hikm_set_verbosity	.\vlfeat\vl\hikmeans.c	/^vl_hikm_set_verbosity (VlHIKMTree *f, int verb)$/;"	f
vl_hikm_train	.\vlfeat\vl\hikmeans.c	/^vl_hikm_train (VlHIKMTree *f, vl_uint8 const *data, vl_size N)$/;"	f
vl_hikmeans	.\vlfeat\toolbox\kmeans\vl_hikmeans.m	/^function [tree,asgn] = vl_hikmeans(data,K,nleaves)$/;"	f
vl_hikmeanshist	.\vlfeat\toolbox\kmeans\vl_hikmeanshist.m	/^function h = vl_hikmeanshist(tree,path)$/;"	f
vl_histmarg	.\vlfeat\toolbox\misc\vl_histmarg.m	/^function H = vl_histmarg(H, dims)$/;"	f
vl_hog_delete	.\vlfeat\vl\hog.c	/^vl_hog_delete (VlHog * self)$/;"	f
vl_hog_extract	.\vlfeat\vl\hog.c	/^vl_hog_extract (VlHog * self, float * features)$/;"	f
vl_hog_get_dimension	.\vlfeat\vl\hog.c	/^vl_hog_get_dimension (VlHog const * self)$/;"	f
vl_hog_get_glyph_size	.\vlfeat\vl\hog.c	/^vl_hog_get_glyph_size (VlHog const * self)$/;"	f
vl_hog_get_height	.\vlfeat\vl\hog.c	/^vl_hog_get_height (VlHog * self)$/;"	f
vl_hog_get_permutation	.\vlfeat\vl\hog.c	/^vl_hog_get_permutation (VlHog const * self)$/;"	f
vl_hog_get_use_bilinear_orientation_assignments	.\vlfeat\vl\hog.c	/^vl_hog_get_use_bilinear_orientation_assignments (VlHog const * self) {$/;"	f
vl_hog_get_width	.\vlfeat\vl\hog.c	/^vl_hog_get_width (VlHog * self)$/;"	f
vl_hog_new	.\vlfeat\vl\hog.c	/^vl_hog_new (VlHogVariant variant, vl_size numOrientations, vl_bool transposed)$/;"	f
vl_hog_prepare_buffers	.\vlfeat\vl\hog.c	/^vl_hog_prepare_buffers (VlHog * self, vl_size width, vl_size height, vl_size cellSize)$/;"	f	file:
vl_hog_put_image	.\vlfeat\vl\hog.c	/^vl_hog_put_image (VlHog * self,$/;"	f
vl_hog_put_polar_field	.\vlfeat\vl\hog.c	/^void vl_hog_put_polar_field (VlHog * self,$/;"	f
vl_hog_render	.\vlfeat\vl\hog.c	/^vl_hog_render (VlHog const * self,$/;"	f
vl_hog_set_use_bilinear_orientation_assignments	.\vlfeat\vl\hog.c	/^vl_hog_set_use_bilinear_orientation_assignments (VlHog * self, vl_bool x) {$/;"	f
vl_homogeneouskernelmap_delete	.\vlfeat\vl\homkermap.c	/^vl_homogeneouskernelmap_delete (VlHomogeneousKernelMap * self)$/;"	f
vl_homogeneouskernelmap_get_dimension	.\vlfeat\vl\homkermap.c	/^vl_homogeneouskernelmap_get_dimension (VlHomogeneousKernelMap const * self)$/;"	f
vl_homogeneouskernelmap_get_kernel_type	.\vlfeat\vl\homkermap.c	/^vl_homogeneouskernelmap_get_kernel_type (VlHomogeneousKernelMap const * self)$/;"	f
vl_homogeneouskernelmap_get_order	.\vlfeat\vl\homkermap.c	/^vl_homogeneouskernelmap_get_order (VlHomogeneousKernelMap const * self)$/;"	f
vl_homogeneouskernelmap_get_smooth_spectrum	.\vlfeat\vl\homkermap.c	/^vl_homogeneouskernelmap_get_smooth_spectrum (VlHomogeneousKernelMap const * self, double omega)$/;"	f
vl_homogeneouskernelmap_get_spectrum	.\vlfeat\vl\homkermap.c	/^vl_homogeneouskernelmap_get_spectrum (VlHomogeneousKernelMap const * self, double omega)$/;"	f
vl_homogeneouskernelmap_get_window_type	.\vlfeat\vl\homkermap.c	/^vl_homogeneouskernelmap_get_window_type (VlHomogeneousKernelMap const * self)$/;"	f
vl_homogeneouskernelmap_new	.\vlfeat\vl\homkermap.c	/^vl_homogeneouskernelmap_new (VlHomogeneousKernelType kernelType,$/;"	f
vl_ihat	.\vlfeat\toolbox\geometry\vl_ihat.m	/^function om = vl_ihat( H )$/;"	f
vl_ikm_delete	.\vlfeat\vl\ikmeans.c	/^vl_ikm_delete (VlIKMFilt* f)$/;"	f
vl_ikm_get_K	.\vlfeat\vl\ikmeans.c	/^vl_ikm_get_K (VlIKMFilt const* f)$/;"	f
vl_ikm_get_centers	.\vlfeat\vl\ikmeans.c	/^vl_ikm_get_centers (VlIKMFilt const* f)$/;"	f
vl_ikm_get_max_niters	.\vlfeat\vl\ikmeans.c	/^vl_ikm_get_max_niters (VlIKMFilt const* f)$/;"	f
vl_ikm_get_ndims	.\vlfeat\vl\ikmeans.c	/^vl_ikm_get_ndims (VlIKMFilt const* f)$/;"	f
vl_ikm_get_verbosity	.\vlfeat\vl\ikmeans.c	/^vl_ikm_get_verbosity (VlIKMFilt const* f)$/;"	f
vl_ikm_new	.\vlfeat\vl\ikmeans.c	/^vl_ikm_new (int method)$/;"	f
vl_ikm_push	.\vlfeat\vl\ikmeans.c	/^vl_ikm_push (VlIKMFilt *f, vl_uint32 *asgn, vl_uint8 const *data, vl_size N) {$/;"	f
vl_ikm_push_one	.\vlfeat\vl\ikmeans.c	/^vl_ikm_push_one (vl_ikmacc_t const *centers,$/;"	f
vl_ikm_set_max_niters	.\vlfeat\vl\ikmeans.c	/^vl_ikm_set_max_niters (VlIKMFilt *f, vl_size max_niters)$/;"	f
vl_ikm_set_verbosity	.\vlfeat\vl\ikmeans.c	/^vl_ikm_set_verbosity (VlIKMFilt *f, int verb)$/;"	f
vl_ikm_train	.\vlfeat\vl\ikmeans.c	/^vl_ikm_train (VlIKMFilt *f, vl_uint8 const *data, vl_size N)$/;"	f
vl_ikmacc_t	.\vlfeat\vl\ikmeans.h	/^typedef vl_int32 vl_ikmacc_t ; \/**< IKM accumulator data type *\/$/;"	t
vl_ikmeanshist	.\vlfeat\toolbox\kmeans\vl_ikmeanshist.m	/^function h = vl_ikmeanshist(K,asgn)$/;"	f
vl_imarray	.\vlfeat\toolbox\imop\vl_imarray.m	/^function J = vl_imarray(A,varargin)$/;"	f
vl_imarraysc	.\vlfeat\toolbox\imop\vl_imarraysc.m	/^function J = vl_imarraysc(A, varargin)$/;"	f
vl_imdown	.\vlfeat\toolbox\imop\vl_imdown.m	/^function J = vl_imdown(I, varargin)$/;"	f
vl_imgrad	.\vlfeat\toolbox\imop\vl_imgrad.m	/^function [Fx,Fy] = vl_imgrad(F,varargin) ;$/;"	f
vl_impattern	.\vlfeat\toolbox\imop\vl_impattern.m	/^function im = vl_impattern(varargin)$/;"	f
vl_imreadgray	.\vlfeat\toolbox\imop\vl_imreadbw.m	/^function I = vl_imreadgray(file,varargin)$/;"	f
vl_imreadgray	.\vlfeat\toolbox\imop\vl_imreadgray.m	/^function I = vl_imreadgray(file,varargin)$/;"	f
vl_imsc	.\vlfeat\toolbox\imop\vl_imsc.m	/^function J=vl_imsc(I)$/;"	f
vl_imseg	.\vlfeat\toolbox\quickshift\vl_imseg.m	/^function Q = vl_imseg(I,labels)$/;"	f
vl_imup	.\vlfeat\toolbox\imop\vl_imup.m	/^function J = vl_imup(I)$/;"	f
vl_imwbackward	.\vlfeat\toolbox\imop\vl_imwbackward.m	/^function [wI,wIx,wIy] = vl_imwbackward(varargin)$/;"	f
vl_imwhiten	.\vlfeat\toolbox\imop\vl_imwhiten.m	/^function J=vl_imwhiten(I,alpha,cutoff)$/;"	f
vl_index	.\vlfeat\vl\host.h	/^typedef vl_int32            vl_index ;$/;"	t
vl_index	.\vlfeat\vl\host.h	/^typedef vl_int64            vl_index ;   \/**< @brief Signed version of ::vl_size and ::vl_uindex *\/$/;"	t
vl_infinity_d	.\vlfeat\vl\mathop.h	/^  const vl_infinity_d =$/;"	v
vl_infinity_f	.\vlfeat\vl\mathop.h	/^  const vl_infinity_f =$/;"	v
vl_int	.\vlfeat\vl\host.h	/^typedef int                 vl_int ;     \/**< @brief Same as @c int. *\/$/;"	t
vl_int	.\vlfeat\vl\host.h	/^typedef int                 vl_int ;$/;"	t
vl_int16	.\vlfeat\vl\host.h	/^typedef short               vl_int16 ;   \/**< @brief Signed 16-bit integer. *\/$/;"	t
vl_int16	.\vlfeat\vl\host.h	/^typedef short               vl_int16 ;$/;"	t
vl_int32	.\vlfeat\vl\host.h	/^typedef int                 vl_int32 ;   \/**< @brief Signed 32-bit integer. *\/$/;"	t
vl_int32	.\vlfeat\vl\host.h	/^typedef int                 vl_int32 ;$/;"	t
vl_int64	.\vlfeat\vl\host.h	/^typedef __int64             vl_int64 ;$/;"	t
vl_int64	.\vlfeat\vl\host.h	/^typedef long long           vl_int64 ;   \/**< @brief Signed 64-bit integer. *\/$/;"	t
vl_int64	.\vlfeat\vl\host.h	/^typedef long long           vl_int64 ;$/;"	t
vl_int8	.\vlfeat\vl\host.h	/^typedef char                vl_int8  ;   \/**< @brief Signed  8-bit integer. *\/$/;"	t
vl_int8	.\vlfeat\vl\host.h	/^typedef char                vl_int8  ;$/;"	t
vl_intptr	.\vlfeat\vl\host.h	/^typedef vl_int32            vl_intptr ;$/;"	t
vl_intptr	.\vlfeat\vl\host.h	/^typedef vl_int64            vl_intptr ;  \/**< @brief Integer holding a pointer. *\/$/;"	t
vl_irodrigues	.\vlfeat\vl\rodrigues.c	/^void vl_irodrigues(double* om_pt, double* dom_pt, const double* R_pt)$/;"	f
vl_is_inf_d	.\vlfeat\vl\mathop.h	/^vl_is_inf_d (double x)$/;"	f
vl_is_inf_f	.\vlfeat\vl\mathop.h	/^vl_is_inf_f (float x)$/;"	f
vl_is_nan_d	.\vlfeat\vl\mathop.h	/^vl_is_nan_d (double x)$/;"	f
vl_is_nan_f	.\vlfeat\vl\mathop.h	/^vl_is_nan_f (float x)$/;"	f
vl_isoctave	.\vlfeat\toolbox\misc\vl_isoctave.m	/^function x = vl_isoctave()$/;"	f
vl_kdforest_build	.\vlfeat\vl\kdtree.c	/^vl_kdforest_build (VlKDForest * self, vl_size numData, void const * data)$/;"	f
vl_kdforest_delete	.\vlfeat\vl\kdtree.c	/^vl_kdforest_delete (VlKDForest * self)$/;"	f
vl_kdforest_get_data_dimension	.\vlfeat\vl\kdtree.c	/^vl_kdforest_get_data_dimension (VlKDForest const * self)$/;"	f
vl_kdforest_get_data_type	.\vlfeat\vl\kdtree.c	/^vl_kdforest_get_data_type (VlKDForest const * self)$/;"	f
vl_kdforest_get_depth_of_tree	.\vlfeat\vl\kdtree.c	/^vl_kdforest_get_depth_of_tree (VlKDForest const * self, vl_uindex treeIndex)$/;"	f
vl_kdforest_get_max_num_comparisons	.\vlfeat\vl\kdtree.c	/^vl_kdforest_get_max_num_comparisons (VlKDForest * self)$/;"	f
vl_kdforest_get_num_nodes_of_tree	.\vlfeat\vl\kdtree.c	/^vl_kdforest_get_num_nodes_of_tree (VlKDForest const * self, vl_uindex treeIndex)$/;"	f
vl_kdforest_get_num_trees	.\vlfeat\vl\kdtree.c	/^vl_kdforest_get_num_trees (VlKDForest const * self)$/;"	f
vl_kdforest_get_searcher	.\vlfeat\vl\kdtree.c	/^vl_kdforest_get_searcher (VlKDForest const * self, vl_uindex pos)$/;"	f
vl_kdforest_get_thresholding_method	.\vlfeat\vl\kdtree.c	/^vl_kdforest_get_thresholding_method (VlKDForest const * self)$/;"	f
vl_kdforest_new	.\vlfeat\vl\kdtree.c	/^vl_kdforest_new (vl_type dataType,$/;"	f
vl_kdforest_new_searcher	.\vlfeat\vl\kdtree.c	/^vl_kdforest_new_searcher (VlKDForest * kdforest)$/;"	f
vl_kdforest_query	.\vlfeat\vl\kdtree.c	/^vl_kdforest_query (VlKDForest * self,$/;"	f
vl_kdforest_query_recursively	.\vlfeat\vl\kdtree.c	/^vl_kdforest_query_recursively (VlKDForestSearcher * searcher,$/;"	f
vl_kdforest_query_with_array	.\vlfeat\vl\kdtree.c	/^vl_kdforest_query_with_array (VlKDForest * self,$/;"	f
vl_kdforest_set_max_num_comparisons	.\vlfeat\vl\kdtree.c	/^vl_kdforest_set_max_num_comparisons (VlKDForest * self, vl_size n)$/;"	f
vl_kdforest_set_thresholding_method	.\vlfeat\vl\kdtree.c	/^vl_kdforest_set_thresholding_method (VlKDForest * self, VlKDTreeThresholdingMethod method)$/;"	f
vl_kdforestsearcher_delete	.\vlfeat\vl\kdtree.c	/^vl_kdforestsearcher_delete (VlKDForestSearcher * self)$/;"	f
vl_kdforestsearcher_get_forest	.\vlfeat\vl\kdtree.c	/^vl_kdforestsearcher_get_forest (VlKDForestSearcher const * self)$/;"	f
vl_kdforestsearcher_query	.\vlfeat\vl\kdtree.c	/^vl_kdforestsearcher_query (VlKDForestSearcher * self,$/;"	f
vl_kdtree_build_recursively	.\vlfeat\vl\kdtree.c	/^vl_kdtree_build_recursively$/;"	f	file:
vl_kdtree_calc_bounds_recursively	.\vlfeat\vl\kdtree.c	/^vl_kdtree_calc_bounds_recursively (VlKDTree * tree,$/;"	f	file:
vl_kdtree_compare_index_entries	.\vlfeat\vl\kdtree.c	/^vl_kdtree_compare_index_entries (void const * a,$/;"	f
vl_kdtree_node_new	.\vlfeat\vl\kdtree.c	/^vl_kdtree_node_new (VlKDTree * tree, vl_uindex parentIndex)$/;"	f	file:
vl_kmeans_cluster	.\vlfeat\vl\kmeans.c	/^vl_kmeans_cluster (VlKMeans * self,$/;"	f
vl_kmeans_delete	.\vlfeat\vl\kmeans.c	/^vl_kmeans_delete (VlKMeans * self)$/;"	f
vl_kmeans_get_algorithm	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_algorithm (VlKMeans const * self)$/;"	f
vl_kmeans_get_centers	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_centers (VlKMeans const * self)$/;"	f
vl_kmeans_get_data_type	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_data_type (VlKMeans const * self)$/;"	f
vl_kmeans_get_dimension	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_dimension (VlKMeans const * self)$/;"	f
vl_kmeans_get_distance	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_distance (VlKMeans const * self)$/;"	f
vl_kmeans_get_energy	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_energy (VlKMeans const * self)$/;"	f
vl_kmeans_get_initialization	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_initialization (VlKMeans const * self)$/;"	f
vl_kmeans_get_max_num_comparisons	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_max_num_comparisons (VlKMeans const * self)$/;"	f
vl_kmeans_get_max_num_iterations	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_max_num_iterations (VlKMeans const * self)$/;"	f
vl_kmeans_get_min_energy_variation	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_min_energy_variation (VlKMeans const * self)$/;"	f
vl_kmeans_get_num_centers	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_num_centers (VlKMeans const * self)$/;"	f
vl_kmeans_get_num_repetitions	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_num_repetitions (VlKMeans const * self)$/;"	f
vl_kmeans_get_num_trees	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_num_trees (VlKMeans const * self)$/;"	f
vl_kmeans_get_verbosity	.\vlfeat\vl\kmeans.h	/^vl_kmeans_get_verbosity (VlKMeans const * self)$/;"	f
vl_kmeans_init_centers_plus_plus	.\vlfeat\vl\kmeans.c	/^vl_kmeans_init_centers_plus_plus$/;"	f
vl_kmeans_init_centers_with_rand_data	.\vlfeat\vl\kmeans.c	/^vl_kmeans_init_centers_with_rand_data$/;"	f
vl_kmeans_new	.\vlfeat\vl\kmeans.c	/^vl_kmeans_new (vl_type dataType,$/;"	f
vl_kmeans_new_copy	.\vlfeat\vl\kmeans.c	/^vl_kmeans_new_copy (VlKMeans const * kmeans)$/;"	f
vl_kmeans_quantize	.\vlfeat\vl\kmeans.c	/^vl_kmeans_quantize$/;"	f
vl_kmeans_quantize_ann	.\vlfeat\vl\kmeans.c	/^vl_kmeans_quantize_ann$/;"	f
vl_kmeans_refine_centers	.\vlfeat\vl\kmeans.c	/^vl_kmeans_refine_centers$/;"	f
vl_kmeans_reset	.\vlfeat\vl\kmeans.c	/^vl_kmeans_reset (VlKMeans * self)$/;"	f
vl_kmeans_set_algorithm	.\vlfeat\vl\kmeans.h	/^vl_kmeans_set_algorithm (VlKMeans * self, VlKMeansAlgorithm algorithm)$/;"	f
vl_kmeans_set_centers	.\vlfeat\vl\kmeans.c	/^vl_kmeans_set_centers$/;"	f
vl_kmeans_set_initialization	.\vlfeat\vl\kmeans.h	/^vl_kmeans_set_initialization (VlKMeans * self,$/;"	f
vl_kmeans_set_max_num_comparisons	.\vlfeat\vl\kmeans.h	/^vl_kmeans_set_max_num_comparisons (VlKMeans * self,$/;"	f
vl_kmeans_set_max_num_iterations	.\vlfeat\vl\kmeans.h	/^vl_kmeans_set_max_num_iterations (VlKMeans * self, vl_size maxNumIterations)$/;"	f
vl_kmeans_set_min_energy_variation	.\vlfeat\vl\kmeans.h	/^vl_kmeans_set_min_energy_variation (VlKMeans * self,$/;"	f
vl_kmeans_set_num_repetitions	.\vlfeat\vl\kmeans.h	/^vl_kmeans_set_num_repetitions (VlKMeans * self,$/;"	f
vl_kmeans_set_num_trees	.\vlfeat\vl\kmeans.h	/^vl_kmeans_set_num_trees (VlKMeans * self, vl_size numTrees)$/;"	f
vl_kmeans_set_verbosity	.\vlfeat\vl\kmeans.h	/^vl_kmeans_set_verbosity (VlKMeans * self, int verbosity)$/;"	f
vl_lapack_dlasv2	.\vlfeat\vl\mathop.c	/^vl_lapack_dlasv2 (double *smin,$/;"	f
vl_lbp_delete	.\vlfeat\vl\lbp.c	/^vl_lbp_delete(VlLbp * self) {$/;"	f
vl_lbp_get_dimension	.\vlfeat\vl\lbp.c	/^VL_EXPORT vl_size vl_lbp_get_dimension(VlLbp * self)$/;"	f
vl_lbp_new	.\vlfeat\vl\lbp.c	/^vl_lbp_new(VlLbpMappingType type, vl_bool transposed)$/;"	f
vl_lbp_process	.\vlfeat\vl\lbp.c	/^vl_lbp_process (VlLbp * self,$/;"	f
vl_lbpfliplr	.\vlfeat\toolbox\misc\vl_lbpfliplr.m	/^function f = vl_lbpfliplr(f)$/;"	f
vl_linespec2prop	.\vlfeat\toolbox\plotop\vl_linespec2prop.m	/^function prop=vl_linespec2prop(spec)$/;"	f
vl_liopdesc_delete	.\vlfeat\vl\liop.c	/^vl_liopdesc_delete (VlLiopDesc * self)$/;"	f
vl_liopdesc_get_dimension	.\vlfeat\vl\liop.c	/^vl_liopdesc_get_dimension (VlLiopDesc const * self)$/;"	f
vl_liopdesc_get_intensity_threshold	.\vlfeat\vl\liop.c	/^vl_liopdesc_get_intensity_threshold (VlLiopDesc const * self)$/;"	f
vl_liopdesc_get_neighbourhood_radius	.\vlfeat\vl\liop.c	/^vl_liopdesc_get_neighbourhood_radius (VlLiopDesc const * self)$/;"	f
vl_liopdesc_get_num_neighbours	.\vlfeat\vl\liop.c	/^vl_liopdesc_get_num_neighbours (VlLiopDesc const * self)$/;"	f
vl_liopdesc_get_num_spatial_bins	.\vlfeat\vl\liop.c	/^vl_liopdesc_get_num_spatial_bins (VlLiopDesc const * self)$/;"	f
vl_liopdesc_new	.\vlfeat\vl\liop.c	/^vl_liopdesc_new (vl_int numNeighbours, vl_int numSpatialBins,$/;"	f
vl_liopdesc_new_basic	.\vlfeat\vl\liop.c	/^VlLiopDesc * vl_liopdesc_new_basic (vl_size sideLength)$/;"	f
vl_liopdesc_process	.\vlfeat\vl\liop.c	/^vl_liopdesc_process (VlLiopDesc * self, float * desc, float const * patch)$/;"	f
vl_liopdesc_set_intensity_threshold	.\vlfeat\vl\liop.c	/^vl_liopdesc_set_intensity_threshold (VlLiopDesc * self, float x)$/;"	f
vl_lock_state	.\vlfeat\vl\generic.c	/^vl_lock_state (void)$/;"	f	file:
vl_log2_d	.\vlfeat\vl\mathop.h	/^vl_log2_d (double x)$/;"	f
vl_log2_f	.\vlfeat\vl\mathop.h	/^vl_log2_f (float x)$/;"	f
vl_malloc	.\vlfeat\vl\generic.c	/^vl_malloc (size_t n)$/;"	f
vl_matlabversion	.\vlfeat\toolbox\misc\vl_matlabversion.m	/^function v = vl_matlabversion$/;"	f
vl_mod_2pi_d	.\vlfeat\vl\mathop.h	/^vl_mod_2pi_d (double x)$/;"	f
vl_mod_2pi_f	.\vlfeat\vl\mathop.h	/^vl_mod_2pi_f (float x)$/;"	f
vl_mser_acc	.\vlfeat\vl\mser.h	/^typedef float vl_mser_acc ;$/;"	t
vl_mser_delete	.\vlfeat\vl\mser.c	/^vl_mser_delete (VlMserFilt* f)$/;"	f
vl_mser_ell_fit	.\vlfeat\vl\mser.c	/^vl_mser_ell_fit (VlMserFilt* f)$/;"	f
vl_mser_get_delta	.\vlfeat\vl\mser.h	/^vl_mser_get_delta (VlMserFilt const *f)$/;"	f
vl_mser_get_ell	.\vlfeat\vl\mser.h	/^vl_mser_get_ell (VlMserFilt const* f)$/;"	f
vl_mser_get_ell_dof	.\vlfeat\vl\mser.h	/^vl_mser_get_ell_dof (VlMserFilt const* f)$/;"	f
vl_mser_get_ell_num	.\vlfeat\vl\mser.h	/^vl_mser_get_ell_num (VlMserFilt const* f)$/;"	f
vl_mser_get_max_area	.\vlfeat\vl\mser.h	/^vl_mser_get_max_area (VlMserFilt const *f)$/;"	f
vl_mser_get_max_variation	.\vlfeat\vl\mser.h	/^vl_mser_get_max_variation (VlMserFilt const *f)$/;"	f
vl_mser_get_min_area	.\vlfeat\vl\mser.h	/^vl_mser_get_min_area (VlMserFilt const *f)$/;"	f
vl_mser_get_min_diversity	.\vlfeat\vl\mser.h	/^vl_mser_get_min_diversity (VlMserFilt const *f)$/;"	f
vl_mser_get_regions	.\vlfeat\vl\mser.h	/^vl_mser_get_regions (VlMserFilt const* f)$/;"	f
vl_mser_get_regions_num	.\vlfeat\vl\mser.h	/^vl_mser_get_regions_num (VlMserFilt const* f)$/;"	f
vl_mser_get_stats	.\vlfeat\vl\mser.h	/^vl_mser_get_stats (VlMserFilt const *f)$/;"	f
vl_mser_new	.\vlfeat\vl\mser.c	/^vl_mser_new (int ndims, int const* dims)$/;"	f
vl_mser_pix	.\vlfeat\vl\mser.h	/^typedef vl_uint8 vl_mser_pix ;$/;"	t
vl_mser_process	.\vlfeat\vl\mser.c	/^vl_mser_process (VlMserFilt* f, vl_mser_pix const* im)$/;"	f
vl_mser_set_delta	.\vlfeat\vl\mser.h	/^vl_mser_set_delta (VlMserFilt *f, vl_mser_pix x)$/;"	f
vl_mser_set_max_area	.\vlfeat\vl\mser.h	/^vl_mser_set_max_area (VlMserFilt *f, double x)$/;"	f
vl_mser_set_max_variation	.\vlfeat\vl\mser.h	/^vl_mser_set_max_variation (VlMserFilt *f, double x)$/;"	f
vl_mser_set_min_area	.\vlfeat\vl\mser.h	/^vl_mser_set_min_area (VlMserFilt *f, double x)$/;"	f
vl_mser_set_min_diversity	.\vlfeat\vl\mser.h	/^vl_mser_set_min_diversity (VlMserFilt *f, double x)$/;"	f
vl_nan_d	.\vlfeat\vl\mathop.h	/^  const vl_nan_d =$/;"	v
vl_nan_f	.\vlfeat\vl\mathop.h	/^  const vl_nan_f =$/;"	v
vl_noprefix	.\vlfeat\toolbox\vl_noprefix.m	/^function vl_noprefix$/;"	f
vl_numder	.\vlfeat\toolbox\misc\vl_numder.m	/^function d = vl_numder(func, x, varargin)$/;"	f
vl_numder2	.\vlfeat\toolbox\misc\vl_numder2.m	/^function d = vl_numder2(func, x, varargin)$/;"	f
vl_override	.\vlfeat\toolbox\misc\vl_override.m	/^function config = vl_override(config,update,varargin)$/;"	f
vl_pegasos	.\vlfeat\toolbox\misc\vl_pegasos.m	/^function [w b info] = vl_pegasos(X,Y,LAMBDA, varargin)$/;"	f
vl_pgm_extract_data	.\vlfeat\vl\pgm.c	/^vl_pgm_extract_data (FILE* f, VlPgmImage const *im, void *data)$/;"	f
vl_pgm_extract_head	.\vlfeat\vl\pgm.c	/^vl_pgm_extract_head (FILE* f, VlPgmImage *im)$/;"	f
vl_pgm_get_bpp	.\vlfeat\vl\pgm.c	/^vl_pgm_get_bpp (VlPgmImage const *im)$/;"	f
vl_pgm_get_npixels	.\vlfeat\vl\pgm.c	/^vl_pgm_get_npixels (VlPgmImage const *im)$/;"	f
vl_pgm_insert	.\vlfeat\vl\pgm.c	/^vl_pgm_insert(FILE* f, VlPgmImage const *im, void const *data)$/;"	f
vl_pgm_read_new	.\vlfeat\vl\pgm.c	/^int vl_pgm_read_new (char const *name, VlPgmImage *im, vl_uint8** data)$/;"	f
vl_pgm_read_new_f	.\vlfeat\vl\pgm.c	/^int vl_pgm_read_new_f (char const *name,  VlPgmImage *im, float** data)$/;"	f
vl_pgm_write	.\vlfeat\vl\pgm.c	/^int vl_pgm_write (char const *name, vl_uint8 const* data, int width, int height)$/;"	f
vl_pgm_write_f	.\vlfeat\vl\pgm.c	/^int vl_pgm_write_f (char const *name, float const* data, int width, int height)$/;"	f
vl_phow	.\vlfeat\toolbox\sift\vl_phow.m	/^function [frames, descrs] = vl_phow(im, varargin)$/;"	f
vl_plotbox	.\vlfeat\toolbox\plotop\vl_plotbox.m	/^function [h, t] = vl_plotbox(boxes, varargin)$/;"	f
vl_plotframe	.\vlfeat\toolbox\plotop\vl_plotframe.m	/^function h = vl_plotframe(frames,varargin)$/;"	f
vl_plotgrid	.\vlfeat\toolbox\plotop\vl_plotgrid.m	/^function h=vl_plotgrid(x,y,varargin)$/;"	f
vl_plotpoint	.\vlfeat\toolbox\plotop\vl_plotpoint.m	/^function h=vl_plotpoint(V,varargin)$/;"	f
vl_plotsiftdescriptor	.\vlfeat\toolbox\sift\vl_plotsiftdescriptor.m	/^function h=vl_plotsiftdescriptor(d,f,varargin)$/;"	f
vl_plotss	.\vlfeat\toolbox\sift\vl_plotss.m	/^function vl_plotss(ss, varargin)$/;"	f
vl_plotstyle	.\vlfeat\toolbox\plotop\vl_plotstyle.m	/^function style = vl_plotstyle(index)$/;"	f
vl_pr	.\vlfeat\toolbox\plotop\vl_pr.m	/^function [recall, precision, info] = vl_pr(labels, scores, varargin)$/;"	f
vl_printsize	.\vlfeat\toolbox\plotop\vl_printsize.m	/^function vl_printsize(varargin)$/;"	f
vl_qs_type	.\vlfeat\vl\quickshift.h	/^typedef double vl_qs_type ;$/;"	t
vl_quickseg	.\vlfeat\toolbox\quickshift\vl_quickseg.m	/^function [Iseg labels map gaps E] = vl_quickseg(I, ratio, kernelsize, maxdist)$/;"	f
vl_quickshift_delete	.\vlfeat\vl\quickshift.c	/^void vl_quickshift_delete(VlQS * q)$/;"	f
vl_quickshift_distance	.\vlfeat\vl\quickshift.c	/^vl_quickshift_distance(vl_qs_type const * I,$/;"	f
vl_quickshift_get_density	.\vlfeat\vl\quickshift.h	/^vl_quickshift_get_density (VlQS const *q)$/;"	f
vl_quickshift_get_dists	.\vlfeat\vl\quickshift.h	/^vl_quickshift_get_dists (VlQS const *q)$/;"	f
vl_quickshift_get_kernel_size	.\vlfeat\vl\quickshift.h	/^vl_quickshift_get_kernel_size (VlQS const *q)$/;"	f
vl_quickshift_get_max_dist	.\vlfeat\vl\quickshift.h	/^vl_quickshift_get_max_dist (VlQS const *q)$/;"	f
vl_quickshift_get_medoid	.\vlfeat\vl\quickshift.h	/^vl_quickshift_get_medoid (VlQS const *q)$/;"	f
vl_quickshift_get_parents	.\vlfeat\vl\quickshift.h	/^vl_quickshift_get_parents (VlQS const *q)$/;"	f
vl_quickshift_inner	.\vlfeat\vl\quickshift.c	/^vl_quickshift_inner(vl_qs_type const * I,$/;"	f
vl_quickshift_new	.\vlfeat\vl\quickshift.c	/^vl_quickshift_new(vl_qs_type const * image, int height, int width,$/;"	f
vl_quickshift_process	.\vlfeat\vl\quickshift.c	/^void vl_quickshift_process(VlQS * q)$/;"	f
vl_quickshift_set_kernel_size	.\vlfeat\vl\quickshift.h	/^vl_quickshift_set_kernel_size (VlQS *q, vl_qs_type sigma)$/;"	f
vl_quickshift_set_max_dist	.\vlfeat\vl\quickshift.h	/^vl_quickshift_set_max_dist (VlQS *q, vl_qs_type tau)$/;"	f
vl_quickshift_set_medoid	.\vlfeat\vl\quickshift.h	/^vl_quickshift_set_medoid (VlQS *q, vl_bool medoid)$/;"	f
vl_quickvis	.\vlfeat\toolbox\quickshift\vl_quickvis.m	/^function [Iedge dists map gaps] = vl_quickvis(I, ratio, kernelsize, maxdist, maxcuts)$/;"	f
vl_rand_init	.\vlfeat\vl\random.c	/^vl_rand_init (VlRand * self)$/;"	f
vl_rand_int31	.\vlfeat\vl\random.h	/^vl_rand_int31 (VlRand * self)$/;"	f
vl_rand_int63	.\vlfeat\vl\random.h	/^vl_rand_int63 (VlRand * self)$/;"	f
vl_rand_permute_indexes	.\vlfeat\vl\random.c	/^vl_rand_permute_indexes (VlRand *self, vl_index *array, vl_size size)$/;"	f
vl_rand_real1	.\vlfeat\vl\random.h	/^vl_rand_real1 (VlRand * self)$/;"	f
vl_rand_real2	.\vlfeat\vl\random.h	/^vl_rand_real2 (VlRand * self)$/;"	f
vl_rand_real3	.\vlfeat\vl\random.h	/^vl_rand_real3 (VlRand * self)$/;"	f
vl_rand_res53	.\vlfeat\vl\random.h	/^vl_rand_res53 (VlRand * self)$/;"	f
vl_rand_seed	.\vlfeat\vl\random.c	/^vl_rand_seed (VlRand * self, vl_uint32 s)$/;"	f
vl_rand_seed_by_array	.\vlfeat\vl\random.c	/^vl_rand_seed_by_array (VlRand * self, vl_uint32 const key [], vl_size keySize)$/;"	f
vl_rand_uindex	.\vlfeat\vl\random.h	/^vl_rand_uindex (VlRand * self, vl_uindex range)$/;"	f
vl_rand_uint32	.\vlfeat\vl\random.c	/^vl_rand_uint32 (VlRand * self)$/;"	f
vl_rand_uint64	.\vlfeat\vl\random.h	/^vl_rand_uint64 (VlRand * self)$/;"	f
vl_rcos	.\vlfeat\toolbox\special\vl_rcos.m	/^function y = vl_rcos(r,x)$/;"	f
vl_realloc	.\vlfeat\vl\generic.c	/^vl_realloc (void* ptr, size_t n)$/;"	f
vl_refine_local_extreum_2	.\vlfeat\vl\covdet.c	/^vl_refine_local_extreum_2 (VlCovDetExtremum2 * refined,$/;"	f
vl_refine_local_extreum_3	.\vlfeat\vl\covdet.c	/^vl_refine_local_extreum_3 (VlCovDetExtremum3 * refined,$/;"	f
vl_rgb2xyz	.\vlfeat\toolbox\imop\vl_rgb2xyz.m	/^function J=vl_rgb2xyz(I,ws)$/;"	f
vl_roc	.\vlfeat\toolbox\plotop\vl_roc.m	/^function [tpr,tnr,info] = vl_roc(labels, scores, varargin)$/;"	f
vl_rodrigues	.\vlfeat\vl\rodrigues.c	/^vl_rodrigues(double* R_pt, double* dR_pt, const double* om_pt)$/;"	f
vl_root	.\vlfeat\toolbox\vl_root.m	/^function path = vl_root$/;"	f
vl_round_d	.\vlfeat\vl\mathop.h	/^vl_round_d (double x)$/;"	f
vl_round_f	.\vlfeat\vl\mathop.h	/^vl_round_f (float x)$/;"	f
vl_scalespace_delete	.\vlfeat\vl\scalespace.c	/^vl_scalespace_delete (VlScaleSpace * self)$/;"	f
vl_scalespace_get_default_geometry	.\vlfeat\vl\scalespace.c	/^vl_scalespace_get_default_geometry (vl_size width, vl_size height)$/;"	f
vl_scalespace_get_geometry	.\vlfeat\vl\scalespace.c	/^vl_scalespace_get_geometry (VlScaleSpace const * self)$/;"	f
vl_scalespace_get_level	.\vlfeat\vl\scalespace.c	/^vl_scalespace_get_level (VlScaleSpace *self, vl_index o, vl_index s)$/;"	f
vl_scalespace_get_level_const	.\vlfeat\vl\scalespace.c	/^vl_scalespace_get_level_const (VlScaleSpace const * self, vl_index o, vl_index s)$/;"	f
vl_scalespace_get_level_sigma	.\vlfeat\vl\scalespace.c	/^vl_scalespace_get_level_sigma (VlScaleSpace const *self, vl_index o, vl_index s)$/;"	f
vl_scalespace_get_octave_geometry	.\vlfeat\vl\scalespace.c	/^vl_scalespace_get_octave_geometry (VlScaleSpace const * self, vl_index o)$/;"	f
vl_scalespace_new	.\vlfeat\vl\scalespace.c	/^vl_scalespace_new (vl_size width, vl_size height)$/;"	f
vl_scalespace_new_copy	.\vlfeat\vl\scalespace.c	/^vl_scalespace_new_copy (VlScaleSpace* self)$/;"	f
vl_scalespace_new_shallow_copy	.\vlfeat\vl\scalespace.c	/^vl_scalespace_new_shallow_copy (VlScaleSpace* self)$/;"	f
vl_scalespace_new_with_geometry	.\vlfeat\vl\scalespace.c	/^vl_scalespace_new_with_geometry (VlScaleSpaceGeometry geom)$/;"	f
vl_scalespace_put_image	.\vlfeat\vl\scalespace.c	/^vl_scalespace_put_image (VlScaleSpace *self, float const *image)$/;"	f
vl_scalespacegeometry_is_equal	.\vlfeat\vl\scalespace.c	/^vl_scalespacegeometry_is_equal (VlScaleSpaceGeometry a,$/;"	f
vl_set_alloc_func	.\vlfeat\vl\generic.c	/^vl_set_alloc_func (void *(*malloc_func)  (size_t),$/;"	f
vl_set_last_error	.\vlfeat\vl\generic.c	/^vl_set_last_error (int error, char const * errorMessage, ...)$/;"	f
vl_set_num_threads	.\vlfeat\vl\generic.c	/^vl_set_num_threads (vl_size numThreads VL_UNUSED) { }$/;"	f
vl_set_num_threads	.\vlfeat\vl\generic.c	/^vl_set_num_threads (vl_size numThreads)$/;"	f
vl_set_printf_func	.\vlfeat\vl\generic.c	/^vl_set_printf_func (printf_func_t printf_func)$/;"	f
vl_set_simd_enabled	.\vlfeat\vl\generic.c	/^vl_set_simd_enabled (vl_bool x)$/;"	f
vl_setup	.\vlfeat\toolbox\vl_setup.m	/^function path = vl_setup(varargin)$/;"	f
vl_sift_calc_keypoint_descriptor	.\vlfeat\vl\sift.c	/^vl_sift_calc_keypoint_descriptor (VlSiftFilt *f,$/;"	f
vl_sift_calc_keypoint_orientations	.\vlfeat\vl\sift.c	/^vl_sift_calc_keypoint_orientations (VlSiftFilt *f,$/;"	f
vl_sift_calc_raw_descriptor	.\vlfeat\vl\sift.c	/^vl_sift_calc_raw_descriptor (VlSiftFilt const *f,$/;"	f
vl_sift_delete	.\vlfeat\vl\sift.c	/^vl_sift_delete (VlSiftFilt* f)$/;"	f
vl_sift_detect	.\vlfeat\vl\sift.c	/^vl_sift_detect (VlSiftFilt * f)$/;"	f
vl_sift_get_edge_thresh	.\vlfeat\vl\sift.h	/^vl_sift_get_edge_thresh (VlSiftFilt const *f)$/;"	f
vl_sift_get_keypoints	.\vlfeat\vl\sift.h	/^vl_sift_get_keypoints (VlSiftFilt const *f)$/;"	f
vl_sift_get_magnif	.\vlfeat\vl\sift.h	/^vl_sift_get_magnif (VlSiftFilt const *f)$/;"	f
vl_sift_get_nkeypoints	.\vlfeat\vl\sift.h	/^vl_sift_get_nkeypoints (VlSiftFilt const *f)$/;"	f
vl_sift_get_nlevels	.\vlfeat\vl\sift.h	/^vl_sift_get_nlevels (VlSiftFilt const *f)$/;"	f
vl_sift_get_noctaves	.\vlfeat\vl\sift.h	/^vl_sift_get_noctaves (VlSiftFilt const *f)$/;"	f
vl_sift_get_norm_thresh	.\vlfeat\vl\sift.h	/^vl_sift_get_norm_thresh (VlSiftFilt const *f)$/;"	f
vl_sift_get_octave	.\vlfeat\vl\sift.h	/^vl_sift_get_octave (VlSiftFilt const *f, int s)$/;"	f
vl_sift_get_octave_first	.\vlfeat\vl\sift.h	/^vl_sift_get_octave_first (VlSiftFilt const *f)$/;"	f
vl_sift_get_octave_height	.\vlfeat\vl\sift.h	/^vl_sift_get_octave_height (VlSiftFilt const *f)$/;"	f
vl_sift_get_octave_index	.\vlfeat\vl\sift.h	/^vl_sift_get_octave_index (VlSiftFilt const *f)$/;"	f
vl_sift_get_octave_width	.\vlfeat\vl\sift.h	/^vl_sift_get_octave_width (VlSiftFilt const *f)$/;"	f
vl_sift_get_peak_thresh	.\vlfeat\vl\sift.h	/^vl_sift_get_peak_thresh (VlSiftFilt const *f)$/;"	f
vl_sift_get_window_size	.\vlfeat\vl\sift.h	/^vl_sift_get_window_size (VlSiftFilt const *f)$/;"	f
vl_sift_keypoint_init	.\vlfeat\vl\sift.c	/^vl_sift_keypoint_init (VlSiftFilt const *f,$/;"	f
vl_sift_new	.\vlfeat\vl\sift.c	/^vl_sift_new (int width, int height,$/;"	f
vl_sift_pix	.\vlfeat\vl\sift.h	/^typedef float vl_sift_pix ;$/;"	t
vl_sift_process_first_octave	.\vlfeat\vl\sift.c	/^vl_sift_process_first_octave (VlSiftFilt *f, vl_sift_pix const *im)$/;"	f
vl_sift_process_next_octave	.\vlfeat\vl\sift.c	/^vl_sift_process_next_octave (VlSiftFilt *f)$/;"	f
vl_sift_set_edge_thresh	.\vlfeat\vl\sift.h	/^vl_sift_set_edge_thresh (VlSiftFilt *f, double t)$/;"	f
vl_sift_set_magnif	.\vlfeat\vl\sift.h	/^vl_sift_set_magnif (VlSiftFilt *f, double m)$/;"	f
vl_sift_set_norm_thresh	.\vlfeat\vl\sift.h	/^vl_sift_set_norm_thresh (VlSiftFilt *f, double t)$/;"	f
vl_sift_set_peak_thresh	.\vlfeat\vl\sift.h	/^vl_sift_set_peak_thresh (VlSiftFilt *f, double t)$/;"	f
vl_sift_set_window_size	.\vlfeat\vl\sift.h	/^vl_sift_set_window_size (VlSiftFilt *f, double x)$/;"	f
vl_sigmoid	.\vlfeat\toolbox\special\vl_sigmoid.m	/^function y = vl_sigmoid(x)$/;"	f
vl_size	.\vlfeat\vl\host.h	/^typedef vl_uint32           vl_size ;$/;"	t
vl_size	.\vlfeat\vl\host.h	/^typedef vl_uint64           vl_size ;    \/**< @brief Unsigned integer holding the size of a memory block. *\/$/;"	t
vl_slic_segment	.\vlfeat\vl\slic.c	/^vl_slic_segment (vl_uint32 * segmentation,$/;"	f
vl_solve_linear_system_2	.\vlfeat\vl\mathop.c	/^vl_solve_linear_system_2 (double * x, double const * A, double const *b)$/;"	f
vl_solve_linear_system_3	.\vlfeat\vl\mathop.c	/^vl_solve_linear_system_3 (double * x, double const * A, double const *b)$/;"	f
vl_sqrt_d	.\vlfeat\vl\mathop.h	/^vl_sqrt_d (double x)$/;"	f
vl_sqrt_f	.\vlfeat\vl\mathop.h	/^vl_sqrt_f (float x)$/;"	f
vl_static_configuration_to_string_copy	.\vlfeat\vl\host.c	/^vl_static_configuration_to_string_copy ()$/;"	f
vl_string_basename	.\vlfeat\vl\stringop.c	/^vl_string_basename (char * destination,$/;"	f
vl_string_casei_cmp	.\vlfeat\vl\stringop.c	/^vl_string_casei_cmp (const char * string1, const char * string2)$/;"	f
vl_string_copy	.\vlfeat\vl\stringop.c	/^vl_string_copy (char * destination, vl_size destinationSize,$/;"	f
vl_string_copy_sub	.\vlfeat\vl\stringop.c	/^vl_string_copy_sub (char * destination,$/;"	f
vl_string_find_char_rev	.\vlfeat\vl\stringop.c	/^vl_string_find_char_rev (char const *beginning, char const* end, char c)$/;"	f
vl_string_length	.\vlfeat\vl\stringop.c	/^vl_string_length (char const *string)$/;"	f
vl_string_parse_protocol	.\vlfeat\vl\stringop.c	/^vl_string_parse_protocol (char const *string, int *protocol)$/;"	f
vl_string_protocol_name	.\vlfeat\vl\stringop.c	/^vl_string_protocol_name (int protocol)$/;"	f
vl_string_replace_wildcard	.\vlfeat\vl\stringop.c	/^vl_string_replace_wildcard (char * destination,$/;"	f
vl_svd2	.\vlfeat\vl\mathop.c	/^vl_svd2 (double* S, double *U, double *V, double const *M)$/;"	f
vl_svm_delete	.\vlfeat\vl\svm.c	/^vl_svm_delete (VlSvm * self)$/;"	f
vl_svm_get_bias	.\vlfeat\vl\svm.c	/^double vl_svm_get_bias (VlSvm const *self)$/;"	f
vl_svm_get_bias_learning_rate	.\vlfeat\vl\svm.c	/^double vl_svm_get_bias_learning_rate (VlSvm const *self)$/;"	f
vl_svm_get_bias_multiplier	.\vlfeat\vl\svm.c	/^double vl_svm_get_bias_multiplier (VlSvm const * self)$/;"	f
vl_svm_get_diagnostic_frequency	.\vlfeat\vl\svm.c	/^vl_size vl_svm_get_diagnostic_frequency (VlSvm const *self)$/;"	f
vl_svm_get_dimension	.\vlfeat\vl\svm.c	/^vl_size vl_svm_get_dimension (VlSvm *self)$/;"	f
vl_svm_get_epsilon	.\vlfeat\vl\svm.c	/^double vl_svm_get_epsilon (VlSvm const *self)$/;"	f
vl_svm_get_iteration_number	.\vlfeat\vl\svm.c	/^vl_size vl_svm_get_iteration_number (VlSvm const *self)$/;"	f
vl_svm_get_lambda	.\vlfeat\vl\svm.c	/^double vl_svm_get_lambda (VlSvm const * self)$/;"	f
vl_svm_get_max_num_iterations	.\vlfeat\vl\svm.c	/^vl_size vl_svm_get_max_num_iterations (VlSvm const *self)$/;"	f
vl_svm_get_model	.\vlfeat\vl\svm.c	/^double const * vl_svm_get_model (VlSvm const *self)$/;"	f
vl_svm_get_num_data	.\vlfeat\vl\svm.c	/^vl_size vl_svm_get_num_data (VlSvm *self)$/;"	f
vl_svm_get_scores	.\vlfeat\vl\svm.c	/^double const * vl_svm_get_scores (VlSvm const *self)$/;"	f
vl_svm_get_solver	.\vlfeat\vl\svm.c	/^VlSvmSolverType vl_svm_get_solver (VlSvm const * self)$/;"	f
vl_svm_get_statistics	.\vlfeat\vl\svm.c	/^VlSvmStatistics const * vl_svm_get_statistics (VlSvm const *self)$/;"	f
vl_svm_get_weights	.\vlfeat\vl\svm.c	/^double const *vl_svm_get_weights (VlSvm const * self)$/;"	f
vl_svm_hinge2_conjugate_loss	.\vlfeat\vl\svm.c	/^vl_svm_hinge2_conjugate_loss (double u, double label) {$/;"	f
vl_svm_hinge2_dca_update	.\vlfeat\vl\svm.c	/^vl_svm_hinge2_dca_update (double alpha, double inner, double norm2, double label) {$/;"	f
vl_svm_hinge2_loss	.\vlfeat\vl\svm.c	/^vl_svm_hinge2_loss (double inner,double label)$/;"	f
vl_svm_hinge2_loss_derivative	.\vlfeat\vl\svm.c	/^vl_svm_hinge2_loss_derivative (double inner, double label)$/;"	f
vl_svm_hinge_conjugate_loss	.\vlfeat\vl\svm.c	/^vl_svm_hinge_conjugate_loss (double u, double label) {$/;"	f
vl_svm_hinge_dca_update	.\vlfeat\vl\svm.c	/^vl_svm_hinge_dca_update (double alpha, double inner, double norm2, double label) {$/;"	f
vl_svm_hinge_loss	.\vlfeat\vl\svm.c	/^vl_svm_hinge_loss (double inner, double label)$/;"	f
vl_svm_hinge_loss_derivative	.\vlfeat\vl\svm.c	/^vl_svm_hinge_loss_derivative (double inner, double label)$/;"	f
vl_svm_l1_conjugate_loss	.\vlfeat\vl\svm.c	/^vl_svm_l1_conjugate_loss (double u, double label) {$/;"	f
vl_svm_l1_dca_update	.\vlfeat\vl\svm.c	/^vl_svm_l1_dca_update (double alpha, double inner, double norm2, double label) {$/;"	f
vl_svm_l1_loss	.\vlfeat\vl\svm.c	/^vl_svm_l1_loss (double inner,double label)$/;"	f
vl_svm_l1_loss_derivative	.\vlfeat\vl\svm.c	/^vl_svm_l1_loss_derivative (double inner, double label)$/;"	f
vl_svm_l2_conjugate_loss	.\vlfeat\vl\svm.c	/^vl_svm_l2_conjugate_loss (double u, double label) {$/;"	f
vl_svm_l2_dca_update	.\vlfeat\vl\svm.c	/^vl_svm_l2_dca_update (double alpha, double inner, double norm2, double label) {$/;"	f
vl_svm_l2_loss	.\vlfeat\vl\svm.c	/^vl_svm_l2_loss (double inner,double label)$/;"	f
vl_svm_l2_loss_derivative	.\vlfeat\vl\svm.c	/^vl_svm_l2_loss_derivative (double inner, double label)$/;"	f
vl_svm_logistic_conjugate_loss	.\vlfeat\vl\svm.c	/^vl_svm_logistic_conjugate_loss (double u, double label) {$/;"	f
vl_svm_logistic_dca_update	.\vlfeat\vl\svm.c	/^vl_svm_logistic_dca_update (double alpha, double inner, double norm2, double label) {$/;"	f
vl_svm_logistic_loss	.\vlfeat\vl\svm.c	/^vl_svm_logistic_loss (double inner,double label)$/;"	f
vl_svm_logistic_loss_derivative	.\vlfeat\vl\svm.c	/^vl_svm_logistic_loss_derivative (double inner, double label)$/;"	f
vl_svm_new	.\vlfeat\vl\svm.c	/^vl_svm_new (VlSvmSolverType type,$/;"	f
vl_svm_new_with_abstract_data	.\vlfeat\vl\svm.c	/^vl_svm_new_with_abstract_data (VlSvmSolverType solver,$/;"	f
vl_svm_new_with_dataset	.\vlfeat\vl\svm.c	/^vl_svm_new_with_dataset (VlSvmSolverType solver,$/;"	f
vl_svm_set_bias	.\vlfeat\vl\svm.c	/^void vl_svm_set_bias (VlSvm *self, double b)$/;"	f
vl_svm_set_bias_learning_rate	.\vlfeat\vl\svm.c	/^void vl_svm_set_bias_learning_rate (VlSvm *self, double rate)$/;"	f
vl_svm_set_bias_multiplier	.\vlfeat\vl\svm.c	/^void vl_svm_set_bias_multiplier (VlSvm * self, double b)$/;"	f
vl_svm_set_conjugate_loss_function	.\vlfeat\vl\svm.c	/^void vl_svm_set_conjugate_loss_function (VlSvm *self, VlSvmLossFunction f)$/;"	f
vl_svm_set_data_functions	.\vlfeat\vl\svm.c	/^void vl_svm_set_data_functions (VlSvm *self, VlSvmInnerProductFunction inner, VlSvmAccumulateFunction acc)$/;"	f
vl_svm_set_dca_update_function	.\vlfeat\vl\svm.c	/^void vl_svm_set_dca_update_function (VlSvm *self, VlSvmDcaUpdateFunction f)$/;"	f
vl_svm_set_diagnostic_frequency	.\vlfeat\vl\svm.c	/^void vl_svm_set_diagnostic_frequency (VlSvm *self, vl_size f)$/;"	f
vl_svm_set_diagnostic_function	.\vlfeat\vl\svm.c	/^vl_svm_set_diagnostic_function (VlSvm *self, VlSvmDiagnosticFunction f, void *data) {$/;"	f
vl_svm_set_epsilon	.\vlfeat\vl\svm.c	/^void vl_svm_set_epsilon (VlSvm *self, double epsilon)$/;"	f
vl_svm_set_iteration_number	.\vlfeat\vl\svm.c	/^void vl_svm_set_iteration_number (VlSvm *self, vl_uindex n)$/;"	f
vl_svm_set_lambda	.\vlfeat\vl\svm.c	/^void vl_svm_set_lambda (VlSvm * self, double lambda)$/;"	f
vl_svm_set_loss	.\vlfeat\vl\svm.c	/^vl_svm_set_loss (VlSvm *self, VlSvmLossType loss)$/;"	f
vl_svm_set_loss_derivative_function	.\vlfeat\vl\svm.c	/^void vl_svm_set_loss_derivative_function (VlSvm *self, VlSvmLossFunction f)$/;"	f
vl_svm_set_loss_function	.\vlfeat\vl\svm.c	/^void vl_svm_set_loss_function (VlSvm *self, VlSvmLossFunction f)$/;"	f
vl_svm_set_max_num_iterations	.\vlfeat\vl\svm.c	/^void vl_svm_set_max_num_iterations (VlSvm *self, vl_size n)$/;"	f
vl_svm_set_model	.\vlfeat\vl\svm.c	/^void vl_svm_set_model (VlSvm *self, double const *model)$/;"	f
vl_svm_set_weights	.\vlfeat\vl\svm.c	/^void vl_svm_set_weights (VlSvm * self, double const *weights)$/;"	f
vl_svm_train	.\vlfeat\vl\svm.c	/^void vl_svm_train (VlSvm * self)$/;"	f
vl_svmdataset	.\vlfeat\toolbox\misc\vl_svmdataset.m	/^function dataset = vl_svmdataset(x, varargin)$/;"	f
vl_svmdataset_delete	.\vlfeat\vl\svmdataset.c	/^void vl_svmdataset_delete (VlSvmDataset *self)$/;"	f
vl_svmdataset_get_accumulate_function	.\vlfeat\vl\svmdataset.c	/^vl_svmdataset_get_accumulate_function(VlSvmDataset const *self)$/;"	f
vl_svmdataset_get_data	.\vlfeat\vl\svmdataset.c	/^vl_svmdataset_get_data (VlSvmDataset const *self)$/;"	f
vl_svmdataset_get_dimension	.\vlfeat\vl\svmdataset.c	/^vl_svmdataset_get_dimension (VlSvmDataset const *self)$/;"	f
vl_svmdataset_get_homogeneous_kernel_map	.\vlfeat\vl\svmdataset.c	/^vl_svmdataset_get_homogeneous_kernel_map (VlSvmDataset const *self)$/;"	f
vl_svmdataset_get_inner_product_function	.\vlfeat\vl\svmdataset.c	/^vl_svmdataset_get_inner_product_function (VlSvmDataset const *self)$/;"	f
vl_svmdataset_get_num_data	.\vlfeat\vl\svmdataset.c	/^vl_svmdataset_get_num_data (VlSvmDataset const *self)$/;"	f
vl_svmdataset_new	.\vlfeat\vl\svmdataset.c	/^vl_svmdataset_new (vl_type dataType, void *data, vl_size dimension, vl_size numData)$/;"	f
vl_svmdataset_set_homogeneous_kernel_map	.\vlfeat\vl\svmdataset.c	/^vl_svmdataset_set_homogeneous_kernel_map (VlSvmDataset * self,$/;"	f
vl_svmpegasos	.\vlfeat\toolbox\misc\vl_svmpegasos.m	/^function [w b info] = vl_svmpegasos(DATA,LAMBDA, varargin)$/;"	f
vl_swap_host_big_endianness_2	.\vlfeat\vl\host.h	/^vl_swap_host_big_endianness_2 (void *dst, void* src)$/;"	f
vl_swap_host_big_endianness_4	.\vlfeat\vl\host.h	/^vl_swap_host_big_endianness_4 (void *dst, void* src)$/;"	f
vl_swap_host_big_endianness_8	.\vlfeat\vl\host.h	/^vl_swap_host_big_endianness_8 (void *dst, void* src)$/;"	f
vl_test	.\vlfeat\toolbox\xtest\vl_test.m	/^function results = vl_test(suite, test)$/;"	f
vl_test_aib	.\vlfeat\toolbox\xtest\vl_test_aib.m	/^function results = vl_test_aib(varargin)$/;"	f
vl_test_alldist	.\vlfeat\toolbox\xtest\vl_test_alldist.m	/^function results = vl_test_alldist(varargin)$/;"	f
vl_test_alldist2	.\vlfeat\toolbox\xtest\vl_test_alldist2.m	/^function results = vl_test_alldist2(varargin)$/;"	f
vl_test_alphanum	.\vlfeat\toolbox\xtest\vl_test_alphanum.m	/^function results = vl_test_alphanum(varargin)$/;"	f
vl_test_argparse	.\vlfeat\toolbox\xtest\vl_test_argparse.m	/^function results = vl_test_argparse(varargin)$/;"	f
vl_test_binsearch	.\vlfeat\toolbox\xtest\vl_test_binsearch.m	/^function results = vl_test_binsearch(varargin)$/;"	f
vl_test_binsum	.\vlfeat\toolbox\xtest\vl_test_binsum.m	/^function results = vl_test_binsum(varargin)$/;"	f
vl_test_colsubset	.\vlfeat\toolbox\xtest\vl_test_colsubset.m	/^function results = vl_test_colsubset(varargin)$/;"	f
vl_test_cummax	.\vlfeat\toolbox\xtest\vl_test_cummax.m	/^function results = vl_test_cummax(varargin)$/;"	f
vl_test_dsift	.\vlfeat\toolbox\xtest\vl_test_dsift.m	/^function results = vl_test_dsift(varargin)$/;"	f
vl_test_fisher	.\vlfeat\toolbox\xtest\vl_test_fisher.m	/^function results = vl_test_fisher(varargin)$/;"	f
vl_test_gmm	.\vlfeat\toolbox\xtest\vl_test_gmm.m	/^function results = vl_test_gmm(varargin)$/;"	f
vl_test_grad	.\vlfeat\toolbox\xtest\vl_test_grad.m	/^function results = vl_test_grad(varargin)$/;"	f
vl_test_hikmeans	.\vlfeat\toolbox\xtest\vl_test_hikmeans.m	/^function results = vl_test_hikmeans(varargin)$/;"	f
vl_test_hog	.\vlfeat\toolbox\xtest\vl_test_hog.m	/^function results = vl_test_hog(varargin)$/;"	f
vl_test_homkermap	.\vlfeat\toolbox\xtest\vl_test_homkermap.m	/^function results = vl_test_homkermap(varargin)$/;"	f
vl_test_ihashsum	.\vlfeat\toolbox\xtest\vl_test_ihashsum.m	/^function results = vl_test_ihashsum(varargin)$/;"	f
vl_test_ikmeans	.\vlfeat\toolbox\xtest\vl_test_ikmeans.m	/^function results = vl_test_ikmeans(varargin)$/;"	f
vl_test_imarray	.\vlfeat\toolbox\xtest\vl_test_imarray.m	/^function results = vl_test_imarray(varargin)$/;"	f
vl_test_imdisttf	.\vlfeat\toolbox\xtest\vl_test_imdisttf.m	/^function results = vl_test_imdisttf(varargin)$/;"	f
vl_test_imintegral	.\vlfeat\toolbox\xtest\vl_test_imintegral.m	/^function results = vl_test_imintegral(varargin)$/;"	f
vl_test_imsmooth	.\vlfeat\toolbox\xtest\vl_test_imsmooth.m	/^function results = vl_test_imsmooth(varargin)$/;"	f
vl_test_imwbackward	.\vlfeat\toolbox\xtest\vl_test_imwbackward.m	/^function results = vl_test_imwbackward(varargin)$/;"	f
vl_test_inthist	.\vlfeat\toolbox\xtest\vl_test_inthist.m	/^function results = vl_test_inthist(varargin)$/;"	f
vl_test_kdtree	.\vlfeat\toolbox\xtest\vl_test_kdtree.m	/^function results = vl_test_kdtree(varargin)$/;"	f
vl_test_kmeans	.\vlfeat\toolbox\xtest\vl_test_kmeans.m	/^function results = vl_test_kmeans(varargin)$/;"	f
vl_test_lbp	.\vlfeat\toolbox\xtest\vl_test_lbp.m	/^function results = vl_test_lbp(varargin)$/;"	f
vl_test_liop	.\vlfeat\toolbox\xtest\vl_test_liop.m	/^function results = vl_test_liop(varargin)$/;"	f
vl_test_mser	.\vlfeat\toolbox\xtest\vl_test_mser.m	/^function results = vl_test_mser(varargin)$/;"	f
vl_test_phow	.\vlfeat\toolbox\xtest\vl_test_phow.m	/^function results = vl_test_phow(varargin)$/;"	f
vl_test_plotbox	.\vlfeat\toolbox\xtest\vl_test_plotbox.m	/^function results = vl_test_plotbox(varargin)$/;"	f
vl_test_pr	.\vlfeat\toolbox\xtest\vl_test_pr.m	/^function results = vl_test_pr(varargin)$/;"	f
vl_test_printsize	.\vlfeat\toolbox\xtest\vl_test_printsize.m	/^function results = vl_test_printsize(varargin)$/;"	f
vl_test_roc	.\vlfeat\toolbox\xtest\vl_test_roc.m	/^function results = vl_test_roc(varargin)$/;"	f
vl_test_sift	.\vlfeat\toolbox\xtest\vl_test_sift.m	/^function results = vl_test_sift(varargin)$/;"	f
vl_test_slic	.\vlfeat\toolbox\xtest\vl_test_slic.m	/^function results = vl_test_slic(varargin)$/;"	f
vl_test_svmtrain	.\vlfeat\toolbox\xtest\vl_test_svmtrain.m	/^function results = vl_test_svmtrain(varargin)$/;"	f
vl_test_twister	.\vlfeat\toolbox\xtest\vl_test_twister.m	/^function results = vl_test_twister(varargin)$/;"	f
vl_test_vlad	.\vlfeat\toolbox\xtest\vl_test_vlad.m	/^function results = vl_test_vlad(varargin)$/;"	f
vl_test_whistc	.\vlfeat\toolbox\xtest\vl_test_whistc.m	/^function results = vl_test_whistc(varargin)$/;"	f
vl_thread_specific_state_delete	.\vlfeat\vl\generic.c	/^vl_thread_specific_state_delete (VlThreadState * self)$/;"	f	file:
vl_thread_specific_state_new	.\vlfeat\vl\generic.c	/^vl_thread_specific_state_new (void)$/;"	f	file:
vl_tic	.\vlfeat\vl\generic.c	/^vl_tic (void)$/;"	f
vl_tightsubplot	.\vlfeat\toolbox\plotop\vl_tightsubplot.m	/^function H = vl_tightsubplot(varargin)$/;"	f
vl_toc	.\vlfeat\vl\generic.c	/^vl_toc (void)$/;"	f
vl_tpfp	.\vlfeat\toolbox\plotop\vl_tpfp.m	/^function [tp, fp, p, n, perm, varargin] = vl_tpfp(labels, scores, varargin)$/;"	f
vl_tps	.\vlfeat\toolbox\imop\vl_tps.m	/^function [phi,S] = vl_tps(x1,x2,Y)$/;"	f
vl_tpsu	.\vlfeat\toolbox\imop\vl_tpsu.m	/^function [U,dU,delta]=vl_tpsu(X,Y)$/;"	f
vl_type	.\vlfeat\vl\generic.h	/^typedef vl_uint32 vl_type ;$/;"	t
vl_ubcread	.\vlfeat\toolbox\sift\vl_ubcread.m	/^function [f,d] = vl_ubcread(file, varargin)$/;"	f
vl_uindex	.\vlfeat\vl\host.h	/^typedef vl_uint32           vl_uindex ;$/;"	t
vl_uindex	.\vlfeat\vl\host.h	/^typedef vl_uint64           vl_uindex ;  \/**< @brief Same as ::vl_size *\/$/;"	t
vl_uint	.\vlfeat\vl\host.h	/^typedef unsigned int        vl_uint ;    \/**< @brief Same as <code>unsigned int<\/code>. *\/$/;"	t
vl_uint	.\vlfeat\vl\host.h	/^typedef unsigned int        vl_uint ;$/;"	t
vl_uint16	.\vlfeat\vl\host.h	/^typedef short     unsigned  vl_uint16 ;  \/**< @brief Unsigned 16-bit integer. *\/$/;"	t
vl_uint16	.\vlfeat\vl\host.h	/^typedef short     unsigned  vl_uint16 ;$/;"	t
vl_uint32	.\vlfeat\vl\host.h	/^typedef int       unsigned  vl_uint32 ;  \/**< @brief Unsigned 32-bit integer. *\/$/;"	t
vl_uint32	.\vlfeat\vl\host.h	/^typedef int       unsigned  vl_uint32 ;$/;"	t
vl_uint64	.\vlfeat\vl\host.h	/^typedef __int64   unsigned  vl_uint64 ;$/;"	t
vl_uint64	.\vlfeat\vl\host.h	/^typedef long long unsigned  vl_uint64 ;  \/**< @brief Unsigned 64-bit integer. *\/$/;"	t
vl_uint64	.\vlfeat\vl\host.h	/^typedef long long unsigned  vl_uint64 ;$/;"	t
vl_uint8	.\vlfeat\vl\host.h	/^typedef char      unsigned  vl_uint8 ;   \/**< @brief Unsigned  8-bit integer. *\/$/;"	t
vl_uint8	.\vlfeat\vl\host.h	/^typedef char      unsigned  vl_uint8 ;$/;"	t
vl_uintptr	.\vlfeat\vl\host.h	/^typedef vl_uint32           vl_uintptr ;$/;"	t
vl_uintptr	.\vlfeat\vl\host.h	/^typedef vl_uint64           vl_uintptr ; \/**< @brief Unsigned integer holding a pointer. *\/$/;"	t
vl_unlock_state	.\vlfeat\vl\generic.c	/^vl_unlock_state (void)$/;"	f	file:
vl_vlad_encode	.\vlfeat\vl\vlad.c	/^vl_vlad_encode (void * enc, vl_type dataType,$/;"	f
vl_waffine	.\vlfeat\toolbox\imop\vl_waffine.m	/^function varargout = vl_waffine(A,T,varargin)$/;"	f
vl_whistc	.\vlfeat\toolbox\misc\vl_whistc.m	/^function h = vl_whistc(x, w, edges, dim)$/;"	f
vl_witps	.\vlfeat\toolbox\imop\vl_witps.m	/^function [x1,x2]=vl_witps(xp1,xp2,Y,Yp)$/;"	f
vl_wtps	.\vlfeat\toolbox\imop\vl_wtps.m	/^function [xp1,xp2]=vl_wtps(phi,Yp)$/;"	f
vl_xmkdir	.\vlfeat\toolbox\misc\vl_xmkdir.m	/^function vl_xmkdir(path, varargin)$/;"	f
vl_xyz2lab	.\vlfeat\toolbox\imop\vl_xyz2lab.m	/^function J=vl_xyz2lab(I,il)$/;"	f
vl_xyz2luv	.\vlfeat\toolbox\imop\vl_xyz2luv.m	/^function J=vl_xyz2luv(I,il)$/;"	f
vl_xyz2rgb	.\vlfeat\toolbox\imop\vl_xyz2rgb.m	/^function J=vl_xyz2rgb(I,ws)$/;"	f
vlad	.\vlfeat\toolbox\noprefix\vlad.m	/^function varargout = vlad(varargin)$/;"	f
vlmxCompareStringsI	.\vlfeat\toolbox\mexutils.h	/^vlmxCompareStringsI(const char *s1, const char *s2)$/;"	f
vlmxCompareToStringI	.\vlfeat\toolbox\mexutils.h	/^vlmxCompareToStringI(mxArray const * array, char const  * string)$/;"	f
vlmxCreateArrayFromVlArray	.\vlfeat\toolbox\mexutils.h	/^vlmxCreateArrayFromVlArray (VlArray const * x)$/;"	f
vlmxCreatePlainScalar	.\vlfeat\toolbox\mexutils.h	/^vlmxCreatePlainScalar (double x)$/;"	f
vlmxDecodeEnumeration	.\vlfeat\toolbox\mexutils.h	/^vlmxDecodeEnumeration (mxArray const *name_array,$/;"	f
vlmxEnvelopeArrayInVlArray	.\vlfeat\toolbox\mexutils.h	/^vlmxEnvelopeArrayInVlArray (VlArray * v, mxArray * x)$/;"	f
vlmxErrAlloc	.\vlfeat\toolbox\mexutils.h	/^  vlmxErrAlloc = 1,$/;"	e	enum:_VlmxErrorId
vlmxErrInconsistentData	.\vlfeat\toolbox\mexutils.h	/^  vlmxErrInconsistentData$/;"	e	enum:_VlmxErrorId
vlmxErrInvalidArgument	.\vlfeat\toolbox\mexutils.h	/^  vlmxErrInvalidArgument,$/;"	e	enum:_VlmxErrorId
vlmxErrInvalidOption	.\vlfeat\toolbox\mexutils.h	/^  vlmxErrInvalidOption,$/;"	e	enum:_VlmxErrorId
vlmxErrNotEnoughInputArguments	.\vlfeat\toolbox\mexutils.h	/^  vlmxErrNotEnoughInputArguments,$/;"	e	enum:_VlmxErrorId
vlmxErrNotEnoughOutputArguments	.\vlfeat\toolbox\mexutils.h	/^  vlmxErrNotEnoughOutputArguments,$/;"	e	enum:_VlmxErrorId
vlmxErrTooManyInputArguments	.\vlfeat\toolbox\mexutils.h	/^  vlmxErrTooManyInputArguments,$/;"	e	enum:_VlmxErrorId
vlmxErrTooManyOutputArguments	.\vlfeat\toolbox\mexutils.h	/^  vlmxErrTooManyOutputArguments,$/;"	e	enum:_VlmxErrorId
vlmxError	.\vlfeat\toolbox\mexutils.h	/^vlmxError (VlmxErrorId errorId, char const * errorMessage, ...)$/;"	f
vlmxIsArray	.\vlfeat\toolbox\mexutils.h	/^vlmxIsArray (mxArray const * array, vl_index numDimensions, vl_index* dimensions)$/;"	f
vlmxIsEqualToStringI	.\vlfeat\toolbox\mexutils.h	/^vlmxIsEqualToStringI(mxArray const * array, char const  * string)$/;"	f
vlmxIsMatrix	.\vlfeat\toolbox\mexutils.h	/^vlmxIsMatrix (mxArray const * array, vl_index M, vl_index N)$/;"	f
vlmxIsOfClass	.\vlfeat\toolbox\mexutils.h	/^vlmxIsOfClass (mxArray const * array, mxClassID classId)$/;"	f
vlmxIsPlain	.\vlfeat\toolbox\mexutils.h	/^ vlmxIsPlain (mxArray const * array)$/;"	f
vlmxIsPlainMatrix	.\vlfeat\toolbox\mexutils.h	/^vlmxIsPlainMatrix (mxArray const * array, vl_index M, vl_index N)$/;"	f
vlmxIsPlainScalar	.\vlfeat\toolbox\mexutils.h	/^vlmxIsPlainScalar (mxArray const * array)$/;"	f
vlmxIsPlainVector	.\vlfeat\toolbox\mexutils.h	/^vlmxIsPlainVector (mxArray const * array, vl_index numElements)$/;"	f
vlmxIsReal	.\vlfeat\toolbox\mexutils.h	/^vlmxIsReal (mxArray const * array)$/;"	f
vlmxIsScalar	.\vlfeat\toolbox\mexutils.h	/^vlmxIsScalar (mxArray const * array)$/;"	f
vlmxIsString	.\vlfeat\toolbox\mexutils.h	/^vlmxIsString (const mxArray* array, vl_index length)$/;"	f
vlmxIsVector	.\vlfeat\toolbox\mexutils.h	/^vlmxIsVector (mxArray const * array, vl_index numElements)$/;"	f
vlmxNextOption	.\vlfeat\toolbox\mexutils.h	/^vlmxNextOption (mxArray const *args[], int nargs,$/;"	f
vlmxOption	.\vlfeat\toolbox\mexutils.h	/^typedef struct _vlmxOption vlmxOption  ;$/;"	t	typeref:struct:_vlmxOption
vlmxWarning	.\vlfeat\toolbox\mexutils.h	/^vlmxWarning (VlmxErrorId errorId, char const * errorMessage, ...)$/;"	f
vsnprintf	.\vlfeat\toolbox\mexutils.h	28;"	d
waffine	.\vlfeat\toolbox\noprefix\waffine.m	/^function varargout = waffine(varargin)$/;"	f
walkAncestors	.\vlfeat\docsrc\webdoc.py	/^def walkAncestors(leafNode, nodeType = None):$/;"	f
walkNodes	.\vlfeat\docsrc\webdoc.py	/^def walkNodes(rootNode, nodeType = None, nodeBarrier = None):$/;"	f
webdoc_src	.\vlfeat\make\doc.mak	/^webdoc_src = $(wildcard docsrc\/*.xml) $(wildcard docsrc\/*.html) $(wildcard docsrc\/tutorials\/*.html)$/;"	m
wedge	.\vlfeat\toolbox\imop\vl_impattern.m	/^function im = wedge(args)$/;"	f
weights	.\vlfeat\vl\svm.c	/^  double const * weights ;      \/**< Data weights. *\/$/;"	m	struct:VlSvm_	file:
which	.\vlfeat\vl\aib.h	/^  vl_uint   *which ;    \/**< List of entries to update *\/$/;"	m	struct:_VlAIB
whistc	.\vlfeat\toolbox\noprefix\whistc.m	/^function varargout = whistc(varargin)$/;"	f
width	.\vlfeat\vl\pgm.h	/^  vl_size width ;      \/**< image width.                     *\/$/;"	m	struct:_VlPgmImage
width	.\vlfeat\vl\quickshift.h	/^  int width;            \/**< width of the image *\/$/;"	m	struct:_VlQS
width	.\vlfeat\vl\scalespace.h	/^  vl_size width ; \/**< Image width *\/$/;"	m	struct:_VlScaleSpaceGeometry
width	.\vlfeat\vl\scalespace.h	/^  vl_size width ; \/**< Width (number of pixels) *\/$/;"	m	struct:_VlScaleSpaceOctaveGeometry
width	.\vlfeat\vl\sift.h	/^  int width ;           \/**< image width. *\/$/;"	m	struct:_VlSiftFilt
wikidoc	.\vlfeat\docsrc\mdoc.py	/^from wikidoc import wikidoc$/;"	i
wikidoc	.\vlfeat\docsrc\wikidoc.py	/^def wikidoc(pagename, htmlfile):$/;"	f
windowSize	.\vlfeat\vl\dsift.h	/^  double windowSize ;      \/**< size of the Gaussian window *\/$/;"	m	struct:VlDsiftFilter_
windowSize	.\vlfeat\vl\sift.h	/^  double windowSize ;   \/**< size of Gaussian window (in spatial bins) *\/$/;"	m	struct:_VlSiftFilt
windowType	.\vlfeat\vl\homkermap.c	/^  VlHomogeneousKernelMapWindowType windowType ;$/;"	m	struct:_VlHomogeneousKernelMap	file:
witps	.\vlfeat\toolbox\noprefix\witps.m	/^function varargout = witps(varargin)$/;"	f
words	.\vlfeat\vl\host.h	/^    vl_uint32 words [0x20 \/ 4] ;$/;"	m	union:_VlX86CpuInfo::__anon39
wtps	.\vlfeat\toolbox\noprefix\wtps.m	/^function varargout = wtps(varargin)$/;"	f
x	.\vlfeat\src\test_heap-def.c	/^typedef struct _S { int x ; } S ;$/;"	m	struct:_S	file:
x	.\vlfeat\vl\covdet.c	/^  float x ;$/;"	m	struct:_VlCovDetExtremum2	file:
x	.\vlfeat\vl\covdet.c	/^  float x ;$/;"	m	struct:_VlCovDetExtremum3	file:
x	.\vlfeat\vl\covdet.h	/^  float x ;     \/**< center x-coordinate *\/$/;"	m	struct:_VlFrameDisc
x	.\vlfeat\vl\covdet.h	/^  float x ;     \/**< center x-coordinate *\/$/;"	m	struct:_VlFrameEllipse
x	.\vlfeat\vl\covdet.h	/^  float x ;     \/**< center x-coordinate *\/$/;"	m	struct:_VlFrameOrientedDisc
x	.\vlfeat\vl\covdet.h	/^  float x ;     \/**< center x-coordinate *\/$/;"	m	struct:_VlFrameOrientedEllipse
x	.\vlfeat\vl\dsift.h	/^  double x ; \/**< x coordinate *\/$/;"	m	struct:VlDsiftKeypoint_
x	.\vlfeat\vl\sift.h	/^  float x ;     \/**< x coordinate. *\/$/;"	m	struct:_VlSiftKeypoint
xBuildIndex	.\vlfeat\docsrc\doxytag.py	/^    def xBuildIndex(self, node):$/;"	m	class:Doxytag
xcreate	.\vlfeat\toolbox\kmeans\vl_hikmeans.c	/^xcreate (mxArray *mnode, int i, VlHIKMNode *node)$/;"	f	file:
xcreate	.\vlfeat\toolbox\kmeans\vl_hikmeanspush.c	/^xcreate (VlHIKMTree *tree, mxArray const *mnode, int i)$/;"	f	file:
xdelete	.\vlfeat\vl\hikmeans.c	/^xdelete (VlHIKMNode *node)$/;"	f	file:
xi	.\vlfeat\vl\covdet.c	/^  vl_index xi ;$/;"	m	struct:_VlCovDetExtremum2	file:
xi	.\vlfeat\vl\covdet.c	/^  vl_index xi ;$/;"	m	struct:_VlCovDetExtremum3	file:
xlogx	.\vlfeat\vl\svm.c	/^VL_INLINE double xlogx(double x)$/;"	f
xmeans	.\vlfeat\vl\hikmeans.c	/^xmeans (VlHIKMTree *tree,$/;"	f	file:
xmkdir	.\vlfeat\toolbox\noprefix\xmkdir.m	/^function varargout = xmkdir(varargin)$/;"	f
xml	.\vlfeat\docsrc\doxytag.py	/^import xml.dom.minidom$/;"	i
xml	.\vlfeat\docsrc\formatter.py	/^import xml.dom.minidom$/;"	i
xml	.\vlfeat\docsrc\webdoc.py	/^import xml.sax$/;"	i
xml	.\vlfeat\docsrc\webdoc.py	/^import xml.sax.saxutils$/;"	i
xscan	.\vlfeat\docsrc\mdoc.py	/^def xscan(baseDir, subDir=''):$/;"	f
xyz2lab	.\vlfeat\toolbox\noprefix\xyz2lab.m	/^function varargout = xyz2lab(varargin)$/;"	f
xyz2luv	.\vlfeat\toolbox\noprefix\xyz2luv.m	/^function varargout = xyz2luv(varargin)$/;"	f
xyz2rgb	.\vlfeat\toolbox\noprefix\xyz2rgb.m	/^function varargout = xyz2rgb(varargin)$/;"	f
y	.\vlfeat\vl\covdet.c	/^  float y ;$/;"	m	struct:_VlCovDetExtremum2	file:
y	.\vlfeat\vl\covdet.c	/^  float y ;$/;"	m	struct:_VlCovDetExtremum3	file:
y	.\vlfeat\vl\covdet.h	/^  float y ;     \/**< center y-coordinate *\/$/;"	m	struct:_VlFrameDisc
y	.\vlfeat\vl\covdet.h	/^  float y ;     \/**< center y-coordinate *\/$/;"	m	struct:_VlFrameEllipse
y	.\vlfeat\vl\covdet.h	/^  float y ;     \/**< center y-coordinate *\/$/;"	m	struct:_VlFrameOrientedDisc
y	.\vlfeat\vl\covdet.h	/^  float y ;     \/**< center y-coordinate *\/$/;"	m	struct:_VlFrameOrientedEllipse
y	.\vlfeat\vl\dsift.h	/^  double y ; \/**< y coordinate *\/$/;"	m	struct:VlDsiftKeypoint_
y	.\vlfeat\vl\sift.h	/^  float y ;     \/**< y coordinate. *\/$/;"	m	struct:_VlSiftKeypoint
yi	.\vlfeat\vl\covdet.c	/^  vl_index yi ;$/;"	m	struct:_VlCovDetExtremum2	file:
yi	.\vlfeat\vl\covdet.c	/^  vl_index yi ;$/;"	m	struct:_VlCovDetExtremum3	file:
z	.\vlfeat\vl\covdet.c	/^  float z ;$/;"	m	struct:_VlCovDetExtremum3	file:
zi	.\vlfeat\vl\covdet.c	/^  vl_index zi ;$/;"	m	struct:_VlCovDetExtremum3	file:
